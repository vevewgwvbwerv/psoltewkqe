-- üé≠ ANIMATION FIXER - –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –≤ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–ø–∏—è—Ö –ø–∏—Ç–æ–º—Ü–µ–≤
-- –†–∞–±–æ—Ç–∞–µ—Ç –ü–û–°–õ–ï PetScaler - –Ω–∞—Ö–æ–¥–∏—Ç –∫–æ–ø–∏–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è
-- –ù–ï –¢–†–û–ì–ê–ï–¢ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π PetScaler!

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

print("üé≠ === ANIMATION FIXER - –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ò ===")
print("=" .. string.rep("=", 60))

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–ø–∏–π
local function findScaledCopies()
    local copies = {}
    
    for _, obj in pairs(Workspace:GetChildren()) do
        if obj:IsA("Model") and string.find(obj.Name, "_SCALED_COPY") then
            table.insert(copies, obj)
            print("üìã –ù–∞–π–¥–µ–Ω–∞ –∫–æ–ø–∏—è:", obj.Name)
        end
    end
    
    return copies
end

-- –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—É—â–∏—Ö Anchored —Å–æ—Å—Ç–æ—è–Ω–∏–π
local function analyzeAnchoredStates(model)
    local anchoredParts = {}
    local freeParts = {}
    local totalParts = 0
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            totalParts = totalParts + 1
            if obj.Anchored then
                table.insert(anchoredParts, obj.Name)
            else
                table.insert(freeParts, obj.Name)
            end
        end
    end
    
    print("üìä –ê–Ω–∞–ª–∏–∑ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è:", model.Name)
    print("   üß© –í—Å–µ–≥–æ —á–∞—Å—Ç–µ–π:", totalParts)
    print("   ‚öì –ó–∞—è–∫–æ—Ä–µ–Ω–Ω—ã—Ö:", #anchoredParts)
    print("   üé≠ –°–≤–æ–±–æ–¥–Ω—ã—Ö:", #freeParts)
    
    if #anchoredParts > 0 then
        print("   ‚öì –ó–∞—è–∫–æ—Ä–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏:", table.concat(anchoredParts, ", "))
    end
    
    return totalParts, #anchoredParts, #freeParts
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏
local function checkAnimationComponents(model)
    local hasAnimator = false
    local hasMotor6D = false
    local animatorLocation = "–Ω–µ –Ω–∞–π–¥–µ–Ω"
    local motor6dCount = 0
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º Animator
    local animator = model:FindFirstChildOfClass("Animator", true)
    if animator then
        hasAnimator = true
        animatorLocation = animator.Parent.Name
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º Motor6D
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("Motor6D") then
            motor6dCount = motor6dCount + 1
            hasMotor6D = true
        end
    end
    
    print("üîç –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏:")
    print("   üé¨ Animator:", hasAnimator and ("‚úÖ –Ω–∞–π–¥–µ–Ω –≤ " .. animatorLocation) or "‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    print("   üîß Motor6D:", hasMotor6D and ("‚úÖ –Ω–∞–π–¥–µ–Ω–æ " .. motor6dCount .. " —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π") or "‚ùå –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    return hasAnimator, hasMotor6D, motor6dCount
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Anchored —Å–æ—Å—Ç–æ—è–Ω–∏–π
local function fixAnchoredStates(model)
    print("\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏...")
    print("   –ú–æ–¥–µ–ª—å:", model.Name)
    
    -- –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å –¥–ª—è —è–∫–æ—Ä–µ–Ω–∏—è
    local anchorPart = nil
    local anchorPartName = "–Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    -- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ–∏—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Å—Ç–∏
    if model:FindFirstChild("RootPart") then
        anchorPart = model.RootPart
        anchorPartName = "RootPart"
    elseif model.PrimaryPart then
        anchorPart = model.PrimaryPart
        anchorPartName = "PrimaryPart (" .. model.PrimaryPart.Name .. ")"
    elseif model:FindFirstChild("Torso") then
        anchorPart = model.Torso
        anchorPartName = "Torso"
    elseif model:FindFirstChild("HumanoidRootPart") then
        anchorPart = model.HumanoidRootPart
        anchorPartName = "HumanoidRootPart"
    else
        -- –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —á–∞—Å—Ç—å
        for _, obj in pairs(model:GetDescendants()) do
            if obj:IsA("BasePart") then
                anchorPart = obj
                anchorPartName = obj.Name .. " (–ø–µ—Ä–≤–∞—è –Ω–∞–π–¥–µ–Ω–Ω–∞—è)"
                break
            end
        end
    end
    
    if not anchorPart then
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —á–∞—Å—Ç—å –¥–ª—è —è–∫–æ—Ä–µ–Ω–∏—è!")
        return false
    end
    
    print("‚öì –í—ã–±—Ä–∞–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å –¥–ª—è —è–∫–æ—Ä–µ–Ω–∏—è:", anchorPartName)
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è
    local fixedParts = 0
    local anchoredCount = 0
    local freeCount = 0
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            if obj == anchorPart then
                obj.Anchored = true
                anchoredCount = anchoredCount + 1
                print("   ‚öì –ó–∞—è–∫–æ—Ä–µ–Ω–∞:", obj.Name)
            else
                obj.Anchored = false
                freeCount = freeCount + 1
            end
            fixedParts = fixedParts + 1
        end
    end
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —á–∞—Å—Ç–µ–π:", fixedParts)
    print("   ‚öì –ó–∞—è–∫–æ—Ä–µ–Ω–Ω—ã—Ö:", anchoredCount)
    print("   üé≠ –°–≤–æ–±–æ–¥–Ω—ã—Ö –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏:", freeCount)
    
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
local function tryStartAnimation(model)
    print("\nüé¨ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    local animator = model:FindFirstChildOfClass("Animator", true)
    if not animator then
        print("‚ùå Animator –Ω–µ –Ω–∞–π–¥–µ–Ω - –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞")
        return false
    end
    
    print("‚úÖ Animator –Ω–∞–π–¥–µ–Ω –≤:", animator.Parent.Name)
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    local activeAnimations = animator:GetPlayingAnimationTracks()
    print("üé≠ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π:", #activeAnimations)
    
    if #activeAnimations > 0 then
        print("‚úÖ –ê–Ω–∏–º–∞—Ü–∏–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω—ã!")
        for i, track in ipairs(activeAnimations) do
            print(string.format("   üéµ %s (Playing: %s, Looped: %s)", 
                track.Name or "Unnamed",
                tostring(track.IsPlaying),
                tostring(track.Looped)
            ))
        end
        return true
    else
        print("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π")
        print("üí° –ê–Ω–∏–º–∞—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –µ—Å–ª–∏ –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        return false
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    print("üîç –ü–æ–∏—Å–∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–ø–∏–π...")
    
    local copies = findScaledCopies()
    
    if #copies == 0 then
        print("‚ùå –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("üí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–ø–∏—é —Å –ø–æ–º–æ—â—å—é PetScaler")
        return
    end
    
    print("üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–ø–∏–π:", #copies)
    print()
    
    -- –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∫–æ–ø–∏—é
    for i, copy in ipairs(copies) do
        print("üéØ === –û–ë–†–ê–ë–û–¢–ö–ê –ö–û–ü–ò–ò " .. i .. " ===")
        print("üìã –ú–æ–¥–µ–ª—å:", copy.Name)
        
        -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        local totalParts, anchoredParts, freeParts = analyzeAnchoredStates(copy)
        local hasAnimator, hasMotor6D, motor6dCount = checkAnimationComponents(copy)
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        if anchoredParts == totalParts then
            print("‚ö†Ô∏è –í–°–ï —á–∞—Å—Ç–∏ –∑–∞—è–∫–æ—Ä–µ–Ω—ã - –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞!")
            print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏–π")
            
            -- –ò—Å–ø—Ä–∞–≤–ª—è–µ–º Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è
            if fixAnchoredStates(copy) then
                print("‚úÖ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
                
                -- –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é
                wait(1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                tryStartAnimation(copy)
            else
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è")
            end
        elseif anchoredParts == 1 then
            print("‚úÖ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ (1 –∑–∞—è–∫–æ—Ä–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å)")
            tryStartAnimation(copy)
        else
            print("‚ö†Ô∏è –ù–µ–æ–±—ã—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Anchored - –ø—Ä–æ–≤–µ—Ä—è—é...")
            fixAnchoredStates(copy)
            wait(1)
            tryStartAnimation(copy)
        end
        
        print("-" .. string.rep("-", 50))
    end
    
    print("\nüéâ === –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===")
    print("üí° –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:")
    print("   ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏ Motor6D —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π")
    print("   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞—Ö —Å Animator –∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ç—Ä–µ–∫–∞–º–∏")
    print("   ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI —Å –∫–Ω–æ–ø–∫–æ–π
local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI –µ—Å–ª–∏ –µ—Å—Ç—å
    local oldGui = playerGui:FindFirstChild("AnimationFixerGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    -- –°–æ–∑–¥–∞–µ–º ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AnimationFixerGUI"
    screenGui.Parent = playerGui
    
    -- –°–æ–∑–¥–∞–µ–º Frame –¥–ª—è –∫–Ω–æ–ø–∫–∏
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 220, 0, 80)
    frame.Position = UDim2.new(0, 270, 0, 50) -- –†—è–¥–æ–º —Å PetScaler
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 100, 100) -- –ö—Ä–∞—Å–Ω–∞—è —Ä–∞–º–∫–∞
    frame.Parent = screenGui
    
    -- –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    local button = Instance.new("TextButton")
    button.Name = "FixButton"
    button.Size = UDim2.new(0, 200, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 20)
    button.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    button.BorderSizePixel = 0
    button.Text = "üé≠ –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ê–Ω–∏–º–∞—Ü–∏—é"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.Parent = frame
    
    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    button.MouseButton1Click:Connect(function()
        button.Text = "‚è≥ –ò—Å–ø—Ä–∞–≤–ª—è—é..."
        button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        -- –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        spawn(function()
            main()
            
            -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            wait(2)
            button.Text = "üé≠ –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ê–Ω–∏–º–∞—Ü–∏—é"
            button.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
        end)
    end)
    
    -- –≠—Ñ—Ñ–µ–∫—Ç –Ω–∞–≤–µ–¥–µ–Ω–∏—è
    button.MouseEnter:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(255, 100, 100) then
            button.BackgroundColor3 = Color3.fromRGB(220, 80, 80)
        end
    end)
    
    button.MouseLeave:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(220, 80, 80) then
            button.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
        end
    end)
    
    print("üñ•Ô∏è AnimationFixer GUI —Å–æ–∑–¥–∞–Ω! –ö–Ω–æ–ø–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —Ä—è–¥–æ–º —Å PetScaler")
end

-- –ó–∞–ø—É—Å–∫ GUI
createGUI()
print("=" .. string.rep("=", 60))
print("üí° –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
print("1. –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ PetScaler –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–π –∫–æ–ø–∏–∏")
print("2. –ó–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ '–ò—Å–ø—Ä–∞–≤–∏—Ç—å –ê–Ω–∏–º–∞—Ü–∏—é' –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –∫–æ–ø–∏–∏")
print("=" .. string.rep("=", 60))
