--[[
    FIXED ANIMATION RECORDER
    –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ –æ—à–∏–±–æ–∫
]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local isRecording = false
local animationData = {}
local currentRecording = nil
local recordingConnection = nil

-- GUI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FixedAnimationRecorder"
screenGui.Parent = CoreGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 400, 0, 500)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "üé¨ FIXED ANIMATION RECORDER"
title.TextColor3 = Color3.new(1, 1, 1)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.Parent = frame

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0, 25)
statusLabel.Position = UDim2.new(0, 0, 0, 35)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Status: Ready to record"
statusLabel.TextColor3 = Color3.new(1, 1, 1)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.Parent = frame

local recordButton = Instance.new("TextButton")
recordButton.Size = UDim2.new(0.8, 0, 0, 40)
recordButton.Position = UDim2.new(0.1, 0, 0, 65)
recordButton.BackgroundColor3 = Color3.new(1, 0, 0)
recordButton.Text = "üî¥ START RECORDING"
recordButton.TextColor3 = Color3.new(1, 1, 1)
recordButton.TextScaled = true
recordButton.Font = Enum.Font.Gotham
recordButton.Parent = frame

local logFrame = Instance.new("ScrollingFrame")
logFrame.Size = UDim2.new(1, -10, 1, -120)
logFrame.Position = UDim2.new(0, 5, 0, 115)
logFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
logFrame.BorderSizePixel = 0
logFrame.ScrollBarThickness = 8
logFrame.Parent = frame

local logText = Instance.new("TextLabel")
logText.Size = UDim2.new(1, -10, 1, 0)
logText.Position = UDim2.new(0, 5, 0, 0)
logText.BackgroundTransparency = 1
logText.Text = "–ì–æ—Ç–æ–≤ –∫ –∑–∞–ø–∏—Å–∏ –∞–Ω–∏–º–∞—Ü–∏–∏...\n"
logText.TextColor3 = Color3.new(1, 1, 1)
logText.TextSize = 11
logText.Font = Enum.Font.Code
logText.TextXAlignment = Enum.TextXAlignment.Left
logText.TextYAlignment = Enum.TextYAlignment.Top
logText.TextWrapped = true
logText.Parent = logFrame

local function log(message)
    local timestamp = string.format("%.2f", tick())
    logText.Text = logText.Text .. "[" .. timestamp .. "] " .. message .. "\n"
    logFrame.CanvasSize = UDim2.new(0, 0, 0, logText.TextBounds.Y)
    logFrame.CanvasPosition = Vector2.new(0, logFrame.CanvasSize.Y.Offset)
end

-- –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–µ–ª–∏
local function recordModelState(model, frameTime)
    local state = {
        time = frameTime,
        parts = {},
        modelExists = true
    }
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–¥–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not model or not model.Parent then
        state.modelExists = false
        return state
    end
    
    -- –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏
    local success, error = pcall(function()
        for _, part in ipairs(model:GetDescendants()) do
            if part and part:IsA("BasePart") and part.Parent then
                local partName = part.Name or "UnknownPart"
                state.parts[partName] = {
                    size = part.Size or Vector3.new(1,1,1),
                    position = part.Position or Vector3.new(0,0,0),
                    transparency = part.Transparency or 0,
                    canCollide = part.CanCollide or false
                }
            end
        end
        
        -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏
        if model.PrimaryPart then
            state.primaryPart = {
                size = model.PrimaryPart.Size,
                position = model.PrimaryPart.Position,
                transparency = model.PrimaryPart.Transparency
            }
        end
        
        -- –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏
        local success2, modelSize = pcall(function()
            return model:GetExtentsSize()
        end)
        if success2 then
            state.modelSize = modelSize
        end
        
    end)
    
    if not success then
        log("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –∫–∞–¥—Ä–∞: " .. tostring(error))
    end
    
    return state
end

-- –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏
local function startRecording(model)
    if isRecording then return end
    
    log("üé¨ –ù–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å –º–æ–¥–µ–ª–∏: " .. (model.Name or "Unknown"))
    
    isRecording = true
    currentRecording = {
        startTime = tick(),
        frames = {},
        model = model,
        modelName = model.Name or "Unknown"
    }
    
    statusLabel.Text = "üî¥ RECORDING: " .. currentRecording.modelName
    recordButton.Text = "‚èπÔ∏è STOP RECORDING"
    recordButton.BackgroundColor3 = Color3.new(0, 1, 0)
    
    -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    local initialState = recordModelState(model, 0)
    table.insert(currentRecording.frames, initialState)
    log("üìä –ó–∞–ø–∏—Å–∞–ª –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
    recordingConnection = RunService.Heartbeat:Connect(function()
        if not isRecording then
            return
        end
        
        local frameTime = tick() - currentRecording.startTime
        local state = recordModelState(model, frameTime)
        table.insert(currentRecording.frames, state)
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 10 –∫–∞–¥—Ä–æ–≤
        if #currentRecording.frames % 10 == 0 then
            statusLabel.Text = string.format("üî¥ REC: %.1fs (%d frames)", frameTime, #currentRecording.frames)
        end
        
        -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ—Å–ª–∏ –º–æ–¥–µ–ª—å –∏—Å—á–µ–∑–ª–∞
        if not state.modelExists then
            log("üí• –ú–æ–¥–µ–ª—å –∏—Å—á–µ–∑–ª–∞ - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–ø–∏—Å—å")
            stopRecording()
        end
        
        -- –ê–≤—Ç–æ—Å—Ç–æ–ø —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        if frameTime > 10 then
            log("‚è∞ –ê–≤—Ç–æ—Å—Ç–æ–ø —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥")
            stopRecording()
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏
function stopRecording()
    if not isRecording then return end
    
    isRecording = false
    
    if recordingConnection then
        recordingConnection:Disconnect()
        recordingConnection = nil
    end
    
    local duration = tick() - currentRecording.startTime
    
    statusLabel.Text = "‚úÖ Recording complete"
    recordButton.Text = "üî¥ START RECORDING"
    recordButton.BackgroundColor3 = Color3.new(1, 0, 0)
    
    log("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    log("‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: " .. string.format("%.2f", duration) .. " —Å–µ–∫—É–Ω–¥")
    log("üéûÔ∏è –ö–∞–¥—Ä–æ–≤ –∑–∞–ø–∏—Å–∞–Ω–æ: " .. #currentRecording.frames)
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    animationData[currentRecording.modelName] = currentRecording
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    analyzeAnimation(currentRecording)
end

-- –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
local function analyzeAnimation(recording)
    log("\n=== –ê–ù–ê–õ–ò–ó –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    if #recording.frames < 2 then
        log("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞–¥—Ä–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        return
    end
    
    local firstFrame = recording.frames[1]
    local lastFrame = recording.frames[#recording.frames]
    
    log("üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é " .. #recording.frames .. " –∫–∞–¥—Ä–æ–≤...")
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
    for partName, firstState in pairs(firstFrame.parts) do
        if lastFrame.parts[partName] then
            local startSize = firstState.size
            local endSize = lastFrame.parts[partName].size
            
            if startSize and endSize then
                local sizeChange = endSize.Magnitude / startSize.Magnitude
                
                if sizeChange > 1.2 then
                    log("üìà " .. partName .. " —É–≤–µ–ª–∏—á–∏–ª—Å—è –≤ " .. string.format("%.2f", sizeChange) .. " —Ä–∞–∑")
                elseif sizeChange < 0.8 then
                    log("üìâ " .. partName .. " —É–º–µ–Ω—å—à–∏–ª—Å—è –≤ " .. string.format("%.2f", 1/sizeChange) .. " —Ä–∞–∑")
                end
            end
            
            local startTrans = firstState.transparency or 0
            local endTrans = lastFrame.parts[partName].transparency or 0
            
            if math.abs(endTrans - startTrans) > 0.1 then
                log("üí´ " .. partName .. " –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å: " .. string.format("%.2f", startTrans) .. " ‚Üí " .. string.format("%.2f", endTrans))
            end
        end
    end
    
    log("üéØ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
end

-- –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
recordButton.MouseButton1Click:Connect(function()
    if isRecording then
        stopRecording()
    else
        statusLabel.Text = "‚è≥ Waiting for pet..."
        log("‚è≥ –ñ–¥—É –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —è–π—Ü–∞...")
    end
end)

-- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –≤ Visuals
local visuals = Workspace:FindFirstChild("Visuals")
if visuals then
    log("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ Visuals")
    
    visuals.ChildAdded:Connect(function(child)
        if child:IsA("Model") and not isRecording then
            log("üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –º–æ–¥–µ–ª—å: " .. (child.Name or "Unknown"))
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–∏—Ç–æ–º–µ—Ü (–Ω–µ —ç—Ñ—Ñ–µ–∫—Ç)
            if child.Name and not child.Name:find("Egg") and not child.Name:find("Explode") and not child.Name:find("Poof") then
                wait(0.1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
                
                if statusLabel.Text:find("Waiting") or recordButton.Text == "‚èπÔ∏è STOP RECORDING" then
                    startRecording(child)
                end
            else
                log("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞—é —ç—Ñ—Ñ–µ–∫—Ç: " .. (child.Name or "Unknown"))
            end
        end
    end)
else
    log("‚ùå –ü–∞–ø–∫–∞ Visuals –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
end

log("üé¨ Fixed Animation Recorder –≥–æ—Ç–æ–≤!")
log("üìã –ù–∞–∂–º–∏ START RECORDING –∏ –æ—Ç–∫—Ä–æ–π —è–π—Ü–æ")

print("üé¨ Fixed Animation Recorder loaded!")
