-- ‚ö° –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –í–ò–ó–£–ê–õ–¨–ù–ê–Ø –ó–ê–ú–ï–ù–ê - –ë—ã—Å—Ç—Ä–∞—è –ø–æ–¥–º–µ–Ω–∞ –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞
print("‚ö° –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –≤–∏–∑—É–∞–ª—å–Ω–æ–π –∑–∞–º–µ–Ω—ã...")

local players = game:GetService("Players")
local workspace = game:GetService("Workspace")
local replicatedStorage = game:GetService("ReplicatedStorage")
local runService = game:GetService("RunService")
local localPlayer = players.LocalPlayer

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local espEnabled = true
local replacementActive = true

-- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤ –ø–æ —è–π—Ü–∞–º
local eggChances = {
    ["Common Egg"] = {"Dog", "Bunny", "Golden Lab"},
    ["Uncommon Egg"] = {"Black Bunny", "Chicken", "Cat", "Deer"},
    ["Rare Egg"] = {"Orange Tabby", "Spotted Deer", "Pig", "Rooster", "Monkey"},
    ["Legendary Egg"] = {"Cow", "Silver Monkey", "Sea Otter", "Turtle", "Polar Bear"},
    ["Mythic Egg"] = {"Grey Mouse", "Brown Mouse", "Squirrel", "Red Giant Ant", "Red Fox"},
    ["Bug Egg"] = {"Snail", "Giant Ant", "Caterpillar", "Praying Mantis", "Dragon Fly"},
    ["Night Egg"] = {"Hedgehog", "Mole", "Frog", "Echo Frog", "Night Owl", "Raccoon"},
    ["Bee Egg"] = {"Bee", "Honey Bee", "Bear Bee", "Petal Bee", "Queen Bee"},
    ["Anti Bee Egg"] = {"Wasp", "Tarantula Hawk", "Moth", "Butterfly", "Disco Bee"},
    ["Common Summer Egg"] = {"Starfish", "Seafull", "Crab"},
    ["Rare Summer Egg"] = {"Flamingo", "Toucan", "Sea Turtle", "Orangutan", "Seal"},
    ["Paradise Egg"] = {"Ostrich", "Peacock", "Capybara", "Scarlet Macaw", "Mimic Octopus"},
    ["Premium Night Egg"] = {"Hedgehog", "Mole", "Frog", "Echo Frog"},
    ["Dinosaur Egg"] = {"Raptor", "Triceratops", "T-Rex", "Stegosaurus", "Pterodactyl", "Brontosaurus"}
}

-- –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
local displayedEggs = {}
local replacementLog = {}
local petModels = {}

-- –ö—ç—à –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
local function cachePetModels()
    print("üîç –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤...")
    
    -- –ü–æ–∏—Å–∫ –≤ ReplicatedStorage
    for _, obj in pairs(replicatedStorage:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            local modelName = obj.Name
            petModels[modelName] = obj
            
            -- –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π
            petModels[modelName:lower()] = obj
            petModels[modelName:gsub(" ", "")] = obj
            petModels[modelName:gsub(" ", "_")] = obj
        end
    end
    
    print("‚úÖ –ó–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–æ –º–æ–¥–µ–ª–µ–π: " .. #petModels)
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞
local function getPetModel(petName)
    -- –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if petModels[petName] then
        return petModels[petName]
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–∑–≤–∞–Ω–∏–π
    local variants = {
        petName,
        petName:lower(),
        petName:upper(),
        petName:gsub(" ", ""),
        petName:gsub(" ", "_"),
        petName:gsub(" ", "-")
    }
    
    for _, variant in pairs(variants) do
        if petModels[variant] then
            return petModels[variant]
        end
    end
    
    -- –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫—ç—à–µ, –∏—â–µ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    for _, obj in pairs(replicatedStorage:GetDescendants()) do
        if obj:IsA("Model") and obj:FindFirstChildOfClass("Humanoid") then
            for _, variant in pairs(variants) do
                if obj.Name == variant then
                    petModels[petName] = obj -- –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫—ç—à
                    return obj
                end
            end
        end
    end
    
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è ESP
local function createEspGui(egg, eggName, petName)
    if egg:FindFirstChild("EggESP") then
        egg:FindFirstChild("EggESP"):Destroy()
    end
    
    local adornee = egg:FindFirstChildWhichIsA("BasePart") or egg.PrimaryPart
    if not adornee then return nil end

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "EggESP"
    billboard.Adornee = adornee
    billboard.Size = UDim2.new(0, 200, 0, 60)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true

    local eggLabel = Instance.new("TextLabel")
    eggLabel.Size = UDim2.new(1, 0, 0.5, 0)
    eggLabel.BackgroundTransparency = 1
    eggLabel.Text = eggName
    eggLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    eggLabel.TextStrokeTransparency = 0
    eggLabel.TextScaled = true
    eggLabel.Font = Enum.Font.SourceSansBold
    eggLabel.Parent = billboard

    local petLabel = Instance.new("TextLabel")
    petLabel.Name = "PetLabel"
    petLabel.Size = UDim2.new(1, 0, 0.5, 0)
    petLabel.Position = UDim2.new(0, 0, 0.5, 0)
    petLabel.BackgroundTransparency = 1
    petLabel.Text = petName
    petLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    petLabel.TextStrokeTransparency = 0
    petLabel.TextScaled = true
    petLabel.Font = Enum.Font.SourceSansBold
    petLabel.Parent = billboard

    billboard.Parent = egg
    return billboard
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —è–∏—Ü
local function findEggs()
    local eggs = {}
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") and string.find(obj.Name, "Egg") then
            local eggName = obj.Name
            if eggChances[eggName] then
                table.insert(eggs, obj)
            end
        end
    end
    return eggs
end

-- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ESP –∫ —è–π—Ü—É
local function addESP(egg)
    if displayedEggs[egg] then return end
    
    local eggName = egg.Name
    if not eggChances[eggName] then return end

    local availablePets = eggChances[eggName]
    local randomPet = availablePets[math.random(1, #availablePets)]
    
    local espGui = nil
    if espEnabled then
        espGui = createEspGui(egg, eggName, randomPet)
    end
    
    displayedEggs[egg] = {
        egg = egg,
        gui = espGui,
        eggName = eggName,
        currentPet = randomPet,
        availablePets = availablePets
    }
    
    print("ü•ö ESP –¥–æ–±–∞–≤–ª–µ–Ω: " .. eggName .. " ‚Üí " .. randomPet)
end

-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è ESP
local function toggleESP()
    espEnabled = not espEnabled
    
    for egg, data in pairs(displayedEggs) do
        if espEnabled then
            if not data.gui then
                data.gui = createEspGui(egg, data.eggName, data.currentPet)
            end
        else
            if data.gui then
                data.gui:Destroy()
                data.gui = nil
            end
        end
    end
    
    print(espEnabled and "üü¢ ESP –≤–∫–ª—é—á–µ–Ω" or "üî¥ ESP –≤—ã–∫–ª—é—á–µ–Ω")
end

-- –§—É–Ω–∫—Ü–∏—è —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏–∏ –ø–∏—Ç–æ–º—Ü–µ–≤
local function randomizePets()
    local randomizedCount = 0
    
    for egg, data in pairs(displayedEggs) do
        local newPet = data.availablePets[math.random(1, #data.availablePets)]
        data.currentPet = newPet
        
        if espEnabled and data.gui then
            local petLabel = data.gui:FindFirstChild("PetLabel")
            if petLabel then
                petLabel.Text = newPet
            end
        end
        
        randomizedCount = randomizedCount + 1
        print("üé≤ " .. data.eggName .. " ‚Üí " .. newPet)
    end
    
    print("üé≤ –†–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø–∏—Ç–æ–º—Ü–µ–≤: " .. randomizedCount)
end

-- ‚ö° –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ó–ê–ú–ï–ù–ê –ü–ò–¢–û–ú–¶–ê
local function instantReplacePet(originalPet, targetPetName, eggPosition)
    print("‚ö° –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ó–ê–ú–ï–ù–ê: " .. originalPet.Name .. " ‚Üí " .. targetPetName)
    
    -- –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª—å —Ü–µ–ª–µ–≤–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
    local targetModel = getPetModel(targetPetName)
    if not targetModel then
        print("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: " .. targetPetName)
        return false
    end
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
    local originalData = {
        parent = originalPet.Parent,
        cframe = originalPet.PrimaryPart and originalPet.PrimaryPart.CFrame or 
                originalPet:FindFirstChildWhichIsA("BasePart") and originalPet:FindFirstChildWhichIsA("BasePart").CFrame,
        name = originalPet.Name,
        attributes = {}
    }
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∞—Ç—Ä–∏–±—É—Ç—ã
    for attr, value in pairs(originalPet:GetAttributes()) do
        originalData.attributes[attr] = value
    end
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å
    local newPet = targetModel:Clone()
    newPet.Name = originalData.name -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    
    -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
    if originalData.cframe then
        if newPet.PrimaryPart then
            newPet.PrimaryPart.CFrame = originalData.cframe
        elseif newPet:FindFirstChildWhichIsA("BasePart") then
            newPet:FindFirstChildWhichIsA("BasePart").CFrame = originalData.cframe
        end
    end
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
    for attr, value in pairs(originalData.attributes) do
        newPet:SetAttribute(attr, value)
    end
    
    -- –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –∑–∞–º–µ–Ω–∞
    originalPet:Destroy()
    newPet.Parent = originalData.parent
    
    -- –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–º–µ–Ω—É
    table.insert(replacementLog, {
        time = tick(),
        original = originalPet.Name,
        target = targetPetName,
        success = true,
        method = "instant_visual"
    })
    
    print("‚úÖ –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ó–ê–ú–ï–ù–ê –ó–ê–í–ï–†–®–ï–ù–ê: " .. targetPetName)
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–∏—Ç–æ–º—Ü–∞
local function isPetModel(obj)
    if not obj:IsA("Model") then return false end
    
    local humanoid = obj:FindFirstChildOfClass("Humanoid")
    if not humanoid then return false end
    
    local hasHead = obj:FindFirstChild("Head")
    local hasTorso = obj:FindFirstChild("Torso") or obj:FindFirstChild("UpperTorso")
    
    return hasHead and hasTorso
end

-- ‚ö° –°–ò–°–¢–ï–ú–ê –ú–ì–ù–û–í–ï–ù–ù–û–ì–û –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê
local function setupInstantMonitoring()
    -- 1. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ workspace —Å –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π
    workspace.ChildAdded:Connect(function(child)
        if not replacementActive then return end
        
        if isPetModel(child) then
            -- –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫
            spawn(function()
                print("üêæ –û–ë–ù–ê–†–£–ñ–ï–ù –ü–ò–¢–û–ú–ï–¶: " .. child.Name)
                
                -- –ò—â–µ–º –±–ª–∏–∂–∞–π—à–∏–π ESP –¥–ª—è –∑–∞–º–µ–Ω—ã
                local targetPet = nil
                local minDistance = math.huge
                local childPos = child.PrimaryPart and child.PrimaryPart.Position or 
                                child:FindFirstChildWhichIsA("BasePart") and child:FindFirstChildWhichIsA("BasePart").Position
                
                if childPos then
                    for egg, data in pairs(displayedEggs) do
                        if data.currentPet then
                            local eggPos = egg.PrimaryPart and egg.PrimaryPart.Position or 
                                          egg:FindFirstChildWhichIsA("BasePart") and egg:FindFirstChildWhichIsA("BasePart").Position
                            
                            if eggPos then
                                local distance = (childPos - eggPos).Magnitude
                                if distance < minDistance and distance < 100 then
                                    minDistance = distance
                                    targetPet = data.currentPet
                                end
                            end
                        end
                    end
                    
                    -- –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω ESP –∏ –ø–∏—Ç–æ–º–µ—Ü –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç - –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ó–ê–ú–ï–ù–ê
                    if targetPet and targetPet ~= child.Name then
                        print("üéØ –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï! ESP: " .. targetPet .. ", –í—ã–ø–∞–ª: " .. child.Name)
                        instantReplacePet(child, targetPet, childPos)
                    else
                        print("‚úÖ –ü–∏—Ç–æ–º–µ—Ü —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç ESP: " .. (targetPet or "–Ω–µ—Ç ESP"))
                    end
                end
            end)
        end
    end)
    
    -- 2. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ NPCS –ø–∞–ø–∫–∏
    local npcsFolder = workspace:FindFirstChild("NPCS")
    if npcsFolder then
        npcsFolder.ChildAdded:Connect(function(child)
            if not replacementActive then return end
            
            if isPetModel(child) then
                spawn(function()
                    print("üë• –ü–ò–¢–û–ú–ï–¶ –í NPCS: " .. child.Name)
                    
                    -- –ò—â–µ–º –ª—é–±–æ–π ESP –¥–ª—è –∑–∞–º–µ–Ω—ã
                    for egg, data in pairs(displayedEggs) do
                        if data.currentPet and data.currentPet ~= child.Name then
                            print("üîÑ –ó–ê–ú–ï–ù–ê –í NPCS: " .. data.currentPet)
                            instantReplacePet(child, data.currentPet, nil)
                            break
                        end
                    end
                end)
            end
        end)
    end
    
    -- 3. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
    runService.Heartbeat:Connect(function()
        if not replacementActive then return end
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–æ–≤—ã–µ –ø–∏—Ç–æ–º—Ü—ã –≤ workspace
        for _, obj in pairs(workspace:GetChildren()) do
            if isPetModel(obj) and not obj:GetAttribute("ProcessedByReplacer") then
                obj:SetAttribute("ProcessedByReplacer", true)
                
                spawn(function()
                    -- –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ESP
                    local objPos = obj.PrimaryPart and obj.PrimaryPart.Position or 
                                  obj:FindFirstChildWhichIsA("BasePart") and obj:FindFirstChildWhichIsA("BasePart").Position
                    
                    if objPos then
                        for egg, data in pairs(displayedEggs) do
                            if data.currentPet then
                                local eggPos = egg.PrimaryPart and egg.PrimaryPart.Position or 
                                              egg:FindFirstChildWhichIsA("BasePart") and egg:FindFirstChildWhichIsA("BasePart").Position
                                
                                if eggPos and (objPos - eggPos).Magnitude < 50 then
                                    if data.currentPet ~= obj.Name then
                                        print("‚ö° HEARTBEAT –ó–ê–ú–ï–ù–ê: " .. obj.Name .. " ‚Üí " .. data.currentPet)
                                        instantReplacePet(obj, data.currentPet, objPos)
                                        break
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        end
    end)
end

-- –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —è–∏—Ü
local function scanForEggs()
    local eggs = findEggs()
    for _, egg in pairs(eggs) do
        addESP(egg)
    end
    print("üîç –ù–∞–π–¥–µ–Ω–æ —è–∏—Ü: " .. #eggs)
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö —è–∏—Ü
workspace.ChildAdded:Connect(function(child)
    wait(0.1)
    if child:IsA("Model") and string.find(child.Name, "Egg") and eggChances[child.Name] then
        addESP(child)
    end
end)

-- üé® –°–û–í–†–ï–ú–ï–ù–ù–û–ï –ö–†–ê–°–ò–í–û–ï GUI
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ GUI
local gui = Instance.new("ScreenGui")
gui.Name = "ModernInstantReplacerGUI"
gui.ResetOnSpawn = false
gui.Parent = localPlayer:WaitForChild("PlayerGui")

-- –ì–ª–∞–≤–Ω–∞—è —Ä–∞–º–∫–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 280, 0, 340)
mainFrame.Position = UDim2.new(0, 20, 0, 20)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Parent = gui

-- –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Ä–∞–º–∫–∏
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = mainFrame

-- –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
}
gradient.Rotation = 45
gradient.Parent = mainFrame

-- –¢–µ–Ω—å –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Ä–∞–º–∫–∏
local shadow = Instance.new("Frame")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 6, 1, 6)
shadow.Position = UDim2.new(0, -3, 0, -3)
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.7
shadow.BorderSizePixel = 0
shadow.ZIndex = -1
shadow.Parent = mainFrame

local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 15)
shadowCorner.Parent = shadow

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
local titleFrame = Instance.new("Frame")
titleFrame.Name = "TitleFrame"
titleFrame.Size = UDim2.new(1, 0, 0, 50)
titleFrame.Position = UDim2.new(0, 0, 0, 0)
titleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 85)
titleFrame.BorderSizePixel = 0
titleFrame.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = titleFrame

-- –ì—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 80, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(80, 120, 255))
}
titleGradient.Rotation = 90
titleGradient.Parent = titleFrame

-- –¢–µ–∫—Å—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -40, 1, 0)
titleLabel.Position = UDim2.new(0, 40, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "EGG RANDOMIZER V2"
titleLabel.TextColor3 = Color3.new(1, 1, 1)
titleLabel.TextSize = 16
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleFrame

-- –ò–∫–æ–Ω–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
local titleIcon = Instance.new("TextLabel")
titleIcon.Name = "TitleIcon"
titleIcon.Size = UDim2.new(0, 30, 0, 30)
titleIcon.Position = UDim2.new(0, 10, 0, 10)
titleIcon.BackgroundTransparency = 1
titleIcon.Text = "ü•ö"
titleIcon.TextColor3 = Color3.new(1, 1, 1)
titleIcon.TextSize = 20
titleIcon.Font = Enum.Font.Gotham
titleIcon.Parent = titleFrame

-- –ö–Ω–æ–ø–∫–∞ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏
local minimizeButton = Instance.new("TextButton")
minimizeButton.Name = "MinimizeButton"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -40, 0, 10)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
minimizeButton.BorderSizePixel = 0
minimizeButton.Text = "‚àí"
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.TextSize = 18
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Parent = titleFrame

local minimizeCorner = Instance.new("UICorner")
minimizeCorner.CornerRadius = UDim.new(0, 15)
minimizeCorner.Parent = minimizeButton

-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
local buttonsFrame = Instance.new("Frame")
buttonsFrame.Name = "ButtonsFrame"
buttonsFrame.Size = UDim2.new(1, -20, 1, -70)
buttonsFrame.Position = UDim2.new(0, 10, 0, 60)
buttonsFrame.BackgroundTransparency = 1
buttonsFrame.Parent = mainFrame

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏
local function createModernButton(name, text, position, size, color1, color2, icon)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = size or UDim2.new(1, 0, 0, 45)
    button.Position = position
    button.BackgroundColor3 = color1
    button.BorderSizePixel = 0
    button.Text = ""
    button.Parent = buttonsFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, color1),
        ColorSequenceKeypoint.new(1, color2)
    }
    buttonGradient.Rotation = 45
    buttonGradient.Parent = button
    
    -- –ò–∫–æ–Ω–∫–∞ –∫–Ω–æ–ø–∫–∏
    local buttonIcon = Instance.new("TextLabel")
    buttonIcon.Name = "Icon"
    buttonIcon.Size = UDim2.new(0, 25, 0, 25)
    buttonIcon.Position = UDim2.new(0, 10, 0, 10)
    buttonIcon.BackgroundTransparency = 1
    buttonIcon.Text = icon or "üîπ"
    buttonIcon.TextColor3 = Color3.new(1, 1, 1)
    buttonIcon.TextSize = 16
    buttonIcon.Font = Enum.Font.Gotham
    buttonIcon.Parent = button
    
    -- –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    local buttonText = Instance.new("TextLabel")
    buttonText.Name = "Text"
    buttonText.Size = UDim2.new(1, -45, 1, 0)
    buttonText.Position = UDim2.new(0, 40, 0, 0)
    buttonText.BackgroundTransparency = 1
    buttonText.Text = text
    buttonText.TextColor3 = Color3.new(1, 1, 1)
    buttonText.TextSize = 14
    buttonText.Font = Enum.Font.GothamSemibold
    buttonText.TextXAlignment = Enum.TextXAlignment.Left
    buttonText.Parent = button
    
    -- –°—Ç–∞—Ç—É—Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    local statusIndicator = Instance.new("Frame")
    statusIndicator.Name = "StatusIndicator"
    statusIndicator.Size = UDim2.new(0, 8, 0, 8)
    statusIndicator.Position = UDim2.new(1, -15, 0, 18)
    statusIndicator.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
    statusIndicator.BorderSizePixel = 0
    statusIndicator.Parent = button
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 4)
    statusCorner.Parent = statusIndicator
    
    -- –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    button.MouseEnter:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2), {Size = UDim2.new(1, 5, 0, 50)})
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween = TweenService:Create(button, TweenInfo.new(0.2), {Size = size or UDim2.new(1, 0, 0, 45)})
        tween:Play()
    end)
    
    return button, buttonText, statusIndicator
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
local espButton, espText, espStatus = createModernButton(
    "ESPButton", "ESP SYSTEM", 
    UDim2.new(0, 0, 0, 0), 
    UDim2.new(1, 0, 0, 45),
    Color3.fromRGB(100, 200, 100), Color3.fromRGB(50, 150, 50), "üëÅÔ∏è"
)

local randomizeButton, randomizeText, randomizeStatus = createModernButton(
    "RandomizeButton", "RANDOMIZE PETS", 
    UDim2.new(0, 0, 0, 55), 
    UDim2.new(1, 0, 0, 45),
    Color3.fromRGB(100, 100, 200), Color3.fromRGB(50, 50, 150), "üé≤"
)

local replaceButton, replaceText, replaceStatus = createModernButton(
    "ReplaceButton", "INSTANT REPLACE", 
    UDim2.new(0, 0, 0, 110), 
    UDim2.new(1, 0, 0, 45),
    Color3.fromRGB(200, 100, 200), Color3.fromRGB(150, 50, 150), "‚ö°"
)

local logButton, logText, logStatus = createModernButton(
    "LogButton", "VIEW REPLACEMENTS", 
    UDim2.new(0, 0, 0, 165), 
    UDim2.new(1, 0, 0, 45),
    Color3.fromRGB(200, 150, 50), Color3.fromRGB(150, 100, 25), "üìä"
)

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–Ω–∏–∑—É
local statsFrame = Instance.new("Frame")
statsFrame.Name = "StatsFrame"
statsFrame.Size = UDim2.new(1, -20, 0, 30)
statsFrame.Position = UDim2.new(0, 10, 1, -60)
statsFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
statsFrame.BorderSizePixel = 0
statsFrame.Parent = mainFrame

local statsCorner = Instance.new("UICorner")
statsCorner.CornerRadius = UDim.new(0, 6)
statsCorner.Parent = statsFrame

local statsLabel = Instance.new("TextLabel")
statsLabel.Name = "StatsLabel"
statsLabel.Size = UDim2.new(1, -10, 1, 0)
statsLabel.Position = UDim2.new(0, 5, 0, 0)
statsLabel.BackgroundTransparency = 1
statsLabel.Text = "üìà Replacements: 0 | ü•ö Eggs: 0 | ‚ö° Active"
statsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
statsLabel.TextSize = 11
statsLabel.Font = Enum.Font.Gotham
statsLabel.TextXAlignment = Enum.TextXAlignment.Left
statsLabel.Parent = statsFrame

-- –ü–æ–¥–ø–∏—Å—å –∞–≤—Ç–æ—Ä–∞
local authorFrame = Instance.new("Frame")
authorFrame.Name = "AuthorFrame"
authorFrame.Size = UDim2.new(1, -20, 0, 20)
authorFrame.Position = UDim2.new(0, 10, 1, -30)
authorFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
authorFrame.BorderSizePixel = 0
authorFrame.Parent = mainFrame

local authorCorner = Instance.new("UICorner")
authorCorner.CornerRadius = UDim.new(0, 4)
authorCorner.Parent = authorFrame

local authorGradient = Instance.new("UIGradient")
authorGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(20, 20, 30))
}
authorGradient.Rotation = 90
authorGradient.Parent = authorFrame

local authorLabel = Instance.new("TextLabel")
authorLabel.Name = "AuthorLabel"
authorLabel.Size = UDim2.new(1, -10, 1, 0)
authorLabel.Position = UDim2.new(0, 5, 0, 0)
authorLabel.BackgroundTransparency = 1
authorLabel.Text = "made by TW2LOCK"
authorLabel.TextColor3 = Color3.fromRGB(150, 150, 170)
authorLabel.TextSize = 10
authorLabel.Font = Enum.Font.GothamSemibold
authorLabel.TextXAlignment = Enum.TextXAlignment.Center
authorLabel.Parent = authorFrame

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
local dragging = false
local dragStart = nil
local startPos = nil

local function updateDrag(input)
    if dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

titleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        updateDrag(input)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        updateDrag(input)
    end
end)

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
local function updateStats()
    local eggCount = 0
    for _ in pairs(displayedEggs) do
        eggCount = eggCount + 1
    end
    
    local status = replacementActive and "‚ö° Active" or "‚è∏Ô∏è Paused"
    statsLabel.Text = string.format("üìà Replacements: %d | ü•ö Eggs: %d | %s", #replacementLog, eggCount, status)
end

-- –§—É–Ω–∫—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
local function animateButtonPress(button)
    local originalSize = button.Size
    local tween1 = TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(originalSize.X.Scale - 0.02, originalSize.X.Offset, originalSize.Y.Scale, originalSize.Y.Offset - 2)})
    local tween2 = TweenService:Create(button, TweenInfo.new(0.1), {Size = originalSize})
    
    tween1:Play()
    tween1.Completed:Connect(function()
        tween2:Play()
    end)
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–Ω–æ–ø–æ–∫
espButton.MouseButton1Click:Connect(function()
    animateButtonPress(espButton)
    toggleESP()
    if espEnabled then
        espText.Text = "ESP SYSTEM (ON)"
        espStatus.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
    else
        espText.Text = "ESP SYSTEM (OFF)"
        espStatus.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    end
    updateStats()
end)

randomizeButton.MouseButton1Click:Connect(function()
    animateButtonPress(randomizeButton)
    randomizePets()
    updateStats()
end)

replaceButton.MouseButton1Click:Connect(function()
    animateButtonPress(replaceButton)
    replacementActive = not replacementActive
    if replacementActive then
        replaceText.Text = "INSTANT REPLACE (ON)"
        replaceStatus.BackgroundColor3 = Color3.fromRGB(100, 255, 100)
        print("‚ö° –ó–∞–º–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞")
    else
        replaceText.Text = "INSTANT REPLACE (OFF)"
        replaceStatus.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
        print("‚è∏Ô∏è –ó–∞–º–µ–Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞")
    end
    updateStats()
end)

logButton.MouseButton1Click:Connect(function()
    animateButtonPress(logButton)
    print("\n‚ö° –õ–û–ì –ú–ì–ù–û–í–ï–ù–ù–´–• –ó–ê–ú–ï–ù:")
    for i, entry in ipairs(replacementLog) do
        print("‚úÖ " .. entry.original .. " ‚Üí " .. entry.target .. " (" .. entry.method .. ")")
    end
    print("üìä –í—Å–µ–≥–æ –∑–∞–º–µ–Ω: " .. #replacementLog)
    updateStats()
end)

-- –§—É–Ω–∫—Ü–∏—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    
    if isMinimized then
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 280, 0, 50)})
        tween:Play()
        minimizeButton.Text = "+"
        buttonsFrame.Visible = false
        statsFrame.Visible = false
        authorFrame.Visible = false
    else
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 280, 0, 340)})
        tween:Play()
        minimizeButton.Text = "‚àí"
        buttonsFrame.Visible = true
        statsFrame.Visible = true
        authorFrame.Visible = true
    end
end)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
updateStats()

-- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
spawn(function()
    while wait(2) do
        updateStats()
    end
end)

-- –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
cachePetModels()
scanForEggs()
setupInstantMonitoring()

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
_G.InstantReplacer = {
    espEnabled = espEnabled,
    replacementActive = replacementActive,
    displayedEggs = displayedEggs,
    replacementLog = replacementLog,
    petModels = petModels,
    instantReplacePet = instantReplacePet
}

print("‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –ó–ê–ú–ï–ù–ò–¢–ï–õ–¨ –ó–ê–ì–†–£–ñ–ï–ù!")
print("üî• –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
print("   - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏")
print("   - –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫")
print("   - –¢—Ä–æ–π–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (workspace, NPCS, heartbeat)")
print("   - –ü–æ–ª–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–æ–≤")
print("‚ö° –¢–µ–ø–µ—Ä—å –∑–∞–º–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ú–ì–ù–û–í–ï–ù–ù–û–ô!")
