--[[
    PET ANIMATION PLAYER
    –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç–æ—á–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é —Ä–æ—Å—Ç–∞ –Ω–∞ –ø–∏—Ç–æ–º—Ü–µ –∏–∑ —Ä—É–∫–∏
    –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: —Ä–æ—Å—Ç –≤ 1.88 —Ä–∞–∑ –¥–ª—è –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π
]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local isActive = true

print("üé¨ Pet Animation Player –∑–∞–≥—Ä—É–∂–µ–Ω!")
print("üìä –î–∞–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏: —Ä–æ—Å—Ç –≤ 1.88 —Ä–∞–∑, –≤—Å–µ —á–∞—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ")

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —Ä—É–∫–∏
local function getHandPet()
    if not player.Character then return nil end
    
    for _, tool in pairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") then
            local model = tool:FindFirstChildWhichIsA("Model")
            if model then
                return model
            end
        end
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞
local function clonePet(originalModel)
    local clone = originalModel:Clone()
    
    -- –£–±–∏—Ä–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏–∑ –∫–ª–æ–Ω–∞
    for _, script in pairs(clone:GetDescendants()) do
        if script:IsA("BaseScript") or script:IsA("LocalScript") then
            script:Destroy()
        end
    end
    
    return clone
end

-- –§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä–æ—Å—Ç–∞
local function playGrowthAnimation(model, targetPosition)
    print("üé¨ –ù–∞—á–∏–Ω–∞—é –∞–Ω–∏–º–∞—Ü–∏—é —Ä–æ—Å—Ç–∞ –¥–ª—è: " .. model.Name)
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
    if model.PrimaryPart then
        model:SetPrimaryPartCFrame(targetPosition)
    else
        model:MoveTo(targetPosition.Position)
    end
    
    model.Parent = Workspace
    
    -- –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã —Ä–∞—Å—Ç–∏ (–∏–∑ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
    local growingParts = {
        "LeftEar", "FrontLegL", "RightEar", "LeftLegL", "Torso", 
        "FrontLegR", "Jaw", "BackLegL", "BackLegR", "Tail", 
        "Mouth", "RightEye", "LeftEye", "Head"
    }
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ
    local originalSizes = {}
    local tweens = {}
    
    for _, part in pairs(model:GetDescendants()) do
        if part:IsA("BasePart") then
            originalSizes[part] = part.Size
            
            -- –ù–∞—á–∏–Ω–∞–µ–º —Å –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ (1/1.88 –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞)
            local startSize = part.Size / 1.88
            part.Size = startSize
            part.Transparency = 0.8  -- –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–º–∏
            part.Anchored = true     -- –§–∏–∫—Å–∏—Ä—É–µ–º —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª–∏
            
            -- –°–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Ä–æ—Å—Ç–∞
            local growTween = TweenService:Create(part, 
                TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                {
                    Size = originalSizes[part],
                    Transparency = 0
                }
            )
            
            table.insert(tweens, growTween)
        end
    end
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    print("üìà –ó–∞–ø—É—Å–∫–∞—é —Ä–æ—Å—Ç –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π –≤ 1.88 —Ä–∞–∑...")
    for _, tween in pairs(tweens) do
        tween:Play()
    end
    
    -- –ß–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã —É–¥–∞–ª—è–µ–º –º–æ–¥–µ–ª—å (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
    wait(4)
    
    print("üí• –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —É–¥–∞–ª—è—é –º–æ–¥–µ–ª—å")
    
    -- –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    local fadeTweens = {}
    for _, part in pairs(model:GetDescendants()) do
        if part:IsA("BasePart") then
            local fadeTween = TweenService:Create(part,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad),
                { Transparency = 1 }
            )
            table.insert(fadeTweens, fadeTween)
        end
    end
    
    for _, tween in pairs(fadeTweens) do
        tween:Play()
    end
    
    wait(0.5)
    model:Destroy()
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —è–π—Ü–∞
local function replacePetWithAnimation(eggPetModel)
    if not isActive then return end
    
    print("üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–∏—Ç–æ–º–µ—Ü –∏–∑ —è–π—Ü–∞: " .. eggPetModel.Name)
    
    -- –ü–æ–ª—É—á–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —Ä—É–∫–∏
    local handPet = getHandPet()
    if not handPet then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    print("‚úÖ –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–∞–π–¥–µ–Ω: " .. handPet.Name)
    
    -- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —è–∏—á–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
    local targetPosition = eggPetModel:GetModelCFrame()
    
    -- –°–∫—Ä—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —è–π—Ü–∞
    for _, part in pairs(eggPetModel:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Transparency = 1
            part.CanCollide = false
        end
    end
    
    print("ü´• –°–∫—Ä—ã–ª –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —è–π—Ü–∞")
    
    -- –ö–ª–æ–Ω–∏—Ä—É–µ–º –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —Ä—É–∫–∏
    local clonedPet = clonePet(handPet)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Ä–æ—Å—Ç–∞ –Ω–∞ –∫–ª–æ–Ω–µ
    spawn(function()
        playGrowthAnimation(clonedPet, targetPosition)
    end)
    
    print("üöÄ –ó–∞–ø—É—Å—Ç–∏–ª –∞–Ω–∏–º–∞—Ü–∏—é —Ä–æ—Å—Ç–∞ –Ω–∞ –∫–ª–æ–Ω–µ!")
end

-- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ Visuals
local visuals = Workspace:FindFirstChild("Visuals")
if visuals then
    print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ Visuals")
    
    visuals.ChildAdded:Connect(function(child)
        if child:IsA("Model") and isActive then
            local name = child.Name or "Unknown"
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–∏—Ç–æ–º–µ—Ü (–Ω–µ —ç—Ñ—Ñ–µ–∫—Ç)
            if not name:find("Egg") and not name:find("Explode") and not name:find("Poof") then
                wait(0.1) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
                replacePetWithAnimation(child)
            end
        end
    end)
else
    print("‚ùå –ü–∞–ø–∫–∞ Visuals –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
end

print("üéØ Pet Animation Player –≥–æ—Ç–æ–≤!")
print("üìã –í–æ–∑—å–º–∏ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫—É –∏ –æ—Ç–∫—Ä–æ–π —è–π—Ü–æ")
print("üé¨ –¢–≤–æ–π –ø–∏—Ç–æ–º–µ—Ü –ø–æ—è–≤–∏—Ç—Å—è —Å —Ç–æ—á–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π —Ä–æ—Å—Ç–∞!")
