-- DirectShovelFix_v5_HOTBAR.lua
-- –ü–†–ê–í–ò–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï: –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º Shovel –í –ø–∏—Ç–æ–º—Ü–∞ –ø—Ä—è–º–æ –≤ –µ–≥–æ —Å–ª–æ—Ç–µ

local Players = game:GetService("Players")
local player = Players.LocalPlayer

print("=== DIRECT SHOVEL FIX V5 - HOTBAR PRESERVATION ===")

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–∞
local petData = {
    name = nil,
    properties = {},
    children = {},
    gripC0 = nil,
    gripC1 = nil,
    animations = {}
}

-- –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∞—Ö
local function findPetInHands()
    local character = player.Character
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "%[") and string.find(tool.Name, "KG%]") then
            return tool
        end
    end
    return nil
end

-- –ü–æ–∏—Å–∫ Shovel –≤ —Ä—É–∫–∞—Ö
local function findShovelInHands()
    local character = player.Character
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and (string.find(tool.Name, "Shovel") or string.find(tool.Name, "Destroy")) then
            return tool
        end
    end
    return nil
end

-- –ì–õ–£–ë–û–ö–û–ï —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –í–°–ï–• –¥–∞–Ω–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–∞
local function deepScanPetData(obj, path)
    local fullPath = path == "" and obj.Name or (path .. "." .. obj.Name)
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º BasePart —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    if obj:IsA("BasePart") then
        petData.animations[fullPath] = {
            CFrame = obj.CFrame,
            Position = obj.Position,
            Rotation = obj.Rotation,
            Size = obj.Size,
            Material = obj.Material,
            Color = obj.Color,
            Transparency = obj.Transparency,
            CanCollide = obj.CanCollide,
            Anchored = obj.Anchored,
            Name = obj.Name,
            ClassName = obj.ClassName
        }
        print("üé≠ " .. fullPath .. " (" .. obj.ClassName .. ") –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    end
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã
    for _, child in pairs(obj:GetChildren()) do
        deepScanPetData(child, fullPath)
    end
end

-- –ü–û–õ–ù–û–ï —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
local function scanCompletePet()
    print("\nüíæ === –ü–û–õ–ù–û–ï –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ü–ò–¢–û–ú–¶–ê ===")
    
    local pet = findPetInHands()
    if not pet then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü: " .. pet.Name)
    
    -- –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
    petData = {
        name = pet.Name,
        properties = {},
        children = {},
        gripC0 = nil,
        gripC1 = nil,
        animations = {}
    }
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ Tool
    petData.properties = {
        RequiresHandle = pet.RequiresHandle,
        CanBeDropped = pet.CanBeDropped,
        ManualActivationOnly = pet.ManualActivationOnly,
        Enabled = pet.Enabled
    }
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ —Ä—É–∫–µ
    local character = player.Character
    if character then
        local rightHand = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
        local petHandle = pet:FindFirstChild("Handle")
        
        if rightHand and petHandle then
            local petGrip = rightHand:FindFirstChild("RightGrip")
            if petGrip then
                petData.gripC0 = petGrip.C0
                petData.gripC1 = petGrip.C1
                print("üìç –ü–æ–∑–∏—Ü–∏—è –≤ —Ä—É–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
            end
        end
    end
    
    -- –ü–û–õ–ù–û–ï —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–π
    print("üé¨ === –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ ===")
    local animCount = 0
    
    local function countAndScan(obj, path)
        if obj:IsA("BasePart") then
            animCount = animCount + 1
        end
        deepScanPetData(obj, path)
    end
    
    countAndScan(pet, "")
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –ü–û–õ–ù–£–Æ –∫–æ–ø–∏—é –≤—Å–µ—Ö –¥–µ—Ç–µ–π –¥–ª—è –≤–æ—Å—Å–æ–∑–¥–∞–Ω–∏—è
    petData.children = {}
    for _, child in pairs(pet:GetChildren()) do
        table.insert(petData.children, child:Clone())
        print("üì¶ –°–æ—Ö—Ä–∞–Ω–µ–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: " .. child.Name .. " (" .. child.ClassName .. ")")
    end
    
    print("‚úÖ –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üìä –ß–∞—Å—Ç–µ–π —Ç–µ–ª–∞: " .. animCount)
    print("üì¶ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: " .. #petData.children)
    
    return true
end

-- –ü–†–ï–í–†–ê–©–ï–ù–ò–ï Shovel –≤ –ø–∏—Ç–æ–º—Ü–∞ (–ë–ï–ó —Å–º–µ–Ω—ã —Å–ª–æ—Ç–∞!)
local function transformShovelToPet()
    print("\nüîÑ === –ü–†–ï–í–†–ê–©–ï–ù–ò–ï SHOVEL –í –ü–ò–¢–û–ú–¶–ê ===")
    
    if not petData.name then
        print("‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –ø–∏—Ç–æ–º—Ü–∞!")
        return false
    end
    
    local shovel = findShovelInHands()
    if not shovel then
        print("‚ùå Shovel –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω Shovel: " .. shovel.Name)
    print("üîÑ –ü—Ä–µ–≤—Ä–∞—â–∞—é Shovel –≤ –ø–∏—Ç–æ–º—Ü–∞ –ü–†–Ø–ú–û –í –ï–ì–û –°–õ–û–¢–ï...")
    
    local character = player.Character
    
    -- –®–∞–≥ 1: –ú–µ–Ω—è–µ–º –∏–º—è –∏ —Å–≤–æ–π—Å—Ç–≤–∞ Tool (Shovel –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Ç–æ–º –∂–µ —Å–ª–æ—Ç–µ!)
    shovel.Name = petData.name
    shovel.RequiresHandle = petData.properties.RequiresHandle
    shovel.CanBeDropped = petData.properties.CanBeDropped
    shovel.ManualActivationOnly = petData.properties.ManualActivationOnly
    shovel.Enabled = petData.properties.Enabled
    print("üè∑Ô∏è Shovel –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤: " .. shovel.Name)
    
    -- –®–∞–≥ 2: –£–¥–∞–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Shovel
    print("üóëÔ∏è –û—á–∏—â–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Shovel...")
    for _, child in pairs(shovel:GetChildren()) do
        child:Destroy()
    end
    
    wait(0.2)
    
    -- –®–∞–≥ 3: –î–æ–±–∞–≤–ª—è–µ–º –í–°–ï –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–∏—Ç–æ–º—Ü–∞
    print("üì¶ –î–æ–±–∞–≤–ª—è—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–∏—Ç–æ–º—Ü–∞...")
    for _, childCopy in pairs(petData.children) do
        local newChild = childCopy:Clone()
        newChild.Parent = shovel
        print("   ‚úÖ " .. newChild.Name .. " (" .. newChild.ClassName .. ")")
    end
    
    wait(0.3)
    
    -- –®–∞–≥ 4: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    print("üé¨ === –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ô ===")
    
    local function restoreAnimations(obj, path)
        local fullPath = path == "" and obj.Name or (path .. "." .. obj.Name)
        
        if obj:IsA("BasePart") and petData.animations[fullPath] then
            local saved = petData.animations[fullPath]
            
            -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞
            obj.CFrame = saved.CFrame
            obj.Position = saved.Position
            obj.Rotation = saved.Rotation
            obj.Size = saved.Size
            obj.Material = saved.Material
            obj.Color = saved.Color
            obj.Transparency = saved.Transparency
            obj.CanCollide = saved.CanCollide
            obj.Anchored = saved.Anchored
            
            print("üéØ " .. fullPath .. " –∞–Ω–∏–º–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        end
        
        -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –¥–ª—è –≤—Å–µ—Ö –¥–µ—Ç–µ–π
        for _, child in pairs(obj:GetChildren()) do
            restoreAnimations(child, fullPath)
        end
    end
    
    if next(petData.animations) then
        restoreAnimations(shovel, "")
        print("‚úÖ –í—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    end
    
    -- –®–∞–≥ 5: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ —Ä—É–∫–µ
    if petData.gripC0 and petData.gripC1 then
        wait(0.3)
        
        local rightHand = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
        local newHandle = shovel:FindFirstChild("Handle")
        
        if rightHand and newHandle then
            print("üîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø–æ–∑–∏—Ü–∏—é –≤ —Ä—É–∫–µ...")
            
            local oldGrip = rightHand:FindFirstChild("RightGrip")
            if oldGrip then oldGrip:Destroy() end
            
            local newGrip = Instance.new("Weld")
            newGrip.Name = "RightGrip"
            newGrip.Part0 = rightHand
            newGrip.Part1 = newHandle
            newGrip.C0 = petData.gripC0
            newGrip.C1 = petData.gripC1
            newGrip.Parent = rightHand
            
            print("‚úÖ –ü–æ–∑–∏—Ü–∏—è –≤ —Ä—É–∫–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
        end
    end
    
    -- –®–∞–≥ 6: –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    spawn(function()
        wait(0.5)
        
        -- –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã
        for _, obj in pairs(shovel:GetDescendants()) do
            if (obj:IsA("LocalScript") or obj:IsA("Script")) and obj.Disabled then
                obj.Disabled = false
                print("üìú –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: " .. obj.Name)
            end
        end
        
        -- –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏
        for _, part in pairs(shovel:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "Handle" then
                part.Anchored = false
            end
        end
        
        print("üé¨ –í—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã!")
    end)
    
    print("üéØ === –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
    print("‚úÖ Shovel –ø—Ä–µ–≤—Ä–∞—â–µ–Ω –≤ –ø–∏—Ç–æ–º—Ü–∞ –° –ê–ù–ò–ú–ê–¶–ò–Ø–ú–ò!")
    print("üéÆ –û—Å—Ç–∞–ª—Å—è –≤ –¢–û–ú –ñ–ï –°–õ–û–¢–ï hotbar!")
    print("üìç –ü–æ–∑–∏—Ü–∏—è –≤ —Ä—É–∫–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è!")
    
    return true
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createHotbarFixGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "HotbarShovelFixGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 350, 0, 200)
    frame.Position = UDim2.new(0.5, -175, 0.5, -100)
    frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.new(0.3, 0.3, 0.3)
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundColor3 = Color3.new(0.2, 0.6, 0.2)
    title.BorderSizePixel = 0
    title.Text = "üéØ HOTBAR PRESERVATION FIX"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 50)
    status.Position = UDim2.new(0, 10, 0, 50)
    status.BackgroundTransparency = 1
    status.Text = "–°–û–•–†–ê–ù–ï–ù–ò–ï –°–õ–û–¢–ê:\n1. –ü–∏—Ç–æ–º–µ—Ü ‚Üí –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å\n2. Shovel ‚Üí –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å"
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.TextWrapped = true
    status.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    local scanBtn = Instance.new("TextButton")
    scanBtn.Size = UDim2.new(1, -20, 0, 40)
    scanBtn.Position = UDim2.new(0, 10, 0, 110)
    scanBtn.BackgroundColor3 = Color3.new(0, 0.8, 0)
    scanBtn.BorderSizePixel = 0
    scanBtn.Text = "üíæ –°–ö–ê–ù–ò–†–û–í–ê–¢–¨ –ø–∏—Ç–æ–º—Ü–∞"
    scanBtn.TextColor3 = Color3.new(1, 1, 1)
    scanBtn.TextScaled = true
    scanBtn.Font = Enum.Font.SourceSansBold
    scanBtn.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è
    local transformBtn = Instance.new("TextButton")
    transformBtn.Size = UDim2.new(1, -20, 0, 40)
    transformBtn.Position = UDim2.new(0, 10, 0, 160)
    transformBtn.BackgroundColor3 = Color3.new(0.8, 0.2, 0.8)
    transformBtn.BorderSizePixel = 0
    transformBtn.Text = "üîÑ –ü–†–ï–í–†–ê–¢–ò–¢–¨ Shovel"
    transformBtn.TextColor3 = Color3.new(1, 1, 1)
    transformBtn.TextScaled = true
    transformBtn.Font = Enum.Font.SourceSansBold
    transformBtn.Visible = false
    transformBtn.Parent = frame
    
    -- –°–æ–±—ã—Ç–∏—è
    scanBtn.MouseButton1Click:Connect(function()
        status.Text = "üíæ –°–∫–∞–Ω–∏—Ä—É—é –ø–∏—Ç–æ–º—Ü–∞..."
        status.TextColor3 = Color3.new(1, 1, 0)
        
        local success = scanCompletePet()
        
        if success then
            status.Text = "‚úÖ –ü–∏—Ç–æ–º–µ—Ü –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω!\n–¢–µ–ø–µ—Ä—å –≤–æ–∑—å–º–∏—Ç–µ Shovel"
            status.TextColor3 = Color3.new(0, 1, 0)
            transformBtn.Visible = true
        else
            status.Text = "‚ùå –û—à–∏–±–∫–∞!\n–í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏!"
            status.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    transformBtn.MouseButton1Click:Connect(function()
        status.Text = "üîÑ –ü—Ä–µ–≤—Ä–∞—â–∞—é Shovel..."
        status.TextColor3 = Color3.new(1, 1, 0)
        
        local success = transformShovelToPet()
        
        if success then
            status.Text = "‚úÖ –ì–û–¢–û–í–û!\nShovel = –ü–∏—Ç–æ–º–µ—Ü –≤ —Ç–æ–º –∂–µ —Å–ª–æ—Ç–µ!"
            status.TextColor3 = Color3.new(0, 1, 0)
        else
            status.Text = "‚ùå –û—à–∏–±–∫–∞!\n–í–æ–∑—å–º–∏—Ç–µ Shovel –≤ —Ä—É–∫–∏!"
            status.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
createHotbarFixGUI()
print("‚úÖ DirectShovelFix V5 –≥–æ—Ç–æ–≤!")
print("üéØ –ü–†–ï–í–†–ê–©–ï–ù–ò–ï SHOVEL –ë–ï–ó –°–ú–ï–ù–´ –°–õ–û–¢–ê!")
print("üìç HOTBAR –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø!")
