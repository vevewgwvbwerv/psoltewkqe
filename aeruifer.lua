-- üîç ANIMATION STATE ANALYZER - –ê–Ω–∞–ª–∏–∑ –∞–Ω–∏–º–∞—Ü–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –ø–∏—Ç–æ–º—Ü–∞
-- –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã –∫–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü —Å—Ç–æ–∏—Ç vs –∫–æ–≥–¥–∞ –∫–æ–ø–∞–µ—Ç

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

print("üîç === ANIMATION STATE ANALYZER ===")
print("=" .. string.rep("=", 50))

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ (—Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª)
local function findOriginalPet()
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") and not obj.Name:find("_SCALED_COPY") then
            return obj
        end
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–Ω–∏–º–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–π
local function getAnimationSnapshot(model, stateName)
    local animator = nil
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("Animator") then
            animator = obj
            break
        end
    end
    
    if not animator then
        print("‚ùå Animator –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return {}
    end
    
    local snapshot = {
        state = stateName,
        timestamp = tick(),
        animations = {}
    }
    
    local activeTracks = animator:GetPlayingAnimationTracks()
    
    for i, track in ipairs(activeTracks) do
        if track.Animation then
            local animInfo = {
                id = track.Animation.AnimationId,
                name = track.Name or "Unknown_" .. i,
                isPlaying = track.IsPlaying,
                speed = track.Speed,
                weight = track.WeightCurrent,
                looped = track.Looped,
                priority = track.Priority.Name,
                timePosition = track.TimePosition,
                length = track.Length
            }
            
            table.insert(snapshot.animations, animInfo)
        end
    end
    
    return snapshot
end

-- –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–Ω–∏–º–∫–∞
local function printSnapshot(snapshot)
    print("üì∏ –°–ù–ò–ú–û–ö –ê–ù–ò–ú–ê–¶–ò–ô: " .. snapshot.state)
    print("‚è∞ –í—Ä–µ–º—è: " .. string.format("%.2f", snapshot.timestamp))
    print("üé¨ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π: " .. #snapshot.animations)
    print()
    
    if #snapshot.animations == 0 then
        print("  ‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π!")
    else
        for i, anim in ipairs(snapshot.animations) do
            print("  [" .. i .. "] " .. anim.name)
            print("    üÜî ID: " .. anim.id)
            print("    ‚ñ∂Ô∏è Playing: " .. tostring(anim.isPlaying))
            print("    ‚ö° Speed: " .. anim.speed)
            print("    ‚öñÔ∏è Weight: " .. string.format("%.2f", anim.weight))
            print("    üîÑ Looped: " .. tostring(anim.looped))
            print("    üéØ Priority: " .. anim.priority)
            print("    ‚è±Ô∏è Position: " .. string.format("%.2f", anim.timePosition) .. "/" .. string.format("%.2f", anim.length))
            print()
        end
    end
    
    print("-" .. string.rep("-", 40))
end

-- –§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–Ω–∏–º–∫–æ–≤
local function compareSnapshots(snapshot1, snapshot2)
    print("üîÑ –°–†–ê–í–ù–ï–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ô:")
    print("üìä " .. snapshot1.state .. " vs " .. snapshot2.state)
    print()
    
    -- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    print("üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∏–º–∞—Ü–∏–π:")
    print("  " .. snapshot1.state .. ": " .. #snapshot1.animations)
    print("  " .. snapshot2.state .. ": " .. #snapshot2.animations)
    print()
    
    -- –ò—â–µ–º —Ä–∞–∑–ª–∏—á–∏—è
    local differences = {}
    
    -- –ê–Ω–∏–º–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤–æ–º —Å–Ω–∏–º–∫–µ
    for _, anim1 in ipairs(snapshot1.animations) do
        local found = false
        for _, anim2 in ipairs(snapshot2.animations) do
            if anim1.id == anim2.id then
                found = true
                break
            end
        end
        if not found then
            table.insert(differences, {
                type = "only_in_" .. snapshot1.state,
                animation = anim1
            })
        end
    end
    
    -- –ê–Ω–∏–º–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ç–æ—Ä–æ–º —Å–Ω–∏–º–∫–µ
    for _, anim2 in ipairs(snapshot2.animations) do
        local found = false
        for _, anim1 in ipairs(snapshot1.animations) do
            if anim1.id == anim2.id then
                found = true
                break
            end
        end
        if not found then
            table.insert(differences, {
                type = "only_in_" .. snapshot2.state,
                animation = anim2
            })
        end
    end
    
    -- –û–±—â–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    for _, anim1 in ipairs(snapshot1.animations) do
        for _, anim2 in ipairs(snapshot2.animations) do
            if anim1.id == anim2.id then
                local paramDiffs = {}
                if anim1.speed ~= anim2.speed then
                    table.insert(paramDiffs, "speed: " .. anim1.speed .. " ‚Üí " .. anim2.speed)
                end
                if math.abs(anim1.weight - anim2.weight) > 0.01 then
                    table.insert(paramDiffs, "weight: " .. string.format("%.2f", anim1.weight) .. " ‚Üí " .. string.format("%.2f", anim2.weight))
                end
                if anim1.isPlaying ~= anim2.isPlaying then
                    table.insert(paramDiffs, "playing: " .. tostring(anim1.isPlaying) .. " ‚Üí " .. tostring(anim2.isPlaying))
                end
                
                if #paramDiffs > 0 then
                    table.insert(differences, {
                        type = "parameter_change",
                        animation = anim1,
                        changes = paramDiffs
                    })
                end
                break
            end
        end
    end
    
    -- –í—ã–≤–æ–¥–∏–º —Ä–∞–∑–ª–∏—á–∏—è
    if #differences == 0 then
        print("‚úÖ –ê–Ω–∏–º–∞—Ü–∏–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã!")
    else
        print("üîç –ù–∞–π–¥–µ–Ω–æ —Ä–∞–∑–ª–∏—á–∏–π: " .. #differences)
        print()
        
        for i, diff in ipairs(differences) do
            if diff.type:find("only_in_") then
                print("  [" .. i .. "] üÜï –¢–æ–ª—å–∫–æ –≤ " .. diff.type:gsub("only_in_", "") .. ":")
                print("    " .. diff.animation.name .. " (" .. diff.animation.id .. ")")
            elseif diff.type == "parameter_change" then
                print("  [" .. i .. "] üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ " .. diff.animation.name .. ":")
                for _, change in ipairs(diff.changes) do
                    print("    " .. change)
                end
            end
            print()
        end
    end
    
    print("=" .. string.rep("=", 50))
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local pet = findOriginalPet()
    
    if not pet then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    print("üéØ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", pet.Name)
    print()
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò:")
    print("1. –°–µ–π—á–∞—Å –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω —Å–Ω–∏–º–æ–∫ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è")
    print("2. –ó–∞—Ç–µ–º –∏–∑–º–µ–Ω–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞ (–∑–∞—Å—Ç–∞–≤—å –∫–æ–ø–∞—Ç—å –∏–ª–∏ —Å—Ç–æ—è—Ç—å)")
    print("3. –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –±—É–¥–µ—Ç –≤—Ç–æ—Ä–æ–π —Å–Ω–∏–º–æ–∫")
    print("4. –°–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∂–µ—Ç —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏")
    print()
    print("‚è≥ –î–µ–ª–∞—é –ø–µ—Ä–≤—ã–π —Å–Ω–∏–º–æ–∫ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
    
    wait(3)
    
    -- –ü–µ—Ä–≤—ã–π —Å–Ω–∏–º–æ–∫
    local snapshot1 = getAnimationSnapshot(pet, "–°–û–°–¢–û–Ø–ù–ò–ï_1")
    printSnapshot(snapshot1)
    
    print("üîÑ –¢–ï–ü–ï–†–¨ –ò–ó–ú–ï–ù–ò –°–û–°–¢–û–Ø–ù–ò–ï –ü–ò–¢–û–ú–¶–ê!")
    print("   (–∑–∞—Å—Ç–∞–≤—å –∫–æ–ø–∞—Ç—å –∏–ª–∏ —Å—Ç–æ—è—Ç—å)")
    print("‚è≥ –ñ–¥—É 5 —Å–µ–∫—É–Ω–¥...")
    
    wait(5)
    
    -- –í—Ç–æ—Ä–æ–π —Å–Ω–∏–º–æ–∫
    local snapshot2 = getAnimationSnapshot(pet, "–°–û–°–¢–û–Ø–ù–ò–ï_2")
    printSnapshot(snapshot2)
    
    -- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
    compareSnapshots(snapshot1, snapshot2)
    
    print("üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("üí° –¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å –∫–∞–∫–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è!")
end

-- –ó–∞–ø—É—Å–∫
main()
