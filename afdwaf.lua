--[[
    EXPLOIT DIAGNOSTIC
    –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —è–π—Ü–∞
]]

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer

-- GUI –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ExploitDiagnostic"
screenGui.Parent = CoreGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 400, 0, 300)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "üîç EXPLOIT DIAGNOSTIC"
title.TextColor3 = Color3.new(1, 1, 1)
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.Parent = frame

local logFrame = Instance.new("ScrollingFrame")
logFrame.Size = UDim2.new(1, -10, 1, -40)
logFrame.Position = UDim2.new(0, 5, 0, 35)
logFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
logFrame.BorderSizePixel = 0
logFrame.ScrollBarThickness = 8
logFrame.Parent = frame

local logText = Instance.new("TextLabel")
logText.Size = UDim2.new(1, -10, 1, 0)
logText.Position = UDim2.new(0, 5, 0, 0)
logText.BackgroundTransparency = 1
logText.Text = "Starting diagnostic...\n"
logText.TextColor3 = Color3.new(1, 1, 1)
logText.TextSize = 12
logText.Font = Enum.Font.Code
logText.TextXAlignment = Enum.TextXAlignment.Left
logText.TextYAlignment = Enum.TextYAlignment.Top
logText.TextWrapped = true
logText.Parent = logFrame

local function log(message)
    local timestamp = os.date("%H:%M:%S")
    logText.Text = logText.Text .. "[" .. timestamp .. "] " .. message .. "\n"
    logFrame.CanvasSize = UDim2.new(0, 0, 0, logText.TextBounds.Y)
    logFrame.CanvasPosition = Vector2.new(0, logFrame.CanvasSize.Y.Offset)
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Workspace
log("=== WORKSPACE STRUCTURE ===")
for _, child in ipairs(Workspace:GetChildren()) do
    log("Workspace." .. child.Name .. " (" .. child.ClassName .. ")")
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ Visuals
if Workspace:FindFirstChild("Visuals") then
    log("‚úÖ Workspace.Visuals –Ω–∞–π–¥–µ–Ω!")
    log("Visuals —Å–æ–¥–µ—Ä–∂–∏—Ç " .. #Workspace.Visuals:GetChildren() .. " –æ–±—ä–µ–∫—Ç–æ–≤")
    for _, child in ipairs(Workspace.Visuals:GetChildren()) do
        log("  - " .. child.Name .. " (" .. child.ClassName .. ")")
    end
else
    log("‚ùå Workspace.Visuals –ù–ï –Ω–∞–π–¥–µ–Ω!")
    log("–ò—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–ø–∫–∏...")
    for _, child in ipairs(Workspace:GetChildren()) do
        if child:IsA("Folder") or child:IsA("Model") then
            log("  –í–æ–∑–º–æ–∂–Ω–∞—è –ø–∞–ø–∫–∞: " .. child.Name)
        end
    end
end

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ
log("\n=== PET IN HAND ===")
if player.Character then
    log("‚úÖ Character –Ω–∞–π–¥–µ–Ω: " .. player.Character.Name)
    local foundTool = false
    for _, tool in ipairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") then
            foundTool = true
            log("‚úÖ Tool –Ω–∞–π–¥–µ–Ω: " .. tool.Name)
            local model = tool:FindFirstChildWhichIsA("Model")
            if model then
                log("‚úÖ Model –≤ Tool: " .. model.Name)
                log("  Parts –≤ –º–æ–¥–µ–ª–∏: " .. #model:GetChildren())
                for _, part in ipairs(model:GetChildren()) do
                    if part:IsA("BasePart") then
                        log("    - " .. part.Name .. " (Size: " .. tostring(part.Size) .. ")")
                    end
                end
            else
                log("‚ùå Model –≤ Tool –ù–ï –Ω–∞–π–¥–µ–Ω!")
                log("  –°–æ–¥–µ—Ä–∂–∏–º–æ–µ Tool:")
                for _, child in ipairs(tool:GetChildren()) do
                    log("    - " .. child.Name .. " (" .. child.ClassName .. ")")
                end
            end
        end
    end
    if not foundTool then
        log("‚ùå Tool –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ä—É–∫–µ!")
        log("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ Character:")
        for _, child in ipairs(player.Character:GetChildren()) do
            log("  - " .. child.Name .. " (" .. child.ClassName .. ")")
        end
    end
else
    log("‚ùå Character –ù–ï –Ω–∞–π–¥–µ–Ω!")
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Workspace
log("\n=== MONITORING CHANGES ===")
log("–°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Workspace...")

Workspace.ChildAdded:Connect(function(child)
    log("üî• WORKSPACE ADD: " .. child.Name .. " (" .. child.ClassName .. ")")
end)

Workspace.ChildRemoved:Connect(function(child)
    log("üóëÔ∏è WORKSPACE REMOVE: " .. child.Name .. " (" .. child.ClassName .. ")")
end)

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º Visuals –µ—Å–ª–∏ –µ—Å—Ç—å
if Workspace:FindFirstChild("Visuals") then
    Workspace.Visuals.ChildAdded:Connect(function(child)
        log("üéØ VISUALS ADD: " .. child.Name .. " (" .. child.ClassName .. ")")
        if child:IsA("Model") then
            log("  üì¶ Model details:")
            log("    PrimaryPart: " .. (child.PrimaryPart and child.PrimaryPart.Name or "nil"))
            log("    Parts count: " .. #child:GetChildren())
            log("    Position: " .. tostring(child:GetModelCFrame().Position))
        end
    end)
    
    Workspace.Visuals.ChildRemoved:Connect(function(child)
        log("üóëÔ∏è VISUALS REMOVE: " .. child.Name .. " (" .. child.ClassName .. ")")
    end)
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –≤—Å–µ –ø–∞–ø–∫–∏ –≤ Workspace
for _, folder in ipairs(Workspace:GetChildren()) do
    if folder:IsA("Folder") or folder:IsA("Model") then
        folder.ChildAdded:Connect(function(child)
            log("üìÅ " .. folder.Name .. " ADD: " .. child.Name .. " (" .. child.ClassName .. ")")
        end)
    end
end

log("‚úÖ Diagnostic –≥–æ—Ç–æ–≤! –û—Ç–∫—Ä–æ–π —è–π—Ü–æ –∏ —Å–º–æ—Ç—Ä–∏ –ª–æ–≥–∏.")

print("üîç Exploit Diagnostic loaded! Check GUI for logs.")
