-- üéØ PET SCALER - –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø IDLE –ê–ù–ò–ú–ê–¶–ò–Ø –î–õ–Ø –ö–û–ü–ò–ò
-- –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç idle –ø–æ–∑—ã –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Ö –∫ –∫–æ–ø–∏–∏

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üéØ === PET SCALER - –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø IDLE –î–õ–Ø –ö–û–ü–ò–ò ===")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local CONFIG = {
    SEARCH_RADIUS = 100,
    SCALE_FACTOR = 3.0,
    TWEEN_TIME = 3.0,
    EASING_STYLE = Enum.EasingStyle.Quad,
    EASING_DIRECTION = Enum.EasingDirection.Out
}

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position
print("üìç –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞:", playerPos)

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö BasePart –∏–∑ –º–æ–¥–µ–ª–∏
local function getAllParts(model)
    local parts = {}
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            table.insert(parts, obj)
        end
    end
    return parts
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è Motor6D
local function getMotor6Ds(model)
    local motors = {}
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("Motor6D") then
            local key = obj.Name
            if obj.Part0 then
                key = key .. "_" .. obj.Part0.Name
            end
            if obj.Part1 then
                key = key .. "_" .. obj.Part1.Name
            end
            motors[key] = obj
        end
    end
    return motors
end

-- –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏
local function deepCopyModel(originalModel)
    print("üìã –°–æ–∑–¥–∞—é –∫–æ–ø–∏—é –º–æ–¥–µ–ª–∏:", originalModel.Name)
    
    local copy = originalModel:Clone()
    copy.Name = originalModel.Name .. "_IDLE_COPY"
    copy.Parent = Workspace
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ø–∏–∏
    if copy.PrimaryPart and originalModel.PrimaryPart then
        local originalCFrame = originalModel.PrimaryPart.CFrame
        local offset = Vector3.new(15, 0, 0)
        local newPosition = originalCFrame.Position + offset
        local newCFrame = CFrame.lookAt(newPosition, newPosition + originalCFrame.LookVector, Vector3.new(0, 1, 0))
        copy:SetPrimaryPartCFrame(newCFrame)
    end
    
    print("‚úÖ –ö–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞:", copy.Name)
    return copy
end

-- –§—É–Ω–∫—Ü–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
local function scaleModelSmoothly(model, scaleFactor, tweenTime)
    print("üî• –ù–∞—á–∏–Ω–∞—é –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:", model.Name)
    
    local parts = getAllParts(model)
    print("üß© –ù–∞–π–¥–µ–Ω–æ —á–∞—Å—Ç–µ–π:", #parts)
    
    if #parts == 0 then
        print("‚ùå –ù–µ—Ç —á–∞—Å—Ç–µ–π –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è!")
        return false
    end
    
    -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–Ω—Ç—Ä –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    local centerCFrame
    if model.PrimaryPart then
        centerCFrame = model.PrimaryPart.CFrame
    else
        local success, modelCFrame = pcall(function() return model:GetModelCFrame() end)
        if success then
            centerCFrame = modelCFrame
        else
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–Ω—Ç—Ä –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è!")
            return false
        end
    end
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    local originalData = {}
    for _, part in ipairs(parts) do
        originalData[part] = {
            size = part.Size,
            cframe = part.CFrame
        }
    end
    
    -- –°–æ–∑–¥–∞–µ–º TweenInfo
    local tweenInfo = TweenInfo.new(
        tweenTime,
        CONFIG.EASING_STYLE,
        CONFIG.EASING_DIRECTION,
        0,
        false,
        0
    )
    
    -- –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    local tweens = {}
    local completedTweens = 0
    
    for _, part in ipairs(parts) do
        local originalSize = originalData[part].size
        local originalCFrame = originalData[part].cframe
        
        local newSize = originalSize * scaleFactor
        local relativeCFrame = centerCFrame:Inverse() * originalCFrame
        local scaledRelativeCFrame = CFrame.new(relativeCFrame.Position * scaleFactor) * (relativeCFrame - relativeCFrame.Position)
        local newCFrame = centerCFrame * scaledRelativeCFrame
        
        local tween = TweenService:Create(part, tweenInfo, {
            Size = newSize,
            CFrame = newCFrame
        })
        
        tween.Completed:Connect(function()
            completedTweens = completedTweens + 1
            if completedTweens == #parts then
                print("‚úÖ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            end
        end)
        
        table.insert(tweens, tween)
        tween:Play()
    end
    
    return true
end

-- üéØ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–ê–ü–ò–°–¨ IDLE –ü–û–ó
local function recordIdlePoses(original)
    print("üìπ –ó–∞–ø–∏—Å—ã–≤–∞—é idle –ø–æ–∑—ã –æ—Ä–∏–≥–∏–Ω–∞–ª–∞...")
    
    local originalMotors = getMotor6Ds(original)
    local idlePoses = {}
    
    -- –ó–∞—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
    local originalHumanoid = original:FindFirstChildOfClass("Humanoid")
    if originalHumanoid then
        originalHumanoid.WalkSpeed = 0
        originalHumanoid.JumpPower = 0
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∏–ª –æ—Ä–∏–≥–∏–Ω–∞–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ idle –ø–æ–∑")
    end
    
    -- –ñ–¥–µ–º —á—Ç–æ–±—ã –ø–∏—Ç–æ–º–µ—Ü –ø–µ—Ä–µ—à–µ–ª –≤ idle
    wait(3)
    
    -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º idle –ø–æ–∑—ã
    for key, motor in pairs(originalMotors) do
        idlePoses[key] = {
            Transform = motor.Transform,
            C0 = motor.C0,
            C1 = motor.C1
        }
    end
    
    print("‚úÖ –ó–∞–ø–∏—Å–∞–ª", #idlePoses, "idle –ø–æ–∑")
    return idlePoses
end

-- üéØ –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ü–†–ò–ú–ï–ù–ï–ù–ò–ï IDLE –ü–û–ó –ö –ö–û–ü–ò–ò
local function forceIdlePosesToCopy(copy, idlePoses, scaleFactor)
    print("üé≠ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è—é idle –ø–æ–∑—ã –∫ –∫–æ–ø–∏–∏...")
    
    local copyMotors = getMotor6Ds(copy)
    
    -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Anchored –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    local copyParts = getAllParts(copy)
    local rootPart = nil
    
    for _, part in ipairs(copyParts) do
        if part.Name == "RootPart" or part.Name == "Torso" or part.Name == "HumanoidRootPart" then
            rootPart = part
            part.Anchored = true
        else
            part.Anchored = false
        end
    end
    
    print("üß† –ù–∞—Å—Ç—Ä–æ–∏–ª Anchored –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏")
    
    -- –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è idle –ø–æ–∑ —Å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local function applyIdlePoses()
        for key, idlePose in pairs(idlePoses) do
            local copyMotor = copyMotors[key]
            if copyMotor then
                -- –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –ø–æ–∑—ã
                local scaledTransform = CFrame.new(idlePose.Transform.Position * scaleFactor) * (idlePose.Transform - idlePose.Transform.Position)
                local scaledC0 = CFrame.new(idlePose.C0.Position * scaleFactor) * (idlePose.C0 - idlePose.C0.Position)
                local scaledC1 = CFrame.new(idlePose.C1.Position * scaleFactor) * (idlePose.C1 - idlePose.C1.Position)
                
                copyMotor.Transform = scaledTransform
                copyMotor.C0 = scaledC0
                copyMotor.C1 = scaledC1
            end
        end
    end
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º idle –ø–æ–∑—ã –æ–¥–∏–Ω —Ä–∞–∑
    applyIdlePoses()
    print("‚úÖ –ü—Ä–∏–º–µ–Ω–∏–ª idle –ø–æ–∑—ã –∫ –∫–æ–ø–∏–∏")
    
    -- üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –ó–ê–¶–ò–ö–õ–ò–í–ê–ù–ò–ï IDLE –ü–û–ó
    spawn(function()
        print("üîÑ –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ idle –ø–æ–∑...")
        
        while copy and copy.Parent do
            wait(0.1) -- –ö–∞–∂–¥—ã–µ 0.1 —Å–µ–∫—É–Ω–¥—ã
            
            -- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º idle –ø–æ–∑—ã
            applyIdlePoses()
        end
        
        print("‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ idle –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    end)
    
    return true
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    print("\nüîç === –ü–û–ò–°–ö –ü–ò–¢–û–ú–¶–ê ===")
    
    local petModel = nil
    for _, obj in pairs(Workspace:GetChildren()) do
        if obj:IsA("Model") and obj ~= playerChar then
            local humanoid = obj:FindFirstChildOfClass("Humanoid")
            if humanoid then
                local rootPart = obj:FindFirstChild("RootPart") or obj:FindFirstChild("Torso") or obj:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    local distance = (rootPart.Position - playerPos).Magnitude
                    if distance <= CONFIG.SEARCH_RADIUS then
                        petModel = obj
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                        break
                    end
                end
            end
        end
    end
    
    if not petModel then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞–¥–∏—É—Å–µ", CONFIG.SEARCH_RADIUS)
        return
    end
    
    -- üìπ –ó–ê–ü–ò–°–´–í–ê–ï–ú IDLE –ü–û–ó–´
    print("\nüìπ === –ó–ê–ü–ò–°–¨ IDLE –ü–û–ó ===")
    local idlePoses = recordIdlePoses(petModel)
    
    -- –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é
    print("\nüìã === –°–û–ó–î–ê–ù–ò–ï –ö–û–ü–ò–ò ===")
    local petCopy = deepCopyModel(petModel)
    
    -- –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–º–∏ —á–∞—Å—Ç—è–º–∏
    print("\nüìè === –ú–ê–°–®–¢–ê–ë–ò–†–û–í–ê–ù–ò–ï ===")
    for _, part in pairs(petCopy:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = true
        end
    end
    
    wait(0.5)
    local scaleSuccess = scaleModelSmoothly(petCopy, CONFIG.SCALE_FACTOR, CONFIG.TWEEN_TIME)
    
    if not scaleSuccess then
        print("‚ùå –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!")
        return
    end
    
    -- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    wait(CONFIG.TWEEN_TIME + 1)
    
    -- üé≠ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ü–†–ò–ú–ï–ù–Ø–ï–ú IDLE –ü–û–ó–´ –ö –ö–û–ü–ò–ò
    print("\nüé≠ === –ü–†–ò–ú–ï–ù–ï–ù–ò–ï IDLE –ü–û–ó ===")
    local idleSuccess = forceIdlePosesToCopy(petCopy, idlePoses, CONFIG.SCALE_FACTOR)
    
    if idleSuccess then
        print("\nüéâ === –ü–û–õ–ù–´–ô –£–°–ü–ï–•! ===")
        print("‚úÖ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        print("‚úÖ Idle –ø–æ–∑—ã –∑–∞–ø–∏—Å–∞–Ω—ã –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
        print("‚úÖ –ö–æ–ø–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–Ω–∏–º–∏—Ä—É–µ—Ç—Å—è idle!")
        print("üí° –ö–æ–ø–∏—è –¥–æ–ª–∂–Ω–∞ —Å—Ç–æ—è—Ç—å —Å idle –∞–Ω–∏–º–∞—Ü–∏–µ–π –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞!")
    else
        print("‚ö†Ô∏è –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, –Ω–æ idle –ø–æ–∑—ã –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–ª–∏—Å—å")
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    local oldGui = playerGui:FindFirstChild("PetScalerIdleGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetScalerIdleGUI"
    screenGui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 250, 0, 80)
    frame.Position = UDim2.new(0, 50, 0, 350)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(0, 255, 255) -- –ì–æ–ª—É–±–∞—è —Ä–∞–º–∫–∞
    frame.Parent = screenGui
    
    local button = Instance.new("TextButton")
    button.Name = "ScaleButton"
    button.Size = UDim2.new(0, 230, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 20)
    button.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    button.BorderSizePixel = 0
    button.Text = "üéØ PetScaler IDLE FORCER"
    button.TextColor3 = Color3.fromRGB(0, 0, 0)
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.Parent = frame
    
    button.MouseButton1Click:Connect(function()
        button.Text = "‚è≥ –ó–∞–ø–∏—Å—ã–≤–∞—é idle –ø–æ–∑—ã..."
        button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        spawn(function()
            main()
            
            wait(3)
            button.Text = "üéØ PetScaler IDLE FORCER"
            button.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
        end)
    end)
    
    print("üñ•Ô∏è PetScaler IDLE FORCER GUI —Å–æ–∑–¥–∞–Ω!")
end

-- –ó–∞–ø—É—Å–∫
createGUI()
print("üí° –ù–∞–∂–º–∏—Ç–µ –ì–û–õ–£–ë–£–Æ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ idle –ø–æ–∑ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ø–∏–∏!")
print("üéØ –ö–æ–ø–∏—è –±—É–¥–µ—Ç –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å—Å—è idle –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞!")
