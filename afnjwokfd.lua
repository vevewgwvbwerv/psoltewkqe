-- üß™ SIMPLE ANIMATION TEST - –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è Anchored
-- –ü—Ä–æ—Å—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞ –∫–æ–ø–∏–∏ –±–µ–∑ –≤—Å—è–∫–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

print("üß™ === SIMPLE ANIMATION TEST ===")
print("=" .. string.rep("=", 40))

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
local function findModels()
    local original = nil
    local copy = nil
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            if obj.Name:find("_SCALED_COPY") then
                copy = obj
            else
                original = obj
            end
        end
    end
    
    return original, copy
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
local function simpleAnimationStart(originalModel, copyModel)
    print("üé¨ –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    -- –ù–∞—Ö–æ–¥–∏–º –∞–Ω–∏–º–∞—Ç–æ—Ä—ã
    local originalAnimator = nil
    local copyAnimator = nil
    
    for _, obj in pairs(originalModel:GetDescendants()) do
        if obj:IsA("Animator") then
            originalAnimator = obj
            break
        end
    end
    
    for _, obj in pairs(copyModel:GetDescendants()) do
        if obj:IsA("Animator") then
            copyAnimator = obj
            break
        end
    end
    
    if not originalAnimator then
        print("‚ùå Animator –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ!")
        return false
    end
    
    if not copyAnimator then
        print("‚ùå Animator –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–ø–∏–∏!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω—ã –∞–Ω–∏–º–∞—Ç–æ—Ä—ã:")
    print("  –û—Ä–∏–≥–∏–Ω–∞–ª:", originalAnimator:GetFullName())
    print("  –ö–æ–ø–∏—è:", copyAnimator:GetFullName())
    
    -- –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
    local originalTracks = originalAnimator:GetPlayingAnimationTracks()
    print("üìπ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ:", #originalTracks)
    
    if #originalTracks == 0 then
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!")
        return false
    end
    
    -- –ö–æ–ø–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é
    local firstTrack = originalTracks[1]
    if not firstTrack.Animation then
        print("‚ùå –£ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ—Ç Animation –æ–±—ä–µ–∫—Ç–∞!")
        return false
    end
    
    print("üéØ –ö–æ–ø–∏—Ä—É—é –∞–Ω–∏–º–∞—Ü–∏—é:", firstTrack.Animation.AnimationId)
    print("  –°–∫–æ—Ä–æ—Å—Ç—å:", firstTrack.Speed)
    print("  –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ—Å—Ç—å:", firstTrack.Looped)
    print("  –ò–≥—Ä–∞–µ—Ç:", firstTrack.IsPlaying)
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –∫–æ–ø–∏–∏
    local newAnimation = Instance.new("Animation")
    newAnimation.AnimationId = firstTrack.Animation.AnimationId
    
    -- –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
    local success, result = pcall(function()
        local newTrack = copyAnimator:LoadAnimation(newAnimation)
        newTrack.Looped = firstTrack.Looped
        newTrack:Play()
        newTrack:AdjustSpeed(firstTrack.Speed)
        return newTrack
    end)
    
    if success then
        print("‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ –∫–æ–ø–∏–∏!")
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
        wait(1)
        local copyTracks = copyAnimator:GetPlayingAnimationTracks()
        print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π –Ω–∞ –∫–æ–ø–∏–∏:", #copyTracks)
        
        for i, track in ipairs(copyTracks) do
            print("  [" .. i .. "] –ò–≥—Ä–∞–µ—Ç:", track.IsPlaying, "| ID:", track.Animation.AnimationId)
        end
        
        return #copyTracks > 0
    else
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏:", result)
        return false
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local original, copy = findModels()
    
    if not original then
        print("‚ùå –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    if not copy then
        print("‚ùå –ö–æ–ø–∏—è –ø–∏—Ç–æ–º—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("üí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–ø–∏—é —á–µ—Ä–µ–∑ PetScaler")
        return
    end
    
    print("üéØ –ù–∞–π–¥–µ–Ω—ã –º–æ–¥–µ–ª–∏:")
    print("  –û—Ä–∏–≥–∏–Ω–∞–ª:", original.Name)
    print("  –ö–æ–ø–∏—è:", copy.Name)
    print()
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ø–∏–∏ –î–û –ø–æ–ø—ã—Ç–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    print("üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ø–∏–∏ –î–û –∞–Ω–∏–º–∞—Ü–∏–∏:")
    local partsBefore = 0
    for _, obj in pairs(copy:GetDescendants()) do
        if obj:IsA("BasePart") then
            partsBefore = partsBefore + 1
        end
    end
    print("  –ß–∞—Å—Ç–µ–π:", partsBefore)
    
    -- –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é
    local success = simpleAnimationStart(original, copy)
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ø–∏–∏ –ü–û–°–õ–ï –ø–æ–ø—ã—Ç–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    print("üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ø–∏–∏ –ü–û–°–õ–ï –∞–Ω–∏–º–∞—Ü–∏–∏:")
    local partsAfter = 0
    for _, obj in pairs(copy:GetDescendants()) do
        if obj:IsA("BasePart") then
            partsAfter = partsAfter + 1
        end
    end
    print("  –ß–∞—Å—Ç–µ–π:", partsAfter)
    
    if partsBefore ~= partsAfter then
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π –∏–∑–º–µ–Ω–∏–ª–æ—Å—å! (" .. partsBefore .. " -> " .. partsAfter .. ")")
    end
    
    if success then
        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –ê–Ω–∏–º–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ê–Ω–∏–º–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    end
    
    print("=" .. string.rep("=", 40))
end

-- –ó–∞–ø—É—Å–∫
main()
