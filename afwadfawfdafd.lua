-- üî• –£–õ–¨–¢–†–ê-–£–°–ò–õ–ï–ù–ù–´–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –õ–û–í–ï–¶ –ú–ê–ì–ò–ß–ï–°–ö–û–ì–û IDLE
-- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –æ—Ç–º–µ–Ω—è–µ—Ç –ª—é–±—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–≤–∏–∂–µ–Ω–∏—è!

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- üîç –ü–û–ò–°–ö –ü–ò–¢–û–ú–¶–ê (–†–ê–ë–û–ß–ê–Ø –í–ï–†–°–ò–Ø)
local function hasPetVisuals(model)
    local meshCount = 0
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") or obj:IsA("SpecialMesh") then
            meshCount = meshCount + 1
        end
    end
    return meshCount > 0
end

local function findPet()
    local character = player.Character
    if not character then 
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil 
    end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then 
        print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil 
    end
    
    local playerPos = hrp.Position
    
    print("üîç –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–µ–≤ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏...")
    
    local foundPets = {}
    local SEARCH_RADIUS = 100
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= SEARCH_RADIUS then
                    if hasPetVisuals(obj) then
                        table.insert(foundPets, {
                            model = obj,
                            distance = distance
                        })
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                    end
                end
            end
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    table.sort(foundPets, function(a, b) return a.distance < b.distance end)
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.model.Name)
    
    return targetPet.model
end

-- üéØ –ü–†–û–í–ï–†–ö–ê –ù–ê –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –ú–û–ú–ï–ù–¢
local function isMagicalIdleMoment(petModel)
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    
    -- –£—Å–ª–æ–≤–∏–µ 1: –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è
    local noMovement = true
    if humanoid then
        noMovement = humanoid.MoveDirection.Magnitude < 0.01
    end
    
    -- –£—Å–ª–æ–≤–∏–µ 2: –ï—Å—Ç—å —Ç–æ–ª—å–∫–æ idle –∞–Ω–∏–º–∞—Ü–∏–∏
    local hasOnlyIdleAnimation = false
    local animationCount = 0
    
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Animator") then
            local tracks = obj:GetPlayingAnimationTracks()
            animationCount = #tracks
            
            if animationCount > 0 then
                hasOnlyIdleAnimation = true
                for _, track in pairs(tracks) do
                    local name = track.Animation.Name:lower()
                    local id = track.Animation.AnimationId:lower()
                    
                    if not name:find("idle") and not id:find("1073293904134356") then
                        hasOnlyIdleAnimation = false
                        break
                    end
                end
            end
            break
        end
    end
    
    return noMovement and hasOnlyIdleAnimation and animationCount > 0
end

-- üìä –ë–´–°–¢–†–ê–Ø –ó–ê–ü–ò–°–¨ –ú–ê–ì–ò–ß–ï–°–ö–ò–• –ü–û–ó
local function recordMagicalPoses(petModel, duration)
    print("üé¨ –ó–∞–ø–∏—Å—ã–≤–∞—é –º–∞–≥–∏—á–µ—Å–∫–∏–µ idle –ø–æ–∑—ã...")
    
    local motor6Ds = {}
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motor6Ds, obj)
        end
    end
    
    if #motor6Ds == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    local poses = {}
    local frameCount = 0
    local targetFrames = duration * 60
    
    local recordConnection
    recordConnection = RunService.Heartbeat:Connect(function()
        frameCount = frameCount + 1
        
        local framePoses = {}
        for _, motor in pairs(motor6Ds) do
            framePoses[motor.Name] = {
                C0 = motor.C0,
                C1 = motor.C1,
                Transform = motor.Transform
            }
        end
        
        table.insert(poses, framePoses)
        
        if frameCount >= targetFrames then
            recordConnection:Disconnect()
        end
    end)
    
    while frameCount < targetFrames and recordConnection.Connected do
        wait(0.1)
    end
    
    print(string.format("‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ %d –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –ø–æ–∑!", #poses))
    return poses, motor6Ds
end

-- üî• –£–õ–¨–¢–†–ê-–ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –§–ò–ö–°–ê–¶–ò–Ø –í –ú–ê–ì–ò–ß–ï–°–ö–û–ú –°–û–°–¢–û–Ø–ù–ò–ò
local function ultraAggressiveLock(petModel, magicalPoses, motor6Ds)
    print("üî• –£–õ–¨–¢–†–ê-–ê–ì–†–ï–°–°–ò–í–ù–ê–Ø —Ñ–∏–∫—Å–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
    
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    local originalPosition = rootPart and rootPart.Position or Vector3.new(0, 0, 0)
    
    local currentFrame = 1
    local frameRate = 60
    local frameInterval = 1 / frameRate
    local lastFrameTime = tick()
    
    -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
    local stats = {
        blockedWalkingAnimations = 0,
        teleportations = 0,
        humanoidResets = 0
    }
    
    local lockConnection
    lockConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        -- üî• –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ò –¢–û–¢–ê–õ–¨–ù–ê–Ø –ë–õ–û–ö–ò–†–û–í–ö–ê –î–í–ò–ñ–ï–ù–ò–Ø (–ö–ê–ñ–î–´–ô –ö–ê–î–†!)
        if humanoid then
            -- –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è
            if humanoid.WalkSpeed ~= 0 then
                humanoid.WalkSpeed = 0
                stats.humanoidResets = stats.humanoidResets + 1
            end
            if humanoid.JumpPower ~= 0 then
                humanoid.JumpPower = 0
            end
            if not humanoid.PlatformStand then
                humanoid.PlatformStand = true
            end
            
            -- –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
            humanoid.Sit = false
            humanoid.AutoRotate = false
            
            -- –ï—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—å –Ω–∞–º–µ–∫ –Ω–∞ –¥–≤–∏–∂–µ–Ω–∏–µ - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
            if humanoid.MoveDirection.Magnitude > 0 then
                humanoid:MoveTo(originalPosition)
                stats.humanoidResets = stats.humanoidResets + 1
            end
        end
        
        -- üî• –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ö–û–†–†–ï–ö–¶–ò–Ø –ü–û–ó–ò–¶–ò–ò (–ö–ê–ñ–î–´–ô –ö–ê–î–†!)
        if rootPart and originalPosition then
            -- –û—á–µ–Ω—å –∂–µ—Å—Ç–∫–∞—è —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å - –¥–∞–∂–µ –º–∏–∫—Ä–æ-—Å–¥–≤–∏–≥–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã
            if (rootPart.Position - originalPosition).Magnitude > 0.01 then
                rootPart.Position = originalPosition
                rootPart.Velocity = Vector3.new(0, 0, 0)
                rootPart.AngularVelocity = Vector3.new(0, 0, 0)
                rootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                rootPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                stats.teleportations = stats.teleportations + 1
            end
            
            -- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ
            if not rootPart.Anchored then
                rootPart.Anchored = true
            end
        end
        
        -- üî• –ú–ì–ù–û–í–ï–ù–ù–û–ï –£–ù–ò–ß–¢–û–ñ–ï–ù–ò–ï WALKING –ê–ù–ò–ú–ê–¶–ò–ô (–ö–ê–ñ–î–´–ô –ö–ê–î–†!)
        for _, obj in pairs(petModel:GetDescendants()) do
            if obj:IsA("Animator") then
                local tracks = obj:GetPlayingAnimationTracks()
                for _, track in pairs(tracks) do
                    local name = track.Animation.Name:lower()
                    local id = track.Animation.AnimationId:lower()
                    
                    -- –ï—Å–ª–∏ —ç—Ç–æ –ù–ï idle - –ú–ì–ù–û–í–ï–ù–ù–û —É–Ω–∏—á—Ç–æ–∂–∞–µ–º –±–µ–∑ –ø–æ—â–∞–¥—ã
                    if not name:find("idle") and not id:find("1073293904134356") then
                        track:Stop()
                        track:Destroy()
                        stats.blockedWalkingAnimations = stats.blockedWalkingAnimations + 1
                        
                        -- –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫
                        if stats.blockedWalkingAnimations <= 5 then
                            print("üíÄ –ú–ì–ù–û–í–ï–ù–ù–û –£–ù–ò–ß–¢–û–ñ–ï–ù–ê walking –∞–Ω–∏–º–∞—Ü–∏—è:", track.Animation.Name)
                        end
                    end
                end
            end
        end
        
        -- –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞–≥–∏—á–µ—Å–∫–∏–µ idle –ø–æ–∑—ã (–ø—Ä—è–º–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫)
        if now - lastFrameTime >= frameInterval then
            lastFrameTime = now
            
            local framePoses = magicalPoses[currentFrame]
            if framePoses then
                for _, motor in pairs(motor6Ds) do
                    local pose = framePoses[motor.Name]
                    if pose then
                        pcall(function()
                            -- –ü—Ä—è–º–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±–µ–∑ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
                            motor.C0 = pose.C0
                            motor.C1 = pose.C1
                            motor.Transform = pose.Transform
                        end)
                    end
                end
            end
            
            currentFrame = currentFrame + 1
            if currentFrame > #magicalPoses then
                currentFrame = 1
                
                -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–∂–¥—ã–π —Ü–∏–∫–ª
                if stats.blockedWalkingAnimations > 0 or stats.teleportations > 0 or stats.humanoidResets > 0 then
                    print(string.format("üî• –¶–∏–∫–ª: –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∞–Ω–∏–º–∞—Ü–∏–π=%d, —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–π=%d, —Å–±—Ä–æ—Å–æ–≤ Humanoid=%d", 
                        stats.blockedWalkingAnimations, stats.teleportations, stats.humanoidResets))
                end
            end
        end
    end)
    
    print("üî• –£–õ–¨–¢–†–ê-–ê–ì–†–ï–°–°–ò–í–ù–ê–Ø —Ñ–∏–∫—Å–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞!")
    print("üíÄ –í–°–ï –ø–æ–ø—ã—Ç–∫–∏ –¥–≤–∏–∂–µ–Ω–∏—è —É–Ω–∏—á—Ç–æ–∂–∞—é—Ç—Å—è –ú–ì–ù–û–í–ï–ù–ù–û!")
    print("‚ö° –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ö–ê–ñ–î–´–ô –ö–ê–î–† –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π!")
    
    return lockConnection
end

-- üéØ –£–õ–¨–¢–†–ê-–£–°–ò–õ–ï–ù–ù–´–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –õ–û–í–ï–¶
local function ultraAutoMagicalCatcher()
    local petModel = findPet()
    if not petModel then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    print("üî• === –£–õ–¨–¢–†–ê-–£–°–ò–õ–ï–ù–ù–´–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –õ–û–í–ï–¶ ===")
    print("‚ö° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–∞—è –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è!")
    print("üéØ –ü–æ–∏—Å–∫ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞... (–º–∞–∫—Å. 60 —Å–µ–∫—É–Ω–¥)")
    
    local searchStartTime = tick()
    local lastCheckTime = 0
    
    local searchConnection
    searchConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 0.05 —Å–µ–∫—É–Ω–¥—ã (–≤ 2 —Ä–∞–∑–∞ —á–∞—â–µ —á–µ–º –æ–±—ã—á–Ω–æ)
        if now - lastCheckTime >= 0.05 then
            lastCheckTime = now
            
            if isMagicalIdleMoment(petModel) then
                print("üåü === –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –ú–û–ú–ï–ù–¢ –ü–û–ô–ú–ê–ù! ===")
                print("üî• –ó–∞–ø—É—Å–∫–∞—é –£–õ–¨–¢–†–ê-–ê–ì–†–ï–°–°–ò–í–ù–£–Æ —Ñ–∏–∫—Å–∞—Ü–∏—é...")
                searchConnection:Disconnect()
                
                -- –ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å –ø–æ–∑ (2 —Å–µ–∫—É–Ω–¥—ã –≤–º–µ—Å—Ç–æ 3)
                local magicalPoses, motor6Ds = recordMagicalPoses(petModel, 2)
                if magicalPoses then
                    local connection = ultraAggressiveLock(petModel, magicalPoses, motor6Ds)
                    print("üéâ –£–°–ü–ï–•! –ü–∏—Ç–æ–º–µ—Ü –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –£–õ–¨–¢–†–ê-–ê–ì–†–ï–°–°–ò–í–ù–û–ú —Ä–µ–∂–∏–º–µ!")
                    print("üíÄ –õ—é–±—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –¥–≤–∏–∂–µ–Ω–∏—è —É–Ω–∏—á—Ç–æ–∂–∞—é—Ç—Å—è –ú–ì–ù–û–í–ï–ù–ù–û!")
                    
                    spawn(function()
                        wait(300)
                        connection:Disconnect()
                        print("‚èπÔ∏è –£–ª—å—Ç—Ä–∞-–∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
                    end)
                end
                return
            end
            
            -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–∏—Å–∫–∞ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
            if math.floor(now - searchStartTime) % 10 == 0 and (now - searchStartTime) % 10 < 0.05 then
                print(string.format("üîç –ü–æ–∏—Å–∫ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞... %.0f —Å–µ–∫", now - searchStartTime))
            end
            
            if now - searchStartTime >= 60 then
                searchConnection:Disconnect()
                print("‚è∞ –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–æ!")
                print("üí° –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –¥–æ–∂–¥–∏—Å—å –∫–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –≤–æ–π–¥–µ—Ç –≤ idle")
            end
        end
    end)
end

-- üöÄ –ó–ê–ü–£–°–ö
print("\nüî• === –£–õ–¨–¢–†–ê-–£–°–ò–õ–ï–ù–ù–´–ô –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –õ–û–í–ï–¶ ===")
print("‚ö° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–∞—è –∏ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞!")
print("üíÄ –ú–ì–ù–û–í–ï–ù–ù–û–ï —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –ª—é–±—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –¥–≤–∏–∂–µ–Ω–∏—è!")
print("üéØ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")

spawn(function()
    wait(2)
    ultraAutoMagicalCatcher()
end)
