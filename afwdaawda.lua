-- üîç –°–ö–ê–ù–ï–† –í–°–ï–ì–û –†–Ø–î–û–ú –° –ò–ì–†–û–ö–û–ú
-- –ò—â–µ—Ç –í–°–ï –æ–±—ä–µ–∫—Ç—ã –≤ —Ä–∞–¥–∏—É—Å–µ 20 —Å—Ç–∞–¥–æ–≤ –æ—Ç –∏–≥—Ä–æ–∫–∞

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

print("üîç === –°–ö–ê–ù–ï–† –í–°–ï–ì–û –†–Ø–î–û–ú –° –ò–ì–†–û–ö–û–ú ===")
print("=" .. string.rep("=", 50))

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position
print("üìç –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞:", playerPos)

-- –û–ß–ï–ù–¨ –ú–ê–õ–ï–ù–¨–ö–ò–ô –†–ê–î–ò–£–° - –¢–û–õ–¨–ö–û –°–ê–ú–û–ï –ë–õ–ò–ó–ö–û–ï!
local SEARCH_RADIUS = 20  -- 20 —Å—Ç–∞–¥–æ–≤ - –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ!

print("üéØ –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞:", SEARCH_RADIUS, "—Å—Ç–∞–¥–æ–≤ (–û–ß–ï–ù–¨ –ë–õ–ò–ó–ö–û!)")
print()

-- –§—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
local function scanNearbyObjects()
    local nearbyObjects = {}
    local totalScanned = 0
    
    print("üîç –°–ö–ê–ù–ò–†–£–Æ –í–°–ï –û–ë–™–ï–ö–¢–´ –†–Ø–î–û–ú –° –ò–ì–†–û–ö–û–ú...")
    print()
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º –í–°–ï –æ–±—ä–µ–∫—Ç—ã –≤ Workspace
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") or obj:IsA("Part") or obj:IsA("MeshPart") then
            totalScanned = totalScanned + 1
            
            -- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –æ–±—ä–µ–∫—Ç–∞
            local objPos = nil
            if obj:IsA("Model") then
                local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
                if success then
                    objPos = modelCFrame.Position
                end
            elseif obj:IsA("BasePart") then
                objPos = obj.Position
            end
            
            if objPos then
                local distance = (objPos - playerPos).Magnitude
                
                -- –¢–û–õ–¨–ö–û –û–ß–ï–ù–¨ –ë–õ–ò–ó–ö–ò–ï –û–ë–™–ï–ö–¢–´!
                if distance <= SEARCH_RADIUS then
                    -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞
                    local objType = "Unknown"
                    local hasUUID = false
                    local hasCurlyBraces = false
                    local hasSquareBraces = false
                    local isPotentialPet = false
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –Ω–∞ UUID —Ñ–æ—Ä–º–∞—Ç—ã
                    if obj.Name:find("%{") and obj.Name:find("%}") then
                        hasUUID = true
                        hasCurlyBraces = true
                        objType = "UUID (Curly {})"
                        isPotentialPet = true
                    elseif obj.Name:find("%[") and obj.Name:find("%]") then
                        hasUUID = true
                        hasSquareBraces = true
                        objType = "UUID (Square [])"
                        isPotentialPet = true
                    elseif obj.Name:find("Dog") or obj.Name:find("KG") then
                        objType = "Dog"
                        isPotentialPet = true
                    elseif obj.Name:find("Dragonfly") then
                        objType = "Dragonfly"
                        isPotentialPet = true
                    elseif obj.Name:find("Pet") or obj.Name:find("Age") then
                        objType = "Possible Pet"
                        isPotentialPet = true
                    end
                    
                    -- –°—á–∏—Ç–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                    local meshCount = 0
                    if obj:IsA("Model") then
                        for _, child in pairs(obj:GetDescendants()) do
                            if child:IsA("MeshPart") or child:IsA("SpecialMesh") then
                                meshCount = meshCount + 1
                            end
                        end
                    elseif obj:IsA("MeshPart") then
                        meshCount = 1
                    end
                    
                    table.insert(nearbyObjects, {
                        object = obj,
                        distance = distance,
                        objType = objType,
                        hasUUID = hasUUID,
                        hasCurlyBraces = hasCurlyBraces,
                        hasSquareBraces = hasSquareBraces,
                        isPotentialPet = isPotentialPet,
                        meshCount = meshCount,
                        className = obj.ClassName
                    })
                end
            end
        end
    end
    
    -- –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é (–±–ª–∏–∂–∞–π—à–∏–µ –ø–µ—Ä–≤—ã–µ)
    table.sort(nearbyObjects, function(a, b) return a.distance < b.distance end)
    
    print("üìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø ===")
    print(string.format("üì¶ –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: %d", totalScanned))
    print(string.format("üìç –û–±—ä–µ–∫—Ç–æ–≤ —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º (–≤ %d —Å—Ç–∞–¥–∞—Ö): %d", SEARCH_RADIUS, #nearbyObjects))
    print()
    
    if #nearbyObjects == 0 then
        print("‚ùå –†–Ø–î–û–ú –° –í–ê–ú–ò –ù–ò–ß–ï–ì–û –ù–ï–¢!")
        print("üí° –ü–æ–¥–æ–π–¥–∏—Ç–µ –±–ª–∏–∂–µ –∫ –ø–∏—Ç–æ–º—Ü—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
        return
    end
    
    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
    print("üéØ === –û–ë–™–ï–ö–¢–´ –†–Ø–î–û–ú –° –í–ê–ú–ò ===")
    for i, item in ipairs(nearbyObjects) do
        local icon = "üì¶"
        if item.isPotentialPet then
            icon = "üêæ"
        elseif item.hasUUID then
            icon = "üîë"
        end
        
        print(string.format("%s [%d] %s (%s)", icon, i, item.object.Name, item.className))
        print(string.format("    üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: %.1f —Å—Ç–∞–¥–æ–≤", item.distance))
        print(string.format("    üè∑Ô∏è –¢–∏–ø: %s", item.objType))
        
        if item.hasUUID then
            if item.hasCurlyBraces then
                print("    üîë UUID —Ñ–æ—Ä–º–∞—Ç: –§–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ {}")
            elseif item.hasSquareBraces then
                print("    üîë UUID —Ñ–æ—Ä–º–∞—Ç: –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ []")
            end
        end
        
        print(string.format("    üëÄ –í–∏–∑—É–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: %d meshes", item.meshCount))
        
        if item.isPotentialPet then
            print("    üêæ *** –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ô –ü–ò–¢–û–ú–ï–¶! ***")
        end
        
        print()
    end
    
    -- –û—Ç–¥–µ–ª—å–Ω–æ –≤—ã–¥–µ–ª—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤
    local potentialPets = {}
    for _, item in ipairs(nearbyObjects) do
        if item.isPotentialPet then
            table.insert(potentialPets, item)
        end
    end
    
    if #potentialPets > 0 then
        print("üêæ === –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ü–ò–¢–û–ú–¶–´ ===")
        for i, pet in ipairs(potentialPets) do
            print(string.format("üêæ [%d] %s", i, pet.object.Name))
            print(string.format("    üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: %.1f —Å—Ç–∞–¥–æ–≤", pet.distance))
            print(string.format("    üè∑Ô∏è –¢–∏–ø: %s", pet.objType))
            print(string.format("    üëÄ –í–∏–∑—É–∞–ª—ã: %d meshes", pet.meshCount))
            print()
        end
    else
        print("‚ùå –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–• –ü–ò–¢–û–ú–¶–ï–í –ù–ï –ù–ê–ô–î–ï–ù–û!")
        print("üí° –ü–æ–¥–æ–π–¥–∏—Ç–µ –≤–ø–ª–æ—Ç–Ω—É—é –∫ –ø–∏—Ç–æ–º—Ü—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    local oldGui = playerGui:FindFirstChild("NearbyScannerGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NearbyScannerGUI"
    screenGui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 250, 0, 80)
    frame.Position = UDim2.new(0, 50, 0, 250) -- –ü–æ–¥ PetScaler
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 165, 0) -- –û—Ä–∞–Ω–∂–µ–≤–∞—è —Ä–∞–º–∫–∞
    frame.Parent = screenGui
    
    local button = Instance.new("TextButton")
    button.Name = "ScanButton"
    button.Size = UDim2.new(0, 230, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 20)
    button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
    button.BorderSizePixel = 0
    button.Text = "üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä—è–¥–æ–º"
    button.TextColor3 = Color3.fromRGB(0, 0, 0)
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.Parent = frame
    
    button.MouseButton1Click:Connect(function()
        button.Text = "‚è≥ –°–∫–∞–Ω–∏—Ä—É—é..."
        button.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
        
        spawn(function()
            scanNearbyObjects()
            
            wait(2)
            button.Text = "üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä—è–¥–æ–º"
            button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        end)
    end)
    
    button.MouseEnter:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(255, 165, 0) then
            button.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
        end
    end)
    
    button.MouseLeave:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(255, 140, 0) then
            button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        end
    end)
    
    print("üñ•Ô∏è Nearby Scanner GUI —Å–æ–∑–¥–∞–Ω!")
end

-- –ó–∞–ø—É—Å–∫
createGUI()
print("=" .. string.rep("=", 50))
print("üí° NEARBY SCANNER:")
print("   1. –ò—â–µ—Ç –í–°–ï –æ–±—ä–µ–∫—Ç—ã –≤ —Ä–∞–¥–∏—É—Å–µ 20 —Å—Ç–∞–¥–æ–≤")
print("   2. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤")
print("   3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç UUID —Ñ–æ—Ä–º–∞—Ç—ã –∏ –≤–∏–∑—É–∞–ª—ã")
print("üéØ –ü–æ–¥–æ–π–¥–∏—Ç–µ –í–ü–õ–û–¢–ù–£–Æ –∫ –ø–∏—Ç–æ–º—Ü—É –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É!")
print("=" .. string.rep("=", 50))
