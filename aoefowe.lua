-- üåü –ü–õ–ê–í–ù–ê–Ø –§–ò–ö–°–ê–¶–ò–Ø –ú–ê–ì–ò–ß–ï–°–ö–û–ì–û IDLE - –ë–ï–ó –õ–ê–ì–û–í!
-- –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –¥–µ—Ä–≥–∞–Ω–∏—è –∏ –ª–∞–≥–∏ –ø—Ä–∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–∏—Ç–æ–º—Ü–∞ –≤ idle —Å–æ—Å—Ç–æ—è–Ω–∏–∏

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

-- üîç –ü–û–ò–°–ö –ü–ò–¢–û–ú–¶–ê (–†–ê–ë–û–ß–ê–Ø –í–ï–†–°–ò–Ø)
local function hasPetVisuals(model)
    local meshCount = 0
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") or obj:IsA("SpecialMesh") then
            meshCount = meshCount + 1
        end
    end
    return meshCount > 0
end

local function findPet()
    local character = player.Character
    if not character then 
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil 
    end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then 
        print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil 
    end
    
    local playerPos = hrp.Position
    
    print("üîç –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–µ–≤ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏...")
    
    local foundPets = {}
    local SEARCH_RADIUS = 100
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= SEARCH_RADIUS then
                    if hasPetVisuals(obj) then
                        table.insert(foundPets, {
                            model = obj,
                            distance = distance
                        })
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                    end
                end
            end
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    table.sort(foundPets, function(a, b) return a.distance < b.distance end)
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.model.Name)
    
    return targetPet.model
end

-- üéØ –ü–†–û–í–ï–†–ö–ê –ù–ê –ú–ê–ì–ò–ß–ï–°–ö–ò–ô –ú–û–ú–ï–ù–¢
local function isMagicalIdleMoment(petModel)
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    
    -- –£—Å–ª–æ–≤–∏–µ 1: –ù–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è
    local noMovement = true
    if humanoid then
        noMovement = humanoid.MoveDirection.Magnitude < 0.01
    end
    
    -- –£—Å–ª–æ–≤–∏–µ 2: –ï—Å—Ç—å —Ç–æ–ª—å–∫–æ idle –∞–Ω–∏–º–∞—Ü–∏–∏
    local hasOnlyIdleAnimation = false
    local animationCount = 0
    
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Animator") then
            local tracks = obj:GetPlayingAnimationTracks()
            animationCount = #tracks
            
            if animationCount > 0 then
                hasOnlyIdleAnimation = true
                for _, track in pairs(tracks) do
                    local name = track.Animation.Name:lower()
                    local id = track.Animation.AnimationId:lower()
                    
                    if not name:find("idle") and not id:find("1073293904134356") then
                        hasOnlyIdleAnimation = false
                        break
                    end
                end
            end
            break
        end
    end
    
    return noMovement and hasOnlyIdleAnimation and animationCount > 0
end

-- üìä –ó–ê–ü–ò–°–¨ –ú–ê–ì–ò–ß–ï–°–ö–ò–• –ü–û–ó (–ë–´–°–¢–†–ê–Ø –í–ï–†–°–ò–Ø)
local function recordMagicalPoses(petModel, duration)
    print("üé¨ –ó–∞–ø–∏—Å—ã–≤–∞—é –º–∞–≥–∏—á–µ—Å–∫–∏–µ idle –ø–æ–∑—ã (–±—ã—Å—Ç—Ä–æ)...")
    
    local motor6Ds = {}
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motor6Ds, obj)
        end
    end
    
    if #motor6Ds == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    local poses = {}
    local frameCount = 0
    local targetFrames = duration * 60
    
    local recordConnection
    recordConnection = RunService.Heartbeat:Connect(function()
        frameCount = frameCount + 1
        
        local framePoses = {}
        for _, motor in pairs(motor6Ds) do
            framePoses[motor.Name] = {
                C0 = motor.C0,
                C1 = motor.C1,
                Transform = motor.Transform
            }
        end
        
        table.insert(poses, framePoses)
        
        if frameCount >= targetFrames then
            recordConnection:Disconnect()
        end
    end)
    
    while frameCount < targetFrames and recordConnection.Connected do
        wait(0.1)
    end
    
    print(string.format("‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ %d –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –ø–æ–∑!", #poses))
    return poses, motor6Ds
end

-- üåü –ü–õ–ê–í–ù–ê–Ø –§–ò–ö–°–ê–¶–ò–Ø –ë–ï–ó –õ–ê–ì–û–í
local function smoothMagicalFix(petModel, magicalPoses, motor6Ds)
    print("üåü –ó–∞–ø—É—Å–∫–∞—é –ü–õ–ê–í–ù–£–Æ —Ñ–∏–∫—Å–∞—Ü–∏—é –±–µ–∑ –ª–∞–≥–æ–≤...")
    
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    local originalPosition = rootPart and rootPart.Position or Vector3.new(0, 0, 0)
    
    -- –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–∫—Å–∞—Ü–∏–∏
    local fixState = {
        currentFrame = 1,
        frameRate = 60,
        frameInterval = 1 / 60,
        lastFrameTime = tick(),
        
        -- –ê–Ω—Ç–∏-–ª–∞–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        positionTolerance = 0.5,  -- –ë–æ–ª—å—à–µ —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å –∫ –¥–≤–∏–∂–µ–Ω–∏—é
        teleportCooldown = 0.5,   -- –ö—É–ª–¥–∞—É–Ω –Ω–∞ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—é
        lastTeleportTime = 0,
        
        -- –ü–ª–∞–≤–Ω–æ—Å—Ç—å
        smoothingEnabled = true,
        smoothingFactor = 0.8,    -- –ü–ª–∞–≤–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑
        
        -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        teleportCount = 0,
        blockedAnimations = 0
    }
    
    local fixConnection
    fixConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        -- –ú–Ø–ì–ö–ê–Ø –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è (–Ω–µ –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
        if now % 0.2 < 0.016 then -- –∫–∞–∂–¥—ã–µ 0.2 —Å–µ–∫—É–Ω–¥—ã
            if humanoid then
                -- –ü–ª–∞–≤–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–º–µ—Å—Ç–æ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –æ–±–Ω—É–ª–µ–Ω–∏—è
                if humanoid.WalkSpeed > 0 then
                    humanoid.WalkSpeed = math.max(0, humanoid.WalkSpeed - 5)
                end
                humanoid.JumpPower = 0
                humanoid.PlatformStand = true
            end
        end
        
        -- –£–ú–ù–ê–Ø —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–º —Å–¥–≤–∏–≥–µ –∏ —Å –∫—É–ª–¥–∞—É–Ω–æ–º)
        if rootPart and originalPosition then
            local distance = (rootPart.Position - originalPosition).Magnitude
            
            if distance > fixState.positionTolerance and (now - fixState.lastTeleportTime) > fixState.teleportCooldown then
                -- –ü–ª–∞–≤–Ω–∞—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –≤–º–µ—Å—Ç–æ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π
                local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
                local tween = TweenService:Create(rootPart, tweenInfo, {Position = originalPosition})
                tween:Play()
                
                fixState.lastTeleportTime = now
                fixState.teleportCount = fixState.teleportCount + 1
                
                -- –¢–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ –ª–æ–≥–∏
                if fixState.teleportCount % 5 == 1 then
                    print(string.format("üîÑ –ü–ª–∞–≤–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø–æ–∑–∏—Ü–∏–∏ #%d (—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: %.2f)", 
                        fixState.teleportCount, distance))
                end
            end
        end
        
        -- –°–ï–õ–ï–ö–¢–ò–í–ù–û–ï —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π (–Ω–µ –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
        if now % 0.3 < 0.016 then -- –∫–∞–∂–¥—ã–µ 0.3 —Å–µ–∫—É–Ω–¥—ã
            for _, obj in pairs(petModel:GetDescendants()) do
                if obj:IsA("Animator") then
                    local tracks = obj:GetPlayingAnimationTracks()
                    for _, track in pairs(tracks) do
                        local name = track.Animation.Name:lower()
                        local id = track.Animation.AnimationId:lower()
                        
                        if not name:find("idle") and not id:find("1073293904134356") then
                            track:Stop()
                            fixState.blockedAnimations = fixState.blockedAnimations + 1
                            
                            -- –¢–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ –ª–æ–≥–∏
                            if fixState.blockedAnimations % 10 == 1 then
                                print(string.format("üíÄ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∞–Ω–∏–º–∞—Ü–∏–π: %d", fixState.blockedAnimations))
                            end
                        end
                    end
                end
            end
        end
        
        -- –ü–õ–ê–í–ù–û–ï –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –ø–æ–∑
        if now - fixState.lastFrameTime >= fixState.frameInterval then
            fixState.lastFrameTime = now
            
            local framePoses = magicalPoses[fixState.currentFrame]
            if framePoses then
                for _, motor in pairs(motor6Ds) do
                    local pose = framePoses[motor.Name]
                    if pose then
                        pcall(function()
                            if fixState.smoothingEnabled then
                                -- –ü–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–∑ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ä–≥–∞–Ω–∏–π
                                local currentC0 = motor.C0
                                local targetC0 = pose.C0
                                motor.C0 = currentC0:Lerp(targetC0, fixState.smoothingFactor)
                                
                                local currentC1 = motor.C1
                                local targetC1 = pose.C1
                                motor.C1 = currentC1:Lerp(targetC1, fixState.smoothingFactor)
                                
                                -- Transform –ø—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞–ø—Ä—è–º—É—é (–æ–Ω –º–µ–Ω–µ–µ –∫—Ä–∏—Ç–∏—á–µ–Ω)
                                motor.Transform = pose.Transform
                            else
                                -- –ü—Ä—è–º–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
                                motor.C0 = pose.C0
                                motor.C1 = pose.C1
                                motor.Transform = pose.Transform
                            end
                        end)
                    end
                end
            end
            
            fixState.currentFrame = fixState.currentFrame + 1
            if fixState.currentFrame > #magicalPoses then
                fixState.currentFrame = 1
                
                -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–∂–¥—ã–π —Ü–∏–∫–ª
                print(string.format("üîÑ –¶–∏–∫–ª –∑–∞–≤–µ—Ä—à–µ–Ω | –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–π: %d | –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∞–Ω–∏–º–∞—Ü–∏–π: %d", 
                    fixState.teleportCount, fixState.blockedAnimations))
            end
        end
    end)
    
    print("üåü –ü–ª–∞–≤–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
    print("‚ú® –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: —Ç–æ–ª–µ—Ä–∞–Ω—Ç–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏ = " .. fixState.positionTolerance)
    print("‚è∞ –ö—É–ª–¥–∞—É–Ω —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ = " .. fixState.teleportCooldown .. " —Å–µ–∫")
    print("üé≠ –ü–ª–∞–≤–Ω–æ—Å—Ç—å –ø–æ–∑ = " .. (fixState.smoothingFactor * 100) .. "%")
    
    return fixConnection, fixState
end

-- üéØ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –ü–õ–ê–í–ù–ê–Ø –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –§–ò–ö–°–ê–¶–ò–Ø
local function smoothInstantFix()
    local petModel = findPet()
    if not petModel then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    if isMagicalIdleMoment(petModel) then
        print("üåü –ü–∏—Ç–æ–º–µ—Ü –≤ –º–∞–≥–∏—á–µ—Å–∫–æ–º idle! –ó–∞–ø—É—Å–∫–∞—é –ø–ª–∞–≤–Ω—É—é —Ñ–∏–∫—Å–∞—Ü–∏—é...")
        
        -- –ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å –ø–æ–∑ (2 —Å–µ–∫—É–Ω–¥—ã)
        local magicalPoses, motor6Ds = recordMagicalPoses(petModel, 2)
        if magicalPoses then
            local connection, state = smoothMagicalFix(petModel, magicalPoses, motor6Ds)
            print("üéâ –£–°–ü–ï–•! –ü–ª–∞–≤–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞!")
            print("üí° –ü–∏—Ç–æ–º–µ—Ü –±–æ–ª—å—à–µ –Ω–µ –¥–æ–ª–∂–µ–Ω –ª–∞–≥–∞—Ç—å!")
            
            -- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
            spawn(function()
                wait(300)
                connection:Disconnect()
                print("‚èπÔ∏è –ü–ª–∞–≤–Ω–∞—è —Ñ–∏–∫—Å–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
                print(string.format("üìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–π = %d, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –∞–Ω–∏–º–∞—Ü–∏–π = %d", 
                    state.teleportCount, state.blockedAnimations))
            end)
            
            return connection
        end
    else
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –ù–ï –≤ idle —Å–æ—Å—Ç–æ—è–Ω–∏–∏!")
        print("üí° –î–æ–∂–¥–∏—Å—å –∫–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –≤—Å—Ç–∞–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞")
    end
end

-- üöÄ –ó–ê–ü–£–°–ö
print("\nüåü === –ü–õ–ê–í–ù–ê–Ø –§–ò–ö–°–ê–¶–ò–Ø –ú–ê–ì–ò–ß–ï–°–ö–û–ì–û IDLE ===")
print("‚ú® –£—Å—Ç—Ä–∞–Ω—è–µ—Ç –ª–∞–≥–∏ –∏ –¥–µ—Ä–≥–∞–Ω–∏—è –ø—Ä–∏ —Ñ–∏–∫—Å–∞—Ü–∏–∏!")
print("üéØ –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")

spawn(function()
    wait(2)
    smoothInstantFix()
end)
