-- PetScaler v2.5 - –ù–ï–ó–ê–í–ò–°–ò–ú–ê–Ø –ö–û–ü–ò–Ø –° –¢–û–õ–¨–ö–û IDLE –ê–ù–ò–ú–ê–¶–ò–ï–ô
-- –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞ –∫–æ—Ç–æ—Ä–∞—è –¢–û–õ–¨–ö–û –≤ idle –∞–Ω–∏–º–∞—Ü–∏–∏

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üî• === PET SCALER v2.5 - –ù–ï–ó–ê–í–ò–°–ò–ú–ê–Ø –ö–û–ü–ò–Ø –° IDLE ===")
print("=" .. string.rep("=", 70))

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –∫–æ–ø–∏–∏
local CONFIG = {
    SCALE_FACTOR = 1.0,  -- –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä (–Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º)
    TWEEN_TIME = 3,      -- –í—Ä–µ–º—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    SEARCH_RADIUS = 50,  -- –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞
    IDLE_RECORD_TIME = 3, -- –í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏ idle –ø–æ–∑
    IDLE_FPS = 60        -- FPS –∑–∞–ø–∏—Å–∏ idle
}

-- === –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò ===

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π –º–æ–¥–µ–ª–∏
local function getAllParts(model)
    local parts = {}
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            table.insert(parts, obj)
        end
    end
    return parts
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö Motor6D
local function getMotor6Ds(model)
    local motors = {}
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motors, obj)
        end
    end
    return motors
end

-- –ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
local function deepCopyModel(original)
    if not original then
        print("‚ùå –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return nil
    end
    
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª—É–±–æ–∫–æ–π –∫–æ–ø–∏–∏ –º–æ–¥–µ–ª–∏...")
    
    local success, copy = pcall(function()
        return original:Clone()
    end)
    
    if not success or not copy then
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏!")
        return nil
    end
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ø–∏–∏ —Ä—è–¥–æ–º —Å –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º
    local originalCFrame = original:GetModelCFrame()
    local offset = Vector3.new(10, 0, 0) -- –°–º–µ—â–µ–Ω–∏–µ –Ω–∞ 10 —Å—Ç–∞–¥–æ–≤ –≤–ø—Ä–∞–≤–æ
    
    copy:SetPrimaryPartCFrame(originalCFrame + offset)
    copy.Parent = Workspace
    copy.Name = original.Name .. "_IndependentCopy"
    
    print("‚úÖ –ö–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞:", copy.Name)
    return copy
end

-- –£–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
local function smartAnchoredManagement(parts)
    print("üß† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    local rootPart = nil
    
    -- –ù–∞—Ö–æ–¥–∏–º –≥–ª–∞–≤–Ω—É—é —á–∞—Å—Ç—å (HumanoidRootPart –∏–ª–∏ Torso)
    for _, part in pairs(parts) do
        if part.Name == "HumanoidRootPart" or part.Name == "Torso" then
            rootPart = part
            break
        end
    end
    
    -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for _, part in pairs(parts) do
        if part == rootPart then
            part.Anchored = true  -- –¢–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–∞—è —á–∞—Å—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞
            print("‚öì –ì–ª–∞–≤–Ω–∞—è —á–∞—Å—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞:", part.Name)
        else
            part.Anchored = false -- –û—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ —Å–≤–æ–±–æ–¥–Ω—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
        end
    end
    
    print("‚úÖ Anchored —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è", #parts, "—á–∞—Å—Ç–µ–π")
    return rootPart
end

-- === –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ù–ï–ó–ê–í–ò–°–ò–ú–û–ô IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ idle –º–æ–º–µ–Ω—Ç–∞
local function isMagicalIdleMoment(petModel)
    if not petModel or not petModel.Parent then
        return false
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–∏—Ç–æ–º–µ—Ü —Å—Ç–æ–∏—Ç –Ω–∞ –º–µ—Å—Ç–µ
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    if not rootPart then
        return false
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å - –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–ª–∏–∑–∫–∞ –∫ –Ω—É–ª—é
    local velocity = rootPart.AssemblyLinearVelocity
    if velocity.Magnitude > 0.5 then
        return false
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å Humanoid –∏ –æ–Ω –Ω–µ –¥–≤–∏–∂–µ—Ç—Å—è
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid.MoveDirection.Magnitude > 0.1 then
        return false
    end
    
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø–∏—Å–∏ idle –ø–æ–∑
local function recordIdlePoses(petModel)
    print("üì∏ –ó–∞–ø–∏—Å—å idle –ø–æ–∑ Motor6D...")
    
    local motors = getMotor6Ds(petModel)
    if #motors == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –∑–∞–ø–∏—Å–∏!")
        return nil, nil
    end
    
    local idlePoses = {}
    
    -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–∑—ã –≤—Å–µ—Ö Motor6D
    for _, motor in pairs(motors) do
        if motor and motor.Parent then
            idlePoses[motor.Name] = {
                C0 = motor.C0,
                C1 = motor.C1,
                Transform = motor.Transform
            }
        end
    end
    
    print("‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ idle –ø–æ–∑:", #motors)
    return idlePoses, motors
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π idle –∞–Ω–∏–º–∞—Ü–∏–∏
local function createIndependentIdleAnimation(copyModel, idlePoses, originalMotors)
    print("üé≠ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π idle –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    if not idlePoses or not originalMotors then
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö idle –ø–æ–∑!")
        return nil
    end
    
    local copyMotors = getMotor6Ds(copyModel)
    if #copyMotors == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–ø–∏–∏!")
        return nil
    end
    
    print("üîß –ù–∞–π–¥–µ–Ω–æ Motor6D –≤ –∫–æ–ø–∏–∏:", #copyMotors)
    
    -- –ö–†–ò–¢–ò–ß–ù–û: –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –∫–æ–ø–∏–∏
    for _, obj in pairs(copyModel:GetDescendants()) do
        if obj:IsA("Humanoid") then
            obj:Destroy()  -- –£–¥–∞–ª—è–µ–º Humanoid - –Ω–∏–∫–∞–∫–æ–π AI!
            print("üíÄ Humanoid —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ–ø–∏–∏ - –Ω–∏–∫–∞–∫–æ–π AI!")
        end
        if obj:IsA("Animator") then
            obj:Destroy()  -- –£–¥–∞–ª—è–µ–º Animator - –Ω–∏–∫–∞–∫–∏—Ö –∞–Ω–∏–º–∞—Ü–∏–π!
            print("üé¨ Animator —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ–ø–∏–∏ - –Ω–∏–∫–∞–∫–∏—Ö –∞–Ω–∏–º–∞—Ü–∏–π!")
        end
        if obj:IsA("AnimationController") then
            obj:Destroy()  -- –£–¥–∞–ª—è–µ–º AnimationController
            print("üéÆ AnimationController —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ–ø–∏–∏!")
        end
    end
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º idle –ø–æ–∑—ã –∫ –∫–æ–ø–∏–∏
    local appliedCount = 0
    for _, motor in pairs(copyMotors) do
        if motor and motor.Parent and idlePoses[motor.Name] then
            local pose = idlePoses[motor.Name]
            motor.C0 = pose.C0
            motor.C1 = pose.C1
            if pose.Transform then
                motor.Transform = pose.Transform
            end
            appliedCount = appliedCount + 1
        end
    end
    
    print("‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ idle –ø–æ–∑:", appliedCount)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ idle –ø–æ–∑ (–∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ)
    local idleConnection = RunService.Heartbeat:Connect(function()
        for _, motor in pairs(copyMotors) do
            if motor and motor.Parent and idlePoses[motor.Name] then
                local pose = idlePoses[motor.Name]
                motor.C0 = pose.C0
                motor.C1 = pose.C1
                if pose.Transform then
                    motor.Transform = pose.Transform
                end
            end
        end
    end)
    
    print("üîÑ –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è idle –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
    return idleConnection
end

-- –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–∞ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏
local function findPetWithBraces()
    print("üîç –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–µ–≤ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏...")
    
    local foundPets = {}
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            table.insert(foundPets, obj)
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.Name)
    
    return targetPet
end

-- === –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ===

local function main()
    print("\nüöÄ === –ó–ê–ü–£–°–ö PETSCALER v2.5 - –ù–ï–ó–ê–í–ò–°–ò–ú–ê–Ø –ö–û–ü–ò–Ø ===")
    
    -- –®–∞–≥ 1: –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–∞ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏
    print("\nüîç === –ü–û–ò–°–ö –ü–ò–¢–û–ú–¶–ê ===")
    
    local petModel = findPetWithBraces()
    if not petModel then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    -- –®–∞–≥ 2: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ idle –º–æ–º–µ–Ω—Ç–∞
    print("\nüåü === –ü–û–ò–°–ö IDLE –ú–û–ú–ï–ù–¢–ê ===")
    print("üí° –î–æ–∂–¥–∏—Å—å –∫–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –≤—Å—Ç–∞–Ω–µ—Ç –≤ idle –ø–æ–∑—É...")
    
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ –±–µ–∑ Promise
    local idleData = nil
    local searchStartTime = tick()
    local lastCheckTime = 0
    
    local searchConnection
    searchConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        if now - lastCheckTime >= 0.1 then
            lastCheckTime = now
            
            if isMagicalIdleMoment(petModel) then
                print("üåü –ú–ê–ì–ò–ß–ï–°–ö–ò–ô IDLE –ú–û–ú–ï–ù–¢ –ù–ê–ô–î–ï–ù!")
                searchConnection:Disconnect()
                
                local idlePoses, motors = recordIdlePoses(petModel)
                if idlePoses then
                    idleData = {poses = idlePoses, motors = motors}
                end
                return
            end
            
            -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
            if math.floor(now - searchStartTime) % 10 == 0 and (now - searchStartTime) % 10 < 0.1 then
                print(string.format("üîç –ü–æ–∏—Å–∫ idle –º–æ–º–µ–Ω—Ç–∞... %.0f —Å–µ–∫", now - searchStartTime))
            end
            
            if now - searchStartTime >= 60 then
                searchConnection:Disconnect()
                print("‚è∞ –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ idle –º–æ–º–µ–Ω—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ!")
                return
            end
        end
    end)
    
    -- –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
    while not idleData and searchConnection.Connected do
        wait(0.1)
    end
    
    if not idleData then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ idle –º–æ–º–µ–Ω—Ç!")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∫–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –±—É–¥–µ—Ç —Å—Ç–æ—è—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ")
        return
    end
    
    -- –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –∫–æ–ø–∏–∏
    print("\nüìã === –°–û–ó–î–ê–ù–ò–ï –ù–ï–ó–ê–í–ò–°–ò–ú–û–ô –ö–û–ü–ò–ò ===")
    local petCopy = deepCopyModel(petModel)
    
    if not petCopy then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é!")
        return
    end
    
    -- –®–∞–≥ 4: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Anchored –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    print("\nüß† === –ù–ê–°–¢–†–û–ô–ö–ê ANCHORED –î–õ–Ø –ê–ù–ò–ú–ê–¶–ò–ò ===")
    local copyParts = getAllParts(petCopy)
    local rootPart = smartAnchoredManagement(copyParts)
    
    -- –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π idle –∞–Ω–∏–º–∞—Ü–∏–∏
    print("\nüé≠ === –ó–ê–ü–£–°–ö –ù–ï–ó–ê–í–ò–°–ò–ú–û–ô IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    local idleConnection = createIndependentIdleAnimation(petCopy, idleData.poses, idleData.motors)
    
    if idleConnection then
        print("üéâ === –£–°–ü–ï–•! ===")
        print("‚úÖ –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        print("‚úÖ –¢–æ–ª—å–∫–æ idle –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞")
        print("üö´ –ö–æ–ø–∏—è –ù–ï –∫–æ–ø–∏—Ä—É–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–∞")
        print("üíÄ Humanoid —É–¥–∞–ª–µ–Ω - –∫–æ–ø–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–∑–∞–≤–∏—Å–∏–º–∞")
        print("üîÑ –ö–æ–ø–∏—è –±—É–¥–µ—Ç –¢–û–õ–¨–ö–û –≤ idle - –Ω–∏–∫–∞–∫–æ–π —Ö–æ–¥—å–±—ã!")
        
        -- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç
        spawn(function()
            wait(300)
            idleConnection:Disconnect()
            print("‚èπÔ∏è –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è idle –∞–Ω–∏–º–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
        end)
    else
        print("‚ö†Ô∏è –ö–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞, –Ω–æ idle –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å Motor6D –∏–ª–∏ idle –ø–æ–∑–∞–º–∏")
    end
end

-- === GUI ===

local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ GUI –µ—Å–ª–∏ –µ—Å—Ç—å
    local oldGui = playerGui:FindFirstChild("PetScalerV25GUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetScalerV25GUI"
    screenGui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 280, 0, 80)
    frame.Position = UDim2.new(0, 50, 0, 150)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(0, 255, 255) -- –¶–∏–∞–Ω–æ–≤–∞—è —Ä–∞–º–∫–∞
    frame.Parent = screenGui
    
    local button = Instance.new("TextButton")
    button.Name = "IndependentIdleButton"
    button.Size = UDim2.new(0, 260, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 20)
    button.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    button.BorderSizePixel = 0
    button.Text = "üé≠ PetScaler v2.5 - –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è IDLE"
    button.TextColor3 = Color3.fromRGB(0, 0, 0)
    button.TextSize = 13
    button.Font = Enum.Font.SourceSansBold
    button.Parent = frame
    
    button.MouseButton1Click:Connect(function()
        button.Text = "‚è≥ –ò—â—É idle –º–æ–º–µ–Ω—Ç..."
        button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        spawn(function()
            main()
            
            wait(3)
            button.Text = "üé≠ PetScaler v2.5 - –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è IDLE"
            button.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
        end)
    end)
    
    button.MouseEnter:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(0, 255, 255) then
            button.BackgroundColor3 = Color3.fromRGB(0, 220, 220)
        end
    end)
    
    button.MouseLeave:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(0, 220, 220) then
            button.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
        end
    end)
    
    print("üñ•Ô∏è PetScaler v2.5 GUI —Å–æ–∑–¥–∞–Ω!")
end

-- –ó–∞–ø—É—Å–∫
createGUI()

print("=" .. string.rep("=", 70))
print("üí° PETSCALER v2.5 - –ù–ï–ó–ê–í–ò–°–ò–ú–ê–Ø –ö–û–ü–ò–Ø –° IDLE:")
print("   1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ—Ç idle –º–æ–º–µ–Ω—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞")
print("   2. –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ idle –ø–æ–∑—ã Motor6D")
print("   3. –°–æ–∑–¥–∞–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º—É—é –∫–æ–ø–∏—é (–±–µ–∑ Humanoid)")
print("   4. –ö–æ–ø–∏—è –¢–û–õ–¨–ö–û –≤ idle - –Ω–∏–∫–∞–∫–æ–π —Ö–æ–¥—å–±—ã!")
print("   5. –ù–ï –∫–æ–ø–∏—Ä—É–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª–∞")
print("üéØ –ù–∞–∂–º–∏—Ç–µ —Ü–∏–∞–Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞!")
print("=" .. string.rep("=", 70))
