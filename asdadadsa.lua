-- FocusedEggToHandTracker.lua
-- –§–û–ö–£–°–ò–†–û–í–ê–ù–ù–´–ô –¢–†–ï–ö–ï–†: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –¢–û–õ–¨–ö–û –Ω—É–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
-- 1. EggExplode - –≤–∑—Ä—ã–≤ —è–π—Ü–∞
-- 2. –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞ (dog/bunny/golden lab) –≤ workspace
-- 3. Tool –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ –∏–≥—Ä–æ–∫–∞

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üéØ === FOCUSED EGG TO HAND TRACKER ===")
print("ü•ö –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç: EggExplode ‚Üí –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å ‚Üí Tool –≤ —Ä—É–∫–µ")
print("=" .. string.rep("=", 60))

-- üìä –¢–†–ï–ö–ò–ù–ì –î–ê–ù–ù–´–•
local TrackingData = {
    eggExplodeTime = nil,
    tempModelTime = nil,
    toolInHandTime = nil,
    tempModelName = nil,
    toolName = nil,
    isTracking = false
}

-- üñ•Ô∏è –ö–û–ù–°–û–õ–¨
local TrackerConsole = nil
local ConsoleLines = {}
local MaxLines = 50

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏
local function createTrackerConsole()
    if TrackerConsole then TrackerConsole:Destroy() end
    
    TrackerConsole = Instance.new("ScreenGui")
    TrackerConsole.Name = "FocusedEggToHandTrackerConsole"
    TrackerConsole.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 600, 0, 400)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.02, 0.02, 0.1)
    frame.BorderSizePixel = 3
    frame.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
    frame.Parent = TrackerConsole
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 35)
    title.BackgroundColor3 = Color3.new(0.1, 0.8, 0.1)
    title.BorderSizePixel = 0
    title.Text = "üéØ FOCUSED EGG TO HAND TRACKER"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -45)
    scrollFrame.Position = UDim2.new(0, 5, 0, 40)
    scrollFrame.BackgroundColor3 = Color3.new(0.01, 0.01, 0.05)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 10
    scrollFrame.Parent = frame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -10, 1, 0)
    textLabel.Position = UDim2.new(0, 5, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "üéØ –§–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä–µ–∫–µ—Ä –≥–æ—Ç–æ–≤..."
    textLabel.TextColor3 = Color3.new(1, 0.9, 0.9)
    textLabel.TextSize = 12
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Parent = scrollFrame
    
    return textLabel
end

-- –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function trackerLog(category, message, data)
    local timestamp = os.date("%H:%M:%S.") .. string.format("%03d", (tick() % 1) * 1000)
    local prefixes = {
        TRACKER = "üéØ", EGG = "ü•ö", MODEL = "üêï", TOOL = "üéÆ", 
        SUCCESS = "‚úÖ", ERROR = "‚ùå", INFO = "‚ÑπÔ∏è", CRITICAL = "üî•"
    }
    
    local logLine = string.format("[%s] %s %s", timestamp, prefixes[category] or "‚ÑπÔ∏è", message)
    
    if data and next(data) then
        for key, value in pairs(data) do
            logLine = logLine .. string.format("\n    %s: %s", key, tostring(value))
        end
    end
    
    table.insert(ConsoleLines, logLine)
    
    if #ConsoleLines > MaxLines then
        table.remove(ConsoleLines, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å
    if TrackerConsole then
        local textLabel = TrackerConsole:FindFirstChild("Frame"):FindFirstChild("ScrollingFrame"):FindFirstChild("TextLabel")
        if textLabel then
            textLabel.Text = table.concat(ConsoleLines, "\n")
            local scrollFrame = textLabel.Parent
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, textLabel.TextBounds.Y + 10)
            scrollFrame.CanvasPosition = Vector2.new(0, scrollFrame.CanvasSize.Y.Offset)
        end
    end
    
    print(logLine)
end

-- ü•ö –ú–û–ù–ò–¢–û–†–ò–ù–ì EGGEXPLODE
local function monitorEggExplode()
    trackerLog("EGG", "ü•ö –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ EggExplode...")
    
    local eggConnection = Workspace.DescendantAdded:Connect(function(obj)
        if obj.Name == "EggExplode" then
            TrackingData.eggExplodeTime = tick()
            trackerLog("EGG", "ü•ö EGGEXPLODE –û–ë–ù–ê–†–£–ñ–ï–ù!", {
                Time = string.format("%.3f", TrackingData.eggExplodeTime),
                Position = obj.Parent and tostring(obj.Parent.Position) or "NIL",
                Parent = obj.Parent and obj.Parent.Name or "NIL"
            })
        end
    end)
    
    return eggConnection
end

-- üêï –ú–û–ù–ò–¢–û–†–ò–ù–ì –í–†–ï–ú–ï–ù–ù–û–ô –ú–û–î–ï–õ–ò –ü–ò–¢–û–ú–¶–ê
local function monitorTempPetModel()
    trackerLog("MODEL", "üêï –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞...")
    
    local modelConnection = Workspace.DescendantAdded:Connect(function(obj)
        if obj:IsA("Model") then
            local name = obj.Name:lower()
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ –∏–º–µ–Ω–∞ –ø–∏—Ç–æ–º—Ü–µ–≤
            if name == "dog" or name == "bunny" or name == "golden lab" or 
               name == "cat" or name == "rabbit" or name == "puppy" then
                
                TrackingData.tempModelTime = tick()
                TrackingData.tempModelName = obj.Name
                
                local timeSinceEgg = TrackingData.eggExplodeTime and 
                    (TrackingData.tempModelTime - TrackingData.eggExplodeTime) or 0
                
                trackerLog("MODEL", "üêï –í–†–ï–ú–ï–ù–ù–ê–Ø –ú–û–î–ï–õ–¨ –ü–ò–¢–û–ú–¶–ê –û–ë–ù–ê–†–£–ñ–ï–ù–ê!", {
                    Name = obj.Name,
                    Time = string.format("%.3f", TrackingData.tempModelTime),
                    TimeSinceEgg = string.format("%.3f —Å–µ–∫", timeSinceEgg),
                    Parent = obj.Parent and obj.Parent.Name or "NIL",
                    Position = obj.PrimaryPart and tostring(obj.PrimaryPart.Position) or "NIL",
                    Children = #obj:GetChildren()
                })
                
                -- –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–¥–µ–ª–∏
                local structure = {
                    BaseParts = 0,
                    MeshParts = 0,
                    Motor6Ds = 0,
                    Scripts = 0
                }
                
                for _, child in pairs(obj:GetDescendants()) do
                    if child:IsA("BasePart") then
                        structure.BaseParts = structure.BaseParts + 1
                    elseif child:IsA("MeshPart") then
                        structure.MeshParts = structure.MeshParts + 1
                    elseif child:IsA("Motor6D") then
                        structure.Motor6Ds = structure.Motor6Ds + 1
                    elseif child:IsA("Script") or child:IsA("LocalScript") then
                        structure.Scripts = structure.Scripts + 1
                    end
                end
                
                trackerLog("MODEL", "üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏:", structure)
            end
        end
    end)
    
    return modelConnection
end

-- üéÆ –ú–û–ù–ò–¢–û–†–ò–ù–ì TOOL –í –†–£–ö–ï
local function monitorToolInHand()
    trackerLog("TOOL", "üéÆ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Tool –≤ —Ä—É–∫–µ...")
    
    local character = player.Character
    if not character then
        trackerLog("ERROR", "‚ùå Character –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return nil
    end
    
    local toolConnection = character.ChildAdded:Connect(function(obj)
        if obj:IsA("Tool") then
            local name = obj.Name:lower()
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∏–º—è Tool –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞
            if name:find("dog") or name:find("bunny") or name:find("lab") or 
               name:find("cat") or name:find("rabbit") or name:find("puppy") then
                
                TrackingData.toolInHandTime = tick()
                TrackingData.toolName = obj.Name
                
                local timeSinceEgg = TrackingData.eggExplodeTime and 
                    (TrackingData.toolInHandTime - TrackingData.eggExplodeTime) or 0
                local timeSinceModel = TrackingData.tempModelTime and 
                    (TrackingData.toolInHandTime - TrackingData.tempModelTime) or 0
                
                trackerLog("TOOL", "üéÆ TOOL –ü–ò–¢–û–ú–¶–ê –í –†–£–ö–ï –û–ë–ù–ê–†–£–ñ–ï–ù!", {
                    Name = obj.Name,
                    Time = string.format("%.3f", TrackingData.toolInHandTime),
                    TimeSinceEgg = string.format("%.3f —Å–µ–∫", timeSinceEgg),
                    TimeSinceModel = string.format("%.3f —Å–µ–∫", timeSinceModel),
                    Children = #obj:GetChildren()
                })
                
                -- –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Tool
                local handle = obj:FindFirstChild("Handle")
                if handle then
                    trackerLog("TOOL", "üéÆ Handle –Ω–∞–π–¥–µ–Ω!", {
                        Position = tostring(handle.Position),
                        Size = tostring(handle.Size),
                        Material = tostring(handle.Material)
                    })
                end
                
                for _, child in pairs(obj:GetChildren()) do
                    trackerLog("TOOL", string.format("üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ Tool: %s (%s)", child.Name, child.ClassName))
                end
                
                -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
                generateFinalReport()
            end
        end
    end)
    
    return toolConnection
end

-- üìä –ì–ï–ù–ï–†–ê–¶–ò–Ø –ò–¢–û–ì–û–í–û–ì–û –û–¢–ß–ï–¢–ê
local function generateFinalReport()
    trackerLog("CRITICAL", "üìä === –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–†–ï–ö–ò–ù–ì–ê ===")
    
    if TrackingData.eggExplodeTime then
        trackerLog("SUCCESS", string.format("‚úÖ –§–ê–ó–ê 1: EggExplode (%.3f —Å–µ–∫)", TrackingData.eggExplodeTime))
    else
        trackerLog("ERROR", "‚ùå –§–ê–ó–ê 1: EggExplode –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù")
    end
    
    if TrackingData.tempModelTime and TrackingData.tempModelName then
        local delay1 = TrackingData.eggExplodeTime and 
            (TrackingData.tempModelTime - TrackingData.eggExplodeTime) or 0
        trackerLog("SUCCESS", string.format("‚úÖ –§–ê–ó–ê 2: –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å '%s' (+%.3f —Å–µ–∫)", 
            TrackingData.tempModelName, delay1))
    else
        trackerLog("ERROR", "‚ùå –§–ê–ó–ê 2: –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–ê")
    end
    
    if TrackingData.toolInHandTime and TrackingData.toolName then
        local delay2 = TrackingData.tempModelTime and 
            (TrackingData.toolInHandTime - TrackingData.tempModelTime) or 0
        trackerLog("SUCCESS", string.format("‚úÖ –§–ê–ó–ê 3: Tool –≤ —Ä—É–∫–µ '%s' (+%.3f —Å–µ–∫)", 
            TrackingData.toolName, delay2))
    else
        trackerLog("ERROR", "‚ùå –§–ê–ó–ê 3: Tool –≤ —Ä—É–∫–µ –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù")
    end
    
    local totalTime = (TrackingData.toolInHandTime and TrackingData.eggExplodeTime) and 
        (TrackingData.toolInHandTime - TrackingData.eggExplodeTime) or 0
    
    if totalTime > 0 then
        trackerLog("CRITICAL", string.format("‚è±Ô∏è –û–ë–©–ï–ï –í–†–ï–ú–Ø: %.3f —Å–µ–∫—É–Ω–¥", totalTime))
        trackerLog("CRITICAL", "üéØ –í–°–ï –§–ê–ó–´ –£–°–ü–ï–®–ù–û –û–¢–°–õ–ï–ñ–ï–ù–´!")
    else
        trackerLog("ERROR", "‚ùå –ù–ï –í–°–ï –§–ê–ó–´ –ë–´–õ–ò –û–ë–ù–ê–†–£–ñ–ï–ù–´")
    end
end

-- üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –¢–†–ï–ö–ò–ù–ì–ê
local function startFocusedTracking()
    trackerLog("TRACKER", "üöÄ –ó–ê–ü–£–°–ö –§–û–ö–£–°–ò–†–û–í–ê–ù–ù–û–ì–û –¢–†–ï–ö–ò–ù–ì–ê")
    trackerLog("TRACKER", "üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º: EggExplode ‚Üí –ú–æ–¥–µ–ª—å ‚Üí Tool")
    
    TrackingData.isTracking = true
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –º–æ–Ω–∏—Ç–æ—Ä—ã
    local eggConnection = monitorEggExplode()
    local modelConnection = monitorTempPetModel()
    local toolConnection = monitorToolInHand()
    
    trackerLog("TRACKER", "‚úÖ –í—Å–µ –º–æ–Ω–∏—Ç–æ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã!")
    trackerLog("TRACKER", "ü•ö –û–¢–ö–†–û–ô–¢–ï –Ø–ô–¶–û –°–ï–ô–ß–ê–°!")
    
    -- –ê–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    wait(120)
    
    if eggConnection then eggConnection:Disconnect() end
    if modelConnection then modelConnection:Disconnect() end
    if toolConnection then toolConnection:Disconnect() end
    
    trackerLog("TRACKER", "‚è∞ –¢—Ä–µ–∫–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
    generateFinalReport()
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createTrackerGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "FocusedEggToHandTrackerGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 120)
    frame.Position = UDim2.new(1, -320, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.05, 0.1, 0.05)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.new(0.1, 0.8, 0.1)
    title.BorderSizePixel = 0
    title.Text = "üéØ FOCUSED TRACKER"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local startBtn = Instance.new("TextButton")
    startBtn.Size = UDim2.new(1, -20, 0, 40)
    startBtn.Position = UDim2.new(0, 10, 0, 40)
    startBtn.BackgroundColor3 = Color3.new(0.2, 0.8, 0.2)
    startBtn.BorderSizePixel = 0
    startBtn.Text = "üöÄ –ù–ê–ß–ê–¢–¨ –¢–†–ï–ö–ò–ù–ì"
    startBtn.TextColor3 = Color3.new(1, 1, 1)
    startBtn.TextScaled = true
    startBtn.Font = Enum.Font.SourceSansBold
    startBtn.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 30)
    status.Position = UDim2.new(0, 10, 0, 90)
    status.BackgroundTransparency = 1
    status.Text = "–ì–æ—Ç–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —è–π—Ü–æ"
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.Parent = frame
    
    startBtn.MouseButton1Click:Connect(function()
        status.Text = "üéØ –¢—Ä–µ–∫–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω!"
        status.TextColor3 = Color3.new(0.2, 1, 0.2)
        startBtn.Text = "‚úÖ –¢–†–ï–ö–ò–ù–ì –ê–ö–¢–ò–í–ï–ù"
        startBtn.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
        startBtn.Active = false
        
        startFocusedTracking()
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
local consoleTextLabel = createTrackerConsole()
createTrackerGUI()

trackerLog("TRACKER", "‚úÖ FocusedEggToHandTracker –≥–æ—Ç–æ–≤!")
trackerLog("TRACKER", "üéØ –§–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —è–π—Ü–∞ ‚Üí –º–æ–¥–µ–ª—å ‚Üí Tool")
trackerLog("TRACKER", "üöÄ –ù–∞–∂–º–∏—Ç–µ '–ù–ê–ß–ê–¢–¨ –¢–†–ï–ö–ò–ù–ì' –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ!")
