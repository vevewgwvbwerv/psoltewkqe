-- üé¨ –ü–†–Ø–ú–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï MOTOR6D - –ó–ê–ü–ò–°–´–í–ê–ï–ú –ò –í–û–°–ü–†–û–ò–ó–í–û–î–ò–ú IDLE –ü–û–ó–´
-- –°–æ–∑–¥–∞–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é idle –∞–Ω–∏–º–∞—Ü–∏—é —á–µ—Ä–µ–∑ Motor6D

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

print("üé¨ === –ü–†–Ø–ú–û–ï –£–ü–†–ê–í–õ–ï–ù–ò–ï MOTOR6D ===")
print("üéØ –¶–µ–ª—å: –ó–∞–ø–∏—Å–∞—Ç—å idle –ø–æ–∑—ã –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∏—Ö –≤ —Ü–∏–∫–ª–µ")
print("üí° –û–±—Ö–æ–¥–∏–º —Å–∏—Å—Ç–µ–º—É –∞–Ω–∏–º–∞—Ü–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é!")

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position

-- üêæ –†–ê–ë–û–ß–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê –ü–ò–¢–û–ú–¶–ê
local function hasPetVisuals(model)
    local meshCount = 0
    local petMeshes = {}
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or ""
            }
            if meshData.meshId ~= "" then
                table.insert(petMeshes, meshData)
            end
        elseif obj:IsA("SpecialMesh") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or "",
                textureId = obj.TextureId or ""
            }
            if meshData.meshId ~= "" or meshData.textureId ~= "" then
                table.insert(petMeshes, meshData)
            end
        end
    end
    
    return meshCount > 0, petMeshes
end

local function findPet()
    print("üîç –ü–æ–∏—Å–∫ UUID –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤...")
    
    local foundPets = {}
    local SEARCH_RADIUS = 100
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= SEARCH_RADIUS then
                    local hasVisuals, meshes = hasPetVisuals(obj)
                    if hasVisuals then
                        table.insert(foundPets, {
                            model = obj,
                            distance = distance,
                            meshes = meshes
                        })
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                    end
                end
            end
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    table.sort(foundPets, function(a, b) return a.distance < b.distance end)
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.model.Name)
    
    return targetPet.model
end

-- üé¨ –ó–ê–ü–ò–°–¨ IDLE –ü–û–ó
local function recordIdlePoses(petModel)
    print("\nüé¨ === –ó–ê–ü–ò–°–¨ IDLE –ü–û–ó ===")
    
    local motor6Ds = {}
    local recordedPoses = {}
    
    -- –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Motor6D
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motor6Ds, obj)
        end
    end
    
    print("üîß –ù–∞–π–¥–µ–Ω–æ Motor6D:", #motor6Ds)
    
    if #motor6Ds == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–∑—ã –≤ —Ç–µ—á–µ–Ω–∏–µ 10 —Å–µ–∫—É–Ω–¥
    print("üìπ –ù–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å idle –ø–æ–∑ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥...")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∏—Ç–æ–º–µ—Ü —Å—Ç–æ–∏—Ç –∏ –∞–Ω–∏–º–∏—Ä—É–µ—Ç idle!")
    
    local recordingTime = 10
    local frameRate = 30  -- 30 –∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
    local frameInterval = 1 / frameRate
    local totalFrames = recordingTime * frameRate
    
    local currentFrame = 0
    local startTime = tick()
    
    local recordConnection
    recordConnection = RunService.Heartbeat:Connect(function()
        local elapsed = tick() - startTime
        
        if elapsed >= frameInterval * currentFrame then
            currentFrame = currentFrame + 1
            
            -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–∑—ã –≤—Å–µ—Ö Motor6D
            local framePoses = {}
            
            for _, motor in pairs(motor6Ds) do
                framePoses[motor.Name] = {
                    C0 = motor.C0,
                    C1 = motor.C1,
                    Transform = motor.Transform
                }
            end
            
            table.insert(recordedPoses, framePoses)
            
            if currentFrame % 30 == 0 then  -- –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
                print(string.format("üìπ –ó–∞–ø–∏—Å–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: %d/%d", currentFrame, totalFrames))
            end
        end
        
        if elapsed >= recordingTime then
            recordConnection:Disconnect()
            print("‚úÖ –ó–∞–ø–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print(string.format("üìπ –ó–∞–ø–∏—Å–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: %d", #recordedPoses))
        end
    end)
    
    -- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    while #recordedPoses < totalFrames and recordConnection.Connected do
        wait(0.1)
    end
    
    return recordedPoses, motor6Ds
end

-- üé≠ –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ò
local function playIdleAnimation(recordedPoses, motor6Ds, petModel)
    print("\nüé≠ === –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    if not recordedPoses or #recordedPoses == 0 then
        print("‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–∑!")
        return
    end
    
    print("üé¨ –ù–∞—á–∏–Ω–∞—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ idle –∞–Ω–∏–º–∞—Ü–∏–∏...")
    print("üîÑ –ê–Ω–∏–º–∞—Ü–∏—è –±—É–¥–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è!")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.PlatformStand = true
        print("üõë –ü–∏—Ç–æ–º–µ—Ü –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    end
    
    -- –Ø–∫–æ—Ä–∏–º RootPart
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    if rootPart then
        rootPart.Anchored = true
        print("‚öì RootPart –∑–∞—è–∫–æ—Ä–µ–Ω")
    end
    
    local currentFrame = 1
    local frameRate = 30
    local frameInterval = 1 / frameRate
    local lastFrameTime = tick()
    
    local playConnection
    playConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        if now - lastFrameTime >= frameInterval then
            lastFrameTime = now
            
            -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞–¥—Ä
            local framePoses = recordedPoses[currentFrame]
            
            if framePoses then
                -- –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–∑—ã –∫–æ –≤—Å–µ–º Motor6D
                for _, motor in pairs(motor6Ds) do
                    local pose = framePoses[motor.Name]
                    if pose then
                        pcall(function()
                            motor.C0 = pose.C0
                            motor.C1 = pose.C1
                            motor.Transform = pose.Transform
                        end)
                    end
                end
            end
            
            -- –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–∞–¥—Ä—É
            currentFrame = currentFrame + 1
            if currentFrame > #recordedPoses then
                currentFrame = 1  -- –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º
                print("üîÑ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞—Ü–∏–∫–ª–µ–Ω–∞!")
            end
        end
    end)
    
    print("‚úÖ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
    print("üîÑ Idle –∞–Ω–∏–º–∞—Ü–∏—è –∏–≥—Ä–∞–µ—Ç –≤ —Ü–∏–∫–ª–µ!")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 300 —Å–µ–∫—É–Ω–¥ (5 –º–∏–Ω—É—Ç)
    spawn(function()
        wait(300)
        playConnection:Disconnect()
        print("\n‚èπÔ∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
    end)
    
    return playConnection
end

-- üéØ –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ò–ù–¢–ï–†–ü–û–õ–Ø–¶–ò–ï–ô
local function playIdleAnimationSmooth(recordedPoses, motor6Ds, petModel)
    print("\nüé≠ === –ü–õ–ê–í–ù–û–ï –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    if not recordedPoses or #recordedPoses == 0 then
        print("‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–∑!")
        return
    end
    
    print("üé¨ –ù–∞—á–∏–Ω–∞—é –ø–ª–∞–≤–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ idle –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.PlatformStand = true
    end
    
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    if rootPart then
        rootPart.Anchored = true
    end
    
    local currentFrame = 1
    local frameRate = 30
    local frameInterval = 1 / frameRate
    local lastFrameTime = tick()
    
    local playConnection
    playConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        if now - lastFrameTime >= frameInterval then
            lastFrameTime = now
            
            -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–π –∫–∞–¥—Ä—ã –¥–ª—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏
            local currentPoses = recordedPoses[currentFrame]
            local nextFrame = currentFrame + 1
            if nextFrame > #recordedPoses then
                nextFrame = 1
            end
            local nextPoses = recordedPoses[nextFrame]
            
            if currentPoses and nextPoses then
                -- –ò–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä—É–µ–º –º–µ–∂–¥—É –∫–∞–¥—Ä–∞–º–∏ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
                local alpha = 0.5  -- –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–ª—è –±–æ–ª—å—à–µ–π/–º–µ–Ω—å—à–µ–π –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
                
                for _, motor in pairs(motor6Ds) do
                    local currentPose = currentPoses[motor.Name]
                    local nextPose = nextPoses[motor.Name]
                    
                    if currentPose and nextPose then
                        pcall(function()
                            -- –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è C0
                            motor.C0 = currentPose.C0:lerp(nextPose.C0, alpha)
                            -- –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è C1
                            motor.C1 = currentPose.C1:lerp(nextPose.C1, alpha)
                            -- Transform —Å–ª–æ–∂–Ω–µ–µ –∏–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä–æ–≤–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π
                            motor.Transform = currentPose.Transform
                        end)
                    end
                end
            end
            
            currentFrame = currentFrame + 1
            if currentFrame > #recordedPoses then
                currentFrame = 1
                print("üîÑ –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞—Ü–∏–∫–ª–µ–Ω–∞!")
            end
        end
    end)
    
    print("‚úÖ –ü–ª–∞–≤–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 300 —Å–µ–∫—É–Ω–¥
    spawn(function()
        wait(300)
        playConnection:Disconnect()
        print("\n‚èπÔ∏è –ü–ª–∞–≤–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
    end)
    
    return playConnection
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local petModel = findPet()
    if not petModel then
        return
    end
    
    print("\nüé¨ === –ó–ê–ü–ò–°–¨ IDLE –ü–û–ó ===")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∏—Ç–æ–º–µ—Ü —Å—Ç–æ–∏—Ç –∏ –∞–Ω–∏–º–∏—Ä—É–µ—Ç idle!")
    print("üìπ –ó–∞–ø–∏—Å—å –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...")
    
    wait(5)
    
    local recordedPoses, motor6Ds = recordIdlePoses(petModel)
    
    if recordedPoses and #recordedPoses > 0 then
        print("‚úÖ –ü–æ–∑—ã –∑–∞–ø–∏—Å–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        wait(2)
        
        print("\nüé≠ === –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï ===")
        local connection = playIdleAnimationSmooth(recordedPoses, motor6Ds, petModel)
        
        if connection then
            print("üéâ –£–°–ü–ï–•! –ü–∏—Ç–æ–º–µ—Ü —Ç–µ–ø–µ—Ä—å –∏–≥—Ä–∞–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω—É—é idle –∞–Ω–∏–º–∞—Ü–∏—é!")
            print("üîÑ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞—Ü–∏–∫–ª–µ–Ω–∞ –∏ –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å 5 –º–∏–Ω—É—Ç!")
        end
    else
        print("‚ùå –ó–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å")
    end
end

-- üöÄ –ü–†–Ø–ú–û–ô –ó–ê–ü–£–°–ö
print("\nüöÄ === –ó–ê–ü–£–°–ö–ê–Æ –ó–ê–ü–ò–°–¨ –ò –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï MOTOR6D ===")
print("üéØ –û–±—Ö–æ–¥–∏–º –≤—Å—é —Å–∏—Å—Ç–µ–º—É –∞–Ω–∏–º–∞—Ü–∏–π Roblox!")
print("üìπ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—Å—Ç–æ—è—â–∏–µ idle –ø–æ–∑—ã –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∏—Ö!")

spawn(function()
    wait(2)
    main()
end)

print("\nüí° === –°–¢–†–ê–¢–ï–ì–ò–Ø MOTOR6D ===")
print("üé¨ 1. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º Motor6D –ø–æ–∑—ã –≤–æ –≤—Ä–µ–º—è idle (10 —Å–µ–∫—É–Ω–¥)")
print("üé≠ 2. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞ (WalkSpeed=0, PlatformStand=true)")
print("‚öì 3. –Ø–∫–æ—Ä–∏–º RootPart –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è")
print("üîÑ 4. –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –ø–æ–∑—ã –≤ —Ü–∏–∫–ª–µ")
print("‚ú® 5. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏")
print("üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: –ù–∞—Å—Ç–æ—è—â–∞—è idle –∞–Ω–∏–º–∞—Ü–∏—è –±–µ–∑ —Å–∏—Å—Ç–µ–º—ã Roblox!")
print("\nüöÄ –ó–ê–ü–ò–°–¨ –ó–ê–ü–£–©–ï–ù–ê!")
