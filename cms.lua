-- üîÑ –•–ò–†–£–†–ì–ò–ß–ï–°–ö–ê–Ø –ó–ê–ú–ï–ù–ê ANIMATION ID - –ó–ê–ú–ï–ù–Ø–ï–ú –•–û–î–¨–ë–£ –ù–ê IDLE
-- –ù–∞—Ö–æ–¥–∏–º –∞–Ω–∏–º–∞—Ü–∏—é —Ö–æ–¥—å–±—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –µ–µ ID –Ω–∞ idle ID

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üîÑ === –•–ò–†–£–†–ì–ò–ß–ï–°–ö–ê–Ø –ó–ê–ú–ï–ù–ê ANIMATION ID ===")
print("üéØ –¶–µ–ª—å: –ó–∞–º–µ–Ω–∏—Ç—å ID —Ö–æ–¥—å–±—ã –Ω–∞ ID idle –∞–Ω–∏–º–∞—Ü–∏–∏")
print("üí° –ì–µ–Ω–∏–∞–ª—å–Ω–∞—è –∏–¥–µ—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position

-- ID –∞–Ω–∏–º–∞—Ü–∏–π
local IDLE_ID = "rbxassetid://1073293904134356"  -- –ù–∞–π–¥–µ–Ω–Ω–∞—è idle –∞–Ω–∏–º–∞—Ü–∏—è
local WALK_KEYWORDS = {"walk", "run", "move", "step", "locomotion"}  -- –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ö–æ–¥—å–±—ã

-- üêæ –†–ê–ë–û–ß–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê –ü–ò–¢–û–ú–¶–ê
local function hasPetVisuals(model)
    local meshCount = 0
    local petMeshes = {}
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or ""
            }
            if meshData.meshId ~= "" then
                table.insert(petMeshes, meshData)
            end
        elseif obj:IsA("SpecialMesh") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or "",
                textureId = obj.TextureId or ""
            }
            if meshData.meshId ~= "" or meshData.textureId ~= "" then
                table.insert(petMeshes, meshData)
            end
        end
    end
    
    return meshCount > 0, petMeshes
end

local function findPet()
    print("üîç –ü–æ–∏—Å–∫ UUID –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤...")
    
    local foundPets = {}
    local SEARCH_RADIUS = 100
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= SEARCH_RADIUS then
                    local hasVisuals, meshes = hasPetVisuals(obj)
                    if hasVisuals then
                        table.insert(foundPets, {
                            model = obj,
                            distance = distance,
                            meshes = meshes
                        })
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                    end
                end
            end
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    table.sort(foundPets, function(a, b) return a.distance < b.distance end)
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.model.Name)
    
    return targetPet.model
end

-- üîç –ü–û–ò–°–ö –í–°–ï–• –ê–ù–ò–ú–ê–¶–ò–ô –í –ú–û–î–ï–õ–ò
local function findAllAnimations(petModel)
    print("\nüîç === –ü–û–ò–°–ö –í–°–ï–• –ê–ù–ò–ú–ê–¶–ò–ô ===")
    
    local animations = {}
    
    -- –ò—â–µ–º –≤—Å–µ Animation –æ–±—ä–µ–∫—Ç—ã
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Animation") then
            table.insert(animations, {
                object = obj,
                type = "Animation",
                id = obj.AnimationId,
                name = obj.Name,
                parent = obj.Parent
            })
        end
    end
    
    -- –ò—â–µ–º –≤—Å–µ AnimationTrack —á–µ—Ä–µ–∑ Animator
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Animator") then
            local tracks = obj:GetPlayingAnimationTracks()
            for _, track in pairs(tracks) do
                table.insert(animations, {
                    object = track,
                    type = "AnimationTrack",
                    id = track.Animation.AnimationId,
                    name = track.Animation.Name,
                    parent = obj,
                    track = track
                })
            end
        end
    end
    
    print("üìΩÔ∏è –ù–∞–π–¥–µ–Ω–æ –∞–Ω–∏–º–∞—Ü–∏–π:", #animations)
    
    for i, anim in pairs(animations) do
        print(string.format("  %d. %s (%s)", i, anim.name, anim.type))
        print(string.format("     üÜî ID: %s", anim.id))
        print(string.format("     üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Parent: %s", anim.parent.Name))
    end
    
    return animations
end

-- üîÑ –ó–ê–ú–ï–ù–ê ID –ê–ù–ò–ú–ê–¶–ò–ô
local function replaceAnimationIDs(animations)
    print("\nüîÑ === –ó–ê–ú–ï–ù–ê ANIMATION ID ===")
    
    local replacedCount = 0
    
    for i, anim in pairs(animations) do
        local isWalkAnimation = false
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∞–Ω–∏–º–∞—Ü–∏–µ–π —Ö–æ–¥—å–±—ã
        local name = anim.name:lower()
        local id = anim.id:lower()
        
        for _, keyword in pairs(WALK_KEYWORDS) do
            if name:find(keyword) or id:find(keyword) then
                isWalkAnimation = true
                break
            end
        end
        
        -- –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —ç—Ç–æ –ù–ï idle –∞–Ω–∏–º–∞—Ü–∏—è
        if not name:find("idle") and not id:find("1073293904134356") then
            -- –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ idle - —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ —Ö–æ–¥—å–±–æ–π
            isWalkAnimation = true
        end
        
        if isWalkAnimation then
            print(string.format("üéØ –ù–∞–π–¥–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Ö–æ–¥—å–±—ã: %s", anim.name))
            print(string.format("   –°—Ç–∞—Ä—ã–π ID: %s", anim.id))
            
            -- –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–º–µ–Ω—ã ID
            local success = pcall(function()
                if anim.type == "Animation" then
                    anim.object.AnimationId = IDLE_ID
                    print("‚úÖ Animation ID –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ idle")
                elseif anim.type == "AnimationTrack" then
                    anim.object.Animation.AnimationId = IDLE_ID
                    print("‚úÖ AnimationTrack ID –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ idle")
                end
            end)
            
            if success then
                replacedCount = replacedCount + 1
                print("‚úÖ –ó–∞–º–µ–Ω–∞ —É—Å–ø–µ—à–Ω–∞!")
            else
                print("‚ùå –ó–∞–º–µ–Ω–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
                
                -- –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é —Å idle ID
                local success2 = pcall(function()
                    local newAnimation = Instance.new("Animation")
                    newAnimation.AnimationId = IDLE_ID
                    newAnimation.Name = anim.name .. "_IDLE_REPLACED"
                    newAnimation.Parent = anim.parent
                    
                    -- –ï—Å–ª–∏ —ç—Ç–æ AnimationTrack - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º
                    if anim.type == "AnimationTrack" and anim.parent:IsA("Animator") then
                        local newTrack = anim.parent:LoadAnimation(newAnimation)
                        newTrack.Looped = true
                        newTrack.Priority = Enum.AnimationPriority.Action
                        newTrack:Play()
                        
                        -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ç—Ä–µ–∫
                        anim.track:Stop()
                    end
                    
                    print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è idle –∞–Ω–∏–º–∞—Ü–∏—è –≤–∑–∞–º–µ–Ω —Å—Ç–∞—Ä–æ–π")
                end)
                
                if success2 then
                    replacedCount = replacedCount + 1
                end
            end
        else
            print(string.format("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º: %s (—É–∂–µ idle –∏–ª–∏ –Ω–µ —Ö–æ–¥—å–±–∞)", anim.name))
        end
    end
    
    print(string.format("\nüéâ –ó–∞–º–µ–Ω–µ–Ω–æ –∞–Ω–∏–º–∞—Ü–∏–π: %d", replacedCount))
    return replacedCount
end

-- üîÑ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –ü–û–°–¢–û–Ø–ù–ù–ê–Ø –ó–ê–ú–ï–ù–ê
local function startContinuousReplacement(petModel)
    print("\nüîÑ === –ó–ê–ü–£–°–ö –ü–û–°–¢–û–Ø–ù–ù–û–ô –ó–ê–ú–ï–ù–´ ===")
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        
        -- –ö–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
        if tick() % 2 < 0.02 then
            local animations = findAllAnimations(petModel)
            
            -- –ò—â–µ–º –Ω–æ–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ö–æ–¥—å–±—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –∏—Ö
            for _, anim in pairs(animations) do
                local name = anim.name:lower()
                local id = anim.id:lower()
                
                -- –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ idle –∞–Ω–∏–º–∞—Ü–∏—è - –∑–∞–º–µ–Ω—è–µ–º
                if not name:find("idle") and not id:find("1073293904134356") then
                    pcall(function()
                        if anim.type == "Animation" then
                            anim.object.AnimationId = IDLE_ID
                        elseif anim.type == "AnimationTrack" then
                            anim.object.Animation.AnimationId = IDLE_ID
                            anim.track.Looped = true
                        end
                    end)
                end
            end
        end
    end)
    
    print("‚úÖ –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 300 —Å–µ–∫—É–Ω–¥ (5 –º–∏–Ω—É—Ç)
    spawn(function()
        wait(300)
        connection:Disconnect()
        print("\n‚èπÔ∏è –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
    end)
    
    return connection
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local petModel = findPet()
    if not petModel then
        return
    end
    
    print("\nüîç === –ü–û–ò–°–ö –ê–ù–ò–ú–ê–¶–ò–ô ===")
    local animations = findAllAnimations(petModel)
    
    if #animations == 0 then
        print("‚ùå –ê–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    end
    
    print("\nüîÑ === –ó–ê–ú–ï–ù–ê ID ===")
    local replacedCount = replaceAnimationIDs(animations)
    
    if replacedCount > 0 then
        print("üéâ –ó–ê–ú–ï–ù–ê –£–°–ü–ï–®–ù–ê!")
        print("üí° –í—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ö–æ–¥—å–±—ã –∑–∞–º–µ–Ω–µ–Ω—ã –Ω–∞ idle!")
        
        -- –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∑–∞–º–µ–Ω—É
        local connection = startContinuousReplacement(petModel)
        
        print("üîÑ –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞!")
    else
        print("‚ùå –ó–∞–º–µ–Ω–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
    end
end

-- üöÄ –ü–†–Ø–ú–û–ô –ó–ê–ü–£–°–ö
print("\nüöÄ === –ó–ê–ü–£–°–ö–ê–Æ –•–ò–†–£–†–ì–ò–ß–ï–°–ö–£–Æ –ó–ê–ú–ï–ù–£ ===")
print("üéØ –ì–µ–Ω–∏–∞–ª—å–Ω–∞—è –∏–¥–µ—è: –∑–∞–º–µ–Ω–∏—Ç—å ID —Ö–æ–¥—å–±—ã –Ω–∞ ID idle!")
print("üîÑ –ê–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –∏–¥—Ç–∏ 5 –º–∏–Ω—É—Ç...")

spawn(function()
    wait(2)
    main()
end)

print("\nüí° === –°–¢–†–ê–¢–ï–ì–ò–Ø –ó–ê–ú–ï–ù–´ ===")
print("üîç 1. –ù–∞–π—Ç–∏ –≤—Å–µ Animation –∏ AnimationTrack –æ–±—ä–µ–∫—Ç—ã")
print("üéØ 2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫–∏–µ –∏–∑ –Ω–∏—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ —Ö–æ–¥—å–±–µ")
print("üîÑ 3. –ó–∞–º–µ–Ω–∏—Ç—å –∏—Ö ID –Ω–∞ rbxassetid://1073293904134356 (idle)")
print("üîÑ 4. –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –∏ –∑–∞–º–µ–Ω—è—Ç—å –Ω–æ–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ö–æ–¥—å–±—ã")
print("‚úÖ 5. –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø–∏—Ç–æ–º–µ—Ü –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å idle –≤–º–µ—Å—Ç–æ —Ö–æ–¥—å–±—ã!")
print("\nüöÄ –ó–ê–ú–ï–ù–ê –ó–ê–ü–£–©–ï–ù–ê!")
