-- üß™ CFrame Animation Tester - –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ç–µ—Å—Ç–µ—Ä CFrame –∞–Ω–∏–º–∞—Ü–∏–∏
-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –ø–∏—Ç–æ–º—Ü–æ–≤ –≤ Workspace –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç CFrame –∞–Ω–∏–º–∞—Ü–∏—é

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

print("üß™ === CFrame Animation Tester - –ê–í–¢–û–ù–û–ú–ù–´–ô –†–ï–ñ–ò–ú ===")
print("üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CFrame –∞–Ω–∏–º–∞—Ü–∏–∏")

-- üìä –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local CONFIG = {
    SCALE_FACTOR = 0.3,
    INTERPOLATION_SPEED = 0.7,
    DEBUG_INTERVAL = 2.0  -- –ë–æ–ª–µ–µ —á–∞—Å—Ç—ã–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
}

-- üîç –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ
local function findHandHeldPet()
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "%[") and string.find(tool.Name, "KG%]") then
            return tool
        end
    end
    return nil
end

-- üì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–Ω–∏–º–∏—Ä—É–µ–º—ã—Ö —á–∞—Å—Ç–µ–π –∏–∑ –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞
local function getAnimatedParts(model)
    local parts = {}
    
    if not model then return parts end
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") and obj.Name ~= "Handle" then
            table.insert(parts, obj)
        end
    end
    
    return parts
end

-- üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ Workspace
local function findPetModels()
    local pets = {}
    
    -- –ò—â–µ–º –º–æ–¥–µ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–∏—Ç–æ–º—Ü–∞–º–∏
    for _, obj in pairs(Workspace:GetChildren()) do
        if obj:IsA("Model") then
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –≤ –º–æ–¥–µ–ª–∏ —á–∞—Å—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –ø–∏—Ç–æ–º—Ü–∞
            local hasHead = obj:FindFirstChild("Head")
            local hasTorso = obj:FindFirstChild("Torso") or obj:FindFirstChild("UpperTorso")
            local hasHumanoid = obj:FindFirstChild("Humanoid")
            
            if (hasHead or hasTorso) and obj.Name ~= character.Name then
                table.insert(pets, obj)
                print("üêï –ù–∞–π–¥–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü:", obj.Name)
            end
        end
    end
    
    return pets
end

-- üß™ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è CFrame –∞–Ω–∏–º–∞—Ü–∏–∏
local function startCFrameTest()
    print("üöÄ –ó–∞–ø—É—Å–∫ CFrame Animation Test")
    
    -- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    local handPetModel = nil
    local handPetParts = {}
    local previousCFrameStates = {}
    local cframeChangeCount = 0
    local lastChangeTime = 0
    local testStartTime = tick()
    
    -- –ò—â–µ–º –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ –º–∏—Ä–µ –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏
    local worldPets = findPetModels()
    print("üåç –ù–∞–π–¥–µ–Ω–æ –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ –º–∏—Ä–µ:", #worldPets)
    
    local connection = RunService.Heartbeat:Connect(function()
        local currentTime = tick()
        local testDuration = currentTime - testStartTime
        
        -- === üîç –ü–û–ò–°–ö –ü–ò–¢–û–ú–¶–ê –í –†–£–ö–ï ===
        local foundTool = findHandHeldPet()
        
        if foundTool ~= handPetModel then
            handPetModel = foundTool
            handPetParts = getAnimatedParts(handPetModel)
            
            if handPetModel then
                print("üéØ === –ù–û–í–´–ô –ü–ò–¢–û–ú–ï–¶ –í –†–£–ö–ï –û–ë–ù–ê–†–£–ñ–ï–ù ===")
                print("Tool:", handPetModel.Name)
                print("üîß –ê–Ω–∏–º–∏—Ä—É–µ–º—ã—Ö —á–∞—Å—Ç–µ–π:", #handPetParts)
                
                -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏
                for i, part in ipairs(handPetParts) do
                    print(string.format("  %d. %s (CFrame: %s)", i, part.Name, tostring(part.CFrame)))
                end
                
                -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ CFrame
                previousCFrameStates = {}
                for _, part in ipairs(handPetParts) do
                    if part and part.Parent then
                        previousCFrameStates[part.Name] = part.CFrame
                    end
                end
                
                cframeChangeCount = 0
                lastChangeTime = currentTime
            else
                print("‚ö†Ô∏è –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                handPetParts = {}
            end
        end
        
        -- === üìê –ú–û–ù–ò–¢–û–†–ò–ù–ì CFrame –ò–ó–ú–ï–ù–ï–ù–ò–ô ===
        if handPetModel and #handPetParts > 0 then
            local changesDetected = 0
            local changeDetails = {}
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            for _, handPart in ipairs(handPetParts) do
                if handPart and handPart.Parent then
                    local partName = handPart.Name
                    local currentCFrame = handPart.CFrame
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ CFrame —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                    if previousCFrameStates[partName] then
                        local prevCFrame = previousCFrameStates[partName]
                        local positionDiff = (currentCFrame.Position - prevCFrame.Position).Magnitude
                        local rotationDiff = math.abs(currentCFrame.LookVector:Dot(prevCFrame.LookVector) - 1)
                        
                        if positionDiff > 0.001 or rotationDiff > 0.001 then
                            changesDetected = changesDetected + 1
                            table.insert(changeDetails, {
                                name = partName,
                                posDiff = positionDiff,
                                rotDiff = rotationDiff
                            })
                        end
                    end
                    
                    -- –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                    previousCFrameStates[partName] = currentCFrame
                end
            end
            
            -- –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            if changesDetected > 0 then
                cframeChangeCount = cframeChangeCount + changesDetected
                lastChangeTime = currentTime
            end
            
            -- üìä –î–ï–¢–ê–õ–¨–ù–´–ï –û–¢–ß–ï–¢–´ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
            if math.floor(currentTime) % CONFIG.DEBUG_INTERVAL == 0 and math.floor(currentTime * 10) % 10 == 0 then
                print(string.format("\nüìä === CFrame –¢–ï–°–¢ –û–¢–ß–ï–¢ (%.1f —Å–µ–∫) ===", testDuration))
                print("üé≠ –ü–∏—Ç–æ–º–µ—Ü:", handPetModel.Name)
                print("üîß –ß–∞—Å—Ç–µ–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è:", #handPetParts)
                print("üìê –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ —ç—Ç–æ–º –∫–∞–¥—Ä–µ:", changesDetected)
                print("üéØ –í—Å–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π:", cframeChangeCount)
                
                local timeSinceLastChange = currentTime - lastChangeTime
                print(string.format("‚è±Ô∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: %.1f —Å–µ–∫ –Ω–∞–∑–∞–¥", timeSinceLastChange))
                
                if changesDetected > 0 then
                    print("‚úÖ CFrame –ê–ù–ò–ú–ê–¶–ò–Ø –ê–ö–¢–ò–í–ù–ê!")
                    
                    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                    for i, detail in ipairs(changeDetails) do
                        if i <= 3 then  -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                            print(string.format("  üìê %s: Pos=%.4f Rot=%.4f", 
                                detail.name, detail.posDiff, detail.rotDiff))
                        end
                    end
                else
                    print("‚ö†Ô∏è CFrame –ù–ï –ò–ó–ú–ï–ù–Ø–Æ–¢–°–Ø")
                end
                
                print("=" .. string.rep("=", 50))
            end
        else
            -- –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω
            if math.floor(currentTime) % 5 == 0 and math.floor(currentTime * 10) % 10 == 0 then
                print(string.format("üîç –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ... (%.1f —Å–µ–∫)", testDuration))
                print("üí° –í–æ–∑—å–º–∏ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!")
            end
        end
    end)
    
    print("‚úÖ CFrame Animation Tester –∑–∞–ø—É—â–µ–Ω!")
    print("üéí –í–æ–∑—å–º–∏ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–≤–µ–¥–∏: connection:Disconnect()")
    
    return connection
end

-- üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–µ—Ä–∞
local testConnection = startCFrameTest()

-- –í–æ–∑–≤—Ä–∞—â–∞–µ–º connection –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
return testConnection
