-- üìä –ó–ê–ü–ò–°–´–í–ê–Æ–©–ò–ô –°–ö–†–ò–ü–¢ MOTOR6D IDLE –ê–ù–ò–ú–ê–¶–ò–ò
-- –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω—É—é idle –∞–Ω–∏–º–∞—Ü–∏—é –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –∫–æ–ø–∏–∏

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

-- üìä –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ó–ê–ü–ò–°–ò
local CONFIG = {
    RECORD_DURATION = 8,      -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 8 —Å–µ–∫—É–Ω–¥ (–ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∞–Ω–∏–º–∞—Ü–∏–∏)
    FRAME_RATE = 30,          -- 30 –∫–∞–¥—Ä–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É
    EXPORT_FORMAT = "LUA"     -- –§–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
}

-- üìä –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï
local recordedFrames = {}
local motor6DList = {}
local isRecording = false

-- üîç –ü–û–ò–°–ö –ò –ê–ù–ê–õ–ò–ó –ü–ò–¢–û–ú–¶–ê –í –†–£–ö–ï
local function findHandPetMotor6Ds()
    local character = player.Character
    if not character then
        print("‚ùå Character –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil
    end
    
    local handTool = character:FindFirstChildOfClass("Tool")
    if not handTool then
        print("‚ùå Tool –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
        return nil
    end
    
    print("üéØ –ù–∞–π–¥–µ–Ω Tool:", handTool.Name)
    
    -- –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ Motor6D –∏–∑ Tool
    local motor6ds = {}
    for _, obj in pairs(handTool:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motor6ds, obj)
        end
    end
    
    if #motor6ds == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ Tool!")
        return nil
    end
    
    print(string.format("‚úÖ –ù–∞–π–¥–µ–Ω–æ Motor6D: %d", #motor6ds))
    
    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    for i, motor in ipairs(motor6ds) do
        print(string.format("  %d. %s (%s ‚Üí %s)", 
            i, motor.Name,
            motor.Part0 and motor.Part0.Name or "nil",
            motor.Part1 and motor.Part1.Name or "nil"))
    end
    
    return motor6ds
end

-- üìä –ó–ê–ü–ò–°–¨ –ö–ê–î–†–ê –ê–ù–ò–ú–ê–¶–ò–ò
local function recordFrame(frameIndex, elapsedTime)
    local frame = {
        index = frameIndex,
        time = elapsedTime,
        motor6ds = {}
    }
    
    for _, motor in ipairs(motor6DList) do
        if motor.Parent then
            frame.motor6ds[motor.Name] = {
                c0 = motor.C0,
                c1 = motor.C1,
                -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                part0 = motor.Part0 and motor.Part0.Name or "nil",
                part1 = motor.Part1 and motor.Part1.Name or "nil"
            }
        end
    end
    
    table.insert(recordedFrames, frame)
end

-- üé¨ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–ò–°–ò
local function startRecording()
    print("\nüé¨ === –ó–ê–ü–ò–°–¨ MOTOR6D IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    -- –ü–æ–∏—Å–∫ Motor6D –≤ –ø–∏—Ç–æ–º—Ü–µ
    motor6DList = findHandPetMotor6Ds()
    if not motor6DList then
        return
    end
    
    -- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø–∏—Å–∏
    recordedFrames = {}
    isRecording = true
    
    local startTime = tick()
    local frameInterval = 1 / CONFIG.FRAME_RATE
    local nextFrameTime = 0
    local frameIndex = 0
    
    print(string.format("üéØ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–∏—Å—å –Ω–∞ %.1f —Å–µ–∫—É–Ω–¥ —Å —á–∞—Å—Ç–æ—Ç–æ–π %d FPS", 
        CONFIG.RECORD_DURATION, CONFIG.FRAME_RATE))
    print("‚è±Ô∏è –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∏—Ç–æ–º–µ—Ü –∏–≥—Ä–∞–µ—Ç idle –∞–Ω–∏–º–∞—Ü–∏—é...")
    
    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∑–∞–ø–∏—Å–∏
    local connection = RunService.Heartbeat:Connect(function()
        local elapsedTime = tick() - startTime
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
        if elapsedTime >= CONFIG.RECORD_DURATION then
            connection:Disconnect()
            isRecording = false
            finishRecording()
            return
        end
        
        -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–¥—Ä —Å –Ω—É–∂–Ω–æ–π —á–∞—Å—Ç–æ—Ç–æ–π
        if elapsedTime >= nextFrameTime then
            frameIndex = frameIndex + 1
            recordFrame(frameIndex, elapsedTime)
            nextFrameTime = nextFrameTime + frameInterval
            
            -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
            if frameIndex % (CONFIG.FRAME_RATE * 2) == 0 then
                print(string.format("üìä –ó–∞–ø–∏—Å–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: %d (%.1f/%.1f —Å–µ–∫)", 
                    frameIndex, elapsedTime, CONFIG.RECORD_DURATION))
            end
        end
    end)
end

-- üéâ –ó–ê–í–ï–†–®–ï–ù–ò–ï –ó–ê–ü–ò–°–ò –ò –≠–ö–°–ü–û–†–¢
local function finishRecording()
    print(string.format("\nüéâ === –ó–ê–ü–ò–°–¨ –ó–ê–í–ï–†–®–ï–ù–ê ==="))
    print(string.format("üìä –ó–∞–ø–∏—Å–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: %d", #recordedFrames))
    print(string.format("‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: %.2f —Å–µ–∫—É–Ω–¥", CONFIG.RECORD_DURATION))
    print(string.format("üéØ –ß–∞—Å—Ç–æ—Ç–∞: %d FPS", CONFIG.FRAME_RATE))
    
    if #recordedFrames == 0 then
        print("‚ùå –ö–∞–¥—Ä—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã!")
        return
    end
    
    -- –ê–Ω–∞–ª–∏–∑ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    analyzeRecordedData()
    
    -- –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    exportAnimationData()
end

-- üìà –ê–ù–ê–õ–ò–ó –ó–ê–ü–ò–°–ê–ù–ù–´–• –î–ê–ù–ù–´–•
local function analyzeRecordedData()
    print("\nüìà === –ê–ù–ê–õ–ò–ó –ó–ê–ü–ò–°–ê–ù–ù–´–• –î–ê–ù–ù–´–• ===")
    
    if #recordedFrames < 2 then
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∞–¥—Ä–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        return
    end
    
    local firstFrame = recordedFrames[1]
    local lastFrame = recordedFrames[#recordedFrames]
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π Motor6D
    for motorName, _ in pairs(firstFrame.motor6ds) do
        local firstC0 = firstFrame.motor6ds[motorName].c0
        local lastC0 = lastFrame.motor6ds[motorName].c0
        
        -- –í—ã—á–∏—Å–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–≥–ª–æ–≤
        local firstX, firstY, firstZ = firstC0:ToEulerAnglesXYZ()
        local lastX, lastY, lastZ = lastC0:ToEulerAnglesXYZ()
        
        local deltaX = math.abs(math.deg(lastX - firstX))
        local deltaY = math.abs(math.deg(lastY - firstY))
        local deltaZ = math.abs(math.deg(lastZ - firstZ))
        local totalDelta = deltaX + deltaY + deltaZ
        
        print(string.format("üîß %s:", motorName))
        print(string.format("  –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É–≥–ª–æ–≤: X=%.1f¬∞, Y=%.1f¬∞, Z=%.1f¬∞", deltaX, deltaY, deltaZ))
        
        if totalDelta > 5 then
            print("  ‚úÖ –ê–ö–¢–ò–í–ù–´–ô - —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∞–Ω–∏–º–∞—Ü–∏–∏")
        else
            print("  ‚ö™ –°–¢–ê–¢–ò–ß–ù–´–ô - –Ω–µ –∞–Ω–∏–º–∏—Ä—É–µ—Ç—Å—è")
        end
    end
end

-- üíæ –≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• –ê–ù–ò–ú–ê–¶–ò–ò
local function exportAnimationData()
    print("\nüíæ === –≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    -- –°–æ–∑–¥–∞–µ–º Lua –∫–æ–¥ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ PetScaler
    local luaCode = "-- üé¨ –ó–ê–ü–ò–°–ê–ù–ù–ê–Ø IDLE –ê–ù–ò–ú–ê–¶–ò–Ø –ü–ò–¢–û–ú–¶–ê –í –†–£–ö–ï\n"
    luaCode = luaCode .. "-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ Motor6DIdleRecorder.lua\n\n"
    
    luaCode = luaCode .. "local RECORDED_IDLE_ANIMATION = {\n"
    luaCode = luaCode .. string.format("    duration = %.2f,\n", CONFIG.RECORD_DURATION)
    luaCode = luaCode .. string.format("    frameRate = %d,\n", CONFIG.FRAME_RATE)
    luaCode = luaCode .. string.format("    totalFrames = %d,\n", #recordedFrames)
    luaCode = luaCode .. "    frames = {\n"
    
    -- –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä (–∫–∞–∂–¥—ã–π 5-–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏)
    local exportStep = math.max(1, math.floor(#recordedFrames / 60)) -- –ú–∞–∫—Å–∏–º—É–º 60 –∫–∞–¥—Ä–æ–≤
    
    for i = 1, #recordedFrames, exportStep do
        local frame = recordedFrames[i]
        luaCode = luaCode .. string.format("        [%d] = {\n", i)
        luaCode = luaCode .. string.format("            time = %.3f,\n", frame.time)
        luaCode = luaCode .. "            motor6ds = {\n"
        
        for motorName, data in pairs(frame.motor6ds) do
            local c0 = data.c0
            luaCode = luaCode .. string.format("                [\"%s\"] = CFrame.new(%.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f, %.3f),\n",
                motorName, c0.X, c0.Y, c0.Z, c0.RightVector.X, c0.UpVector.X, -c0.LookVector.X,
                c0.RightVector.Y, c0.UpVector.Y, -c0.LookVector.Y, c0.RightVector.Z, c0.UpVector.Z, -c0.LookVector.Z)
        end
        
        luaCode = luaCode .. "            },\n"
        luaCode = luaCode .. "        },\n"
    end
    
    luaCode = luaCode .. "    }\n"
    luaCode = luaCode .. "}\n\n"
    
    -- –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    luaCode = luaCode .. "-- üéØ –§–£–ù–ö–¶–ò–Ø –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–Ø –ó–ê–ü–ò–°–ê–ù–ù–û–ô –ê–ù–ò–ú–ê–¶–ò–ò\n"
    luaCode = luaCode .. "local function playRecordedIdleAnimation(petModel)\n"
    luaCode = luaCode .. "    -- –í–∞—à –∫–æ–¥ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–¥–µ—Å—å\n"
    luaCode = luaCode .. "    print('üé¨ –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–∞–ø–∏—Å–∞–Ω–Ω—É—é idle –∞–Ω–∏–º–∞—Ü–∏—é!')\n"
    luaCode = luaCode .. "end\n\n"
    
    luaCode = luaCode .. "return RECORDED_IDLE_ANIMATION\n"
    
    -- –í—ã–≤–æ–¥–∏–º –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    print("üìã === –≠–ö–°–ü–û–†–¢–ò–†–û–í–ê–ù–ù–´–ô –ö–û–î ===")
    print("üíæ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ PetScaler:")
    print("\n" .. string.rep("=", 50))
    print(luaCode)
    print(string.rep("=", 50))
    
    print(string.format("\n‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ó–∞–ø–∏—Å–∞–Ω–æ %d –∫–ª—é—á–µ–≤—ã—Ö –∫–∞–¥—Ä–æ–≤", 
        math.ceil(#recordedFrames / exportStep)))
    print("üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ PetScaler!")
end

-- üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê
local function main()
    print("üìä === MOTOR6D IDLE RECORDER ===")
    print("üéØ –¶–µ–ª—å: –∑–∞–ø–∏—Å–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—É—é idle –∞–Ω–∏–º–∞—Ü–∏—é –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –∏–≥—Ä–∞–µ—Ç idle –∞–Ω–∏–º–∞—Ü–∏—é")
    print("\n‚è±Ô∏è –ó–∞–ø—É—Å–∫ –∑–∞–ø–∏—Å–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
    
    wait(3)
    startRecording()
end

-- üöÄ –ó–ê–ü–£–°–ö
main()
