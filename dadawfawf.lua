-- InventoryPetAnalyzer.lua
-- –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- –°–æ–∑–¥–∞–µ–º GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InventoryPetAnalyzer"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–π –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.9, 0, 0.7, 0) -- –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ
mainFrame.Position = UDim2.new(0.05, 0, 0.15, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 40)
titleLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
titleLabel.BorderSizePixel = 0
titleLabel.Text = "üéí –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è –ü–∏—Ç–æ–º—Ü–µ–≤"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = mainFrame

-- –°–∫—Ä–æ–ª–ª —Ñ—Ä–µ–π–º –¥–ª—è –ª–æ–≥–æ–≤
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -20, 1, -120)
scrollFrame.Position = UDim2.new(0, 10, 0, 50)
scrollFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 8
scrollFrame.Parent = mainFrame

-- –¢–µ–∫—Å—Ç –¥–ª—è –ª–æ–≥–æ–≤
local logText = Instance.new("TextLabel")
logText.Size = UDim2.new(1, -10, 1, 0)
logText.Position = UDim2.new(0, 5, 0, 0)
logText.BackgroundTransparency = 1
logText.Text = "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞..."
logText.TextColor3 = Color3.fromRGB(255, 255, 255)
logText.TextXAlignment = Enum.TextXAlignment.Left
logText.TextYAlignment = Enum.TextYAlignment.Top
logText.TextWrapped = true
logText.Font = Enum.Font.SourceSans
logText.TextSize = 14
logText.Parent = scrollFrame

-- –ö–Ω–æ–ø–∫–∏
local buttonFrame = Instance.new("Frame")
buttonFrame.Size = UDim2.new(1, 0, 0, 60)
buttonFrame.Position = UDim2.new(0, 0, 1, -60)
buttonFrame.BackgroundTransparency = 1
buttonFrame.Parent = mainFrame

-- –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
local analyzeButton = Instance.new("TextButton")
analyzeButton.Size = UDim2.new(0.3, -5, 0.8, 0)
analyzeButton.Position = UDim2.new(0, 5, 0.1, 0)
analyzeButton.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
analyzeButton.BorderSizePixel = 0
analyzeButton.Text = "üìã –ê–Ω–∞–ª–∏–∑ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è"
analyzeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
analyzeButton.TextScaled = true
analyzeButton.Font = Enum.Font.SourceSansBold
analyzeButton.Parent = buttonFrame

-- –ö–Ω–æ–ø–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ handle
local monitorButton = Instance.new("TextButton")
monitorButton.Size = UDim2.new(0.3, -5, 0.8, 0)
monitorButton.Position = UDim2.new(0.33, 5, 0.1, 0)
monitorButton.BackgroundColor3 = Color3.fromRGB(200, 120, 0)
monitorButton.BorderSizePixel = 0
monitorButton.Text = "üëÅÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Handle"
monitorButton.TextColor3 = Color3.fromRGB(255, 255, 255)
monitorButton.TextScaled = true
monitorButton.Font = Enum.Font.SourceSansBold
monitorButton.Parent = buttonFrame

-- –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
local clearButton = Instance.new("TextButton")
clearButton.Size = UDim2.new(0.3, -5, 0.8, 0)
clearButton.Position = UDim2.new(0.66, 5, 0.1, 0)
clearButton.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
clearButton.BorderSizePixel = 0
clearButton.Text = "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å"
clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clearButton.TextScaled = true
monitorButton.Font = Enum.Font.SourceSansBold
clearButton.Parent = buttonFrame

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local logs = {}
local isMonitoring = false
local monitorConnection = nil

-- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∞
local function addLog(message)
    table.insert(logs, os.date("[%H:%M:%S] ") .. message)
    if #logs > 100 then
        table.remove(logs, 1)
    end
    
    logText.Text = table.concat(logs, "\n")
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, logText.TextBounds.Y + 20)
    scrollFrame.CanvasPosition = Vector2.new(0, scrollFrame.CanvasSize.Y.Offset)
end

-- –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ handle –∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –∏–≥—Ä–æ–∫–∞
local function analyzePlayerInventory()
    addLog("üîç === –ê–ù–ê–õ–ò–ó HANDLE –ò –ò–ù–í–ï–ù–¢–ê–†–Ø –ò–ì–†–û–ö–ê ===")
    
    local playerChar = player.Character
    if not playerChar then
        addLog("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º handle
    local handle = playerChar:FindFirstChild("Handle")
    if handle then
        addLog("üëã === –°–û–î–ï–†–ñ–ò–ú–û–ï HANDLE ===")
        local handlePets = 0
        
        for _, child in pairs(handle:GetChildren()) do
            if child:IsA("Model") then
                handlePets = handlePets + 1
                
                -- –ò—â–µ–º KG –∏ AGE
                local kg = "–ù–µ—Ç"
                local age = "–ù–µ—Ç"
                
                for _, desc in pairs(child:GetDescendants()) do
                    if desc:IsA("StringValue") or desc:IsA("NumberValue") or desc:IsA("IntValue") then
                        if desc.Name:lower():find("kg") then
                            kg = tostring(desc.Value)
                        elseif desc.Name:lower():find("age") then
                            age = tostring(desc.Value)
                        end
                    end
                end
                
                addLog("üêæ " .. child.Name .. " | KG: " .. kg .. " | AGE: " .. age)
            end
        end
        
        if handlePets == 0 then
            addLog("üì≠ Handle –ø—É—Å—Ç–æ–π - –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ —Ä—É–∫–µ –Ω–µ—Ç")
        else
            addLog("üìä –í—Å–µ–≥–æ –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ handle: " .. handlePets)
        end
    else
        addLog("‚ùå Handle –Ω–µ –Ω–∞–π–¥–µ–Ω —É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
    end
    
    -- –ò—â–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–≥—Ä–æ–∫–∞ (GUI —Å –ø–∏—Ç–æ–º—Ü–∞–º–∏)
    addLog("\nüéí === –ü–û–ò–°–ö –ò–ù–í–ï–ù–¢–ê–†–Ø –ü–ò–¢–û–ú–¶–ï–í ===")
    
    local playerGui = player:FindFirstChild("PlayerGui")
    if playerGui then
        -- –ò—â–µ–º GUI —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        local inventoryGuis = {}
        
        for _, gui in pairs(playerGui:GetChildren()) do
            if gui:IsA("ScreenGui") then
                -- –ò—â–µ–º —Ñ—Ä–µ–π–º—ã —Å –ø–∏—Ç–æ–º—Ü–∞–º–∏
                for _, frame in pairs(gui:GetDescendants()) do
                    if frame:IsA("Frame") or frame:IsA("ScrollingFrame") then
                        local petCount = 0
                        for _, child in pairs(frame:GetChildren()) do
                            -- –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –ø–∏—Ç–æ–º—Ü–µ–≤
                            if child:IsA("Frame") or child:IsA("ImageButton") then
                                for _, desc in pairs(child:GetDescendants()) do
                                    if desc:IsA("TextLabel") and (
                                        desc.Text:lower():find("dragonfly") or
                                        desc.Text:lower():find("kg") or
                                        desc.Text:lower():find("age") or
                                        desc.Text:lower():find("golden") or
                                        desc.Text:lower():find("bunny") or
                                        desc.Text:lower():find("dog")
                                    ) then
                                        petCount = petCount + 1
                                        addLog("üêæ –ù–∞–π–¥–µ–Ω –≤ GUI: " .. desc.Text .. " –≤ " .. gui.Name)
                                        break
                                    end
                                end
                            end
                        end
                        
                        if petCount > 0 then
                            table.insert(inventoryGuis, {name = gui.Name, frame = frame.Name, pets = petCount})
                        end
                    end
                end
            end
        end
        
        if #inventoryGuis > 0 then
            addLog("üìã –ù–∞–π–¥–µ–Ω—ã GUI —Å –ø–∏—Ç–æ–º—Ü–∞–º–∏:")
            for _, inv in pairs(inventoryGuis) do
                addLog("   üì± " .. inv.name .. " (" .. inv.pets .. " –ø–∏—Ç–æ–º—Ü–µ–≤)")
            end
        else
            addLog("‚ùå GUI –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —Å –ø–∏—Ç–æ–º—Ü–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        end
    end
    
    -- –ò—â–µ–º Dragonfly –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ
    addLog("\nüêâ === –ü–û–ò–°–ö DRAGONFLY ===")
    local dragonflyFound = false
    
    -- –í handle
    if handle then
        for _, child in pairs(handle:GetChildren()) do
            if child:IsA("Model") and child.Name:lower():find("dragonfly") then
                addLog("‚úÖ Dragonfly –Ω–∞–π–¥–µ–Ω –≤ handle: " .. child.Name)
                dragonflyFound = true
            end
        end
    end
    
    -- –í GUI
    if playerGui then
        for _, desc in pairs(playerGui:GetDescendants()) do
            if desc:IsA("TextLabel") and desc.Text:lower():find("dragonfly") then
                addLog("‚úÖ Dragonfly –Ω–∞–π–¥–µ–Ω –≤ GUI: " .. desc.Text .. " –≤ " .. desc.Parent.Name)
                dragonflyFound = true
            end
        end
    end
    
    if not dragonflyFound then
        addLog("‚ùå Dragonfly –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ handle, –Ω–∏ –≤ GUI")
    end
end

-- –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ handle
local function startHandleMonitoring()
    if isMonitoring then
        addLog("‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω!")
        return
    end
    
    isMonitoring = true
    monitorButton.Text = "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
    monitorButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    
    addLog("üëÅÔ∏è === –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê HANDLE ===")
    
    local lastHandleContents = {}
    
    monitorConnection = RunService.Heartbeat:Connect(function()
        local playerChar = player.Character
        if not playerChar then return end
        
        local handle = playerChar:FindFirstChild("Handle")
        if not handle then return end
        
        local currentContents = {}
        for _, child in pairs(handle:GetChildren()) do
            if child:IsA("Model") then
                -- –ò—â–µ–º KG –∏ AGE –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
                local kg = "–ù–µ—Ç"
                local age = "–ù–µ—Ç"
                
                for _, desc in pairs(child:GetDescendants()) do
                    if desc:IsA("StringValue") or desc:IsA("NumberValue") or desc:IsA("IntValue") then
                        if desc.Name:lower():find("kg") then
                            kg = tostring(desc.Value)
                        elseif desc.Name:lower():find("age") then
                            age = tostring(desc.Value)
                        end
                    end
                end
                
                table.insert(currentContents, {
                    name = child.Name,
                    kg = kg,
                    age = age,
                    fullName = child:GetFullName()
                })
            end
        end
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ –∏–º–µ–Ω–∞–º)
        local currentNames = {}
        local lastNames = {}
        
        for _, content in pairs(currentContents) do
            currentNames[content.name] = content
        end
        
        for _, content in pairs(lastHandleContents) do
            lastNames[content.name] = content
        end
        
        -- –ò—â–µ–º –Ω–æ–≤—ã—Ö –ø–∏—Ç–æ–º—Ü–µ–≤
        for name, content in pairs(currentNames) do
            if not lastNames[name] then
                addLog("‚ûï –ù–û–í–´–ô –ü–ò–¢–û–ú–ï–¶ –í HANDLE:")
                addLog("   üêæ " .. content.name .. " | KG: " .. content.kg .. " | AGE: " .. content.age)
                
                -- –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ Dragonfly
                if content.name:lower():find("dragonfly") then
                    addLog("üêâ *** DRAGONFLY –ü–û–Ø–í–ò–õ–°–Ø –í HANDLE! ***")
                end
            end
        end
        
        -- –ò—â–µ–º –∏—Å—á–µ–∑–Ω—É–≤—à–∏—Ö –ø–∏—Ç–æ–º—Ü–µ–≤
        for name, content in pairs(lastNames) do
            if not currentNames[name] then
                addLog("‚ûñ –ü–ò–¢–û–ú–ï–¶ –ò–°–ß–ï–ó –ò–ó HANDLE:")
                addLog("   üóëÔ∏è " .. content.name .. " | KG: " .. content.kg .. " | AGE: " .. content.age)
            end
        end
        
        lastHandleContents = currentContents
    end)
    
    addLog("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ handle –∑–∞–ø—É—â–µ–Ω!")
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
local function stopHandleMonitoring()
    if not isMonitoring then return end
    
    isMonitoring = false
    monitorButton.Text = "üëÅÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Handle"
    monitorButton.BackgroundColor3 = Color3.fromRGB(200, 120, 0)
    
    if monitorConnection then
        monitorConnection:Disconnect()
        monitorConnection = nil
    end
    
    addLog("‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ handle –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
analyzeButton.MouseButton1Click:Connect(function()
    analyzePlayerInventory()
end)

monitorButton.MouseButton1Click:Connect(function()
    if isMonitoring then
        stopHandleMonitoring()
    else
        startHandleMonitoring()
    end
end)

clearButton.MouseButton1Click:Connect(function()
    logs = {}
    logText.Text = "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã..."
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
end)

-- –ù–∞—á–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
addLog("üöÄ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø–∏—Ç–æ–º—Ü–µ–≤ –∑–∞–ø—É—â–µ–Ω!")
addLog("üìã –ù–∞–∂–º–∏—Ç–µ '–ê–Ω–∞–ª–∏–∑ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—è' –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–∏—Ç–æ–º—Ü–µ–≤")
addLog("üëÅÔ∏è –ù–∞–∂–º–∏—Ç–µ '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Handle' –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä—É–∫–µ")

print("‚úÖ InventoryPetAnalyzer –∑–∞–≥—Ä—É–∂–µ–Ω! –û—Ç–∫—Ä–æ–π—Ç–µ GUI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
