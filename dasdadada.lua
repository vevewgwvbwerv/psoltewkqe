-- üîç Tool Structure Analyzer - –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Tool –ø–∏—Ç–æ–º—Ü–∞
-- –ù–∞—Ö–æ–¥–∏—Ç –í–°–ï –æ–±—ä–µ–∫—Ç—ã –≤ Tool –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Ö –∏–µ—Ä–∞—Ä—Ö–∏—é

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

print("üîç === Tool Structure Analyzer ===")
print("üìä –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Tool –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ")

-- üîç –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ
local function findHandHeldPet()
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "%[") and string.find(tool.Name, "KG%]") then
            return tool
        end
    end
    return nil
end

-- üìä –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ–±—ä–µ–∫—Ç–∞
local function analyzeStructure(obj, depth, maxDepth)
    if depth > (maxDepth or 10) then return end
    
    local indent = string.rep("  ", depth)
    local objInfo = string.format("%s%s (%s)", indent, obj.Name, obj.ClassName)
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±—ä–µ–∫—Ç–æ–≤
    if obj:IsA("BasePart") then
        objInfo = objInfo .. string.format(" | Size=%s | CFrame=%s | Anchored=%s", 
            tostring(obj.Size), tostring(obj.CFrame), tostring(obj.Anchored))
    elseif obj:IsA("Motor6D") then
        objInfo = objInfo .. string.format(" | Part0=%s | Part1=%s", 
            obj.Part0 and obj.Part0.Name or "NIL", obj.Part1 and obj.Part1.Name or "NIL")
    elseif obj:IsA("Attachment") then
        objInfo = objInfo .. string.format(" | CFrame=%s", tostring(obj.CFrame))
    elseif obj:IsA("LocalScript") or obj:IsA("Script") then
        objInfo = objInfo .. string.format(" | Enabled=%s", tostring(obj.Enabled))
    elseif obj:IsA("Model") then
        objInfo = objInfo .. string.format(" | PrimaryPart=%s", obj.PrimaryPart and obj.PrimaryPart.Name or "NIL")
    end
    
    print(objInfo)
    
    -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ç–µ–π
    for _, child in pairs(obj:GetChildren()) do
        analyzeStructure(child, depth + 1, maxDepth)
    end
end

-- üéØ –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –∞–Ω–∏–º–∏—Ä—É–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
local function findAnimatableObjects(tool)
    local objects = {
        baseParts = {},
        models = {},
        attachments = {},
        motor6ds = {},
        scripts = {},
        other = {}
    }
    
    for _, obj in pairs(tool:GetDescendants()) do
        if obj:IsA("BasePart") then
            table.insert(objects.baseParts, obj)
        elseif obj:IsA("Model") then
            table.insert(objects.models, obj)
        elseif obj:IsA("Attachment") then
            table.insert(objects.attachments, obj)
        elseif obj:IsA("Motor6D") then
            table.insert(objects.motor6ds, obj)
        elseif obj:IsA("LocalScript") or obj:IsA("Script") or obj:IsA("ModuleScript") then
            table.insert(objects.scripts, obj)
        else
            table.insert(objects.other, obj)
        end
    end
    
    return objects
end

-- üß™ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞
local function startAnalysis()
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Tool...")
    
    local connection = RunService.Heartbeat:Connect(function()
        local tool = findHandHeldPet()
        
        if tool then
            print("\nüéØ === –ü–ò–¢–û–ú–ï–¶ –í –†–£–ö–ï –ù–ê–ô–î–ï–ù ===")
            print("Tool:", tool.Name)
            print("ClassName:", tool.ClassName)
            
            print("\nüìä === –ü–û–õ–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê TOOL ===")
            analyzeStructure(tool, 0, 15)  -- –ì–ª—É–±–∏–Ω–∞ –¥–æ 15 —É—Ä–æ–≤–Ω–µ–π
            
            print("\nüîç === –ö–ê–¢–ï–ì–û–†–ò–ó–ê–¶–ò–Ø –û–ë–™–ï–ö–¢–û–í ===")
            local objects = findAnimatableObjects(tool)
            
            print("üì¶ BaseParts:", #objects.baseParts)
            for i, part in ipairs(objects.baseParts) do
                print(string.format("  %d. %s | Size=%s", i, part.Name, tostring(part.Size)))
            end
            
            print("üèóÔ∏è Models:", #objects.models)
            for i, model in ipairs(objects.models) do
                print(string.format("  %d. %s | PrimaryPart=%s", i, model.Name, 
                    model.PrimaryPart and model.PrimaryPart.Name or "NIL"))
            end
            
            print("üìé Attachments:", #objects.attachments)
            for i, att in ipairs(objects.attachments) do
                print(string.format("  %d. %s | Parent=%s", i, att.Name, att.Parent.Name))
            end
            
            print("‚öôÔ∏è Motor6Ds:", #objects.motor6ds)
            for i, motor in ipairs(objects.motor6ds) do
                print(string.format("  %d. %s | Part0=%s | Part1=%s", i, motor.Name,
                    motor.Part0 and motor.Part0.Name or "NIL",
                    motor.Part1 and motor.Part1.Name or "NIL"))
            end
            
            print("üìú Scripts:", #objects.scripts)
            for i, script in ipairs(objects.scripts) do
                print(string.format("  %d. %s (%s) | Enabled=%s", i, script.Name, 
                    script.ClassName, tostring(script.Enabled)))
            end
            
            print("‚ùì Other Objects:", #objects.other)
            for i, obj in ipairs(objects.other) do
                if i <= 10 then  -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                    print(string.format("  %d. %s (%s)", i, obj.Name, obj.ClassName))
                end
            end
            
            print("\n‚úÖ === –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù ===")
            print("üõë –û—Ç–∫–ª—é—á–∞—é –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä...")
            connection:Disconnect()
            
            return
        end
    end)
    
    print("üîç –û–∂–∏–¥–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ...")
    print("üéí –í–æ–∑—å–º–∏ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã")
    
    return connection
end

-- üöÄ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
local analyzerConnection = startAnalysis()

return analyzerConnection
