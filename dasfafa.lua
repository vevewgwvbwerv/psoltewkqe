-- ToolCloneDiagnostic.lua
-- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º Tool –≤ —Ä—É–∫–∏

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

print("=== TOOL CLONE DIAGNOSTIC ===")

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local scannedTool = nil
local diagnosticConnection = nil

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∞—Ö
local function findPetInHands()
    local character = player.Character
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "%[") and string.find(tool.Name, "KG%]") then
            return tool
        end
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ Shovel –≤ —Ä—É–∫–∞—Ö
local function findShovelInHands()
    local character = player.Character
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and (string.find(tool.Name, "Shovel") or string.find(tool.Name, "Destroy")) then
            return tool
        end
    end
    return nil
end

-- –ì–õ–£–ë–û–ö–û–ï –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ø–∏—Ç–æ–º—Ü–∞
local function deepScanPet()
    print("\nüîç === –ì–õ–£–ë–û–ö–û–ï –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ü–ò–¢–û–ú–¶–ê ===")
    
    local pet = findPetInHands()
    if not pet then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü: " .. pet.Name)
    print("üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∏—Ç–æ–º—Ü–∞
    local structure = {
        name = pet.Name,
        className = pet.ClassName,
        parent = pet.Parent and pet.Parent.Name or "NIL",
        children = {},
        properties = {}
    }
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
    if pet:IsA("Tool") then
        structure.properties.RequiresHandle = pet.RequiresHandle
        structure.properties.CanBeDropped = pet.CanBeDropped
        structure.properties.ManualActivationOnly = pet.ManualActivationOnly
        print("üîß Tool —Å–≤–æ–π—Å—Ç–≤–∞:")
        print("   RequiresHandle: " .. tostring(pet.RequiresHandle))
        print("   CanBeDropped: " .. tostring(pet.CanBeDropped))
        print("   ManualActivationOnly: " .. tostring(pet.ManualActivationOnly))
    end
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ç–µ–π
    print("üì¶ –î–µ—Ç–∏ –ø–∏—Ç–æ–º—Ü–∞:")
    for _, child in pairs(pet:GetChildren()) do
        local childData = {
            name = child.Name,
            className = child.ClassName,
            parent = child.Parent.Name
        }
        
        if child:IsA("BasePart") then
            childData.size = child.Size
            childData.cframe = child.CFrame
            childData.canCollide = child.CanCollide
            print(string.format("   üì¶ Part: %s (Size: %.2f,%.2f,%.2f)", 
                child.Name, child.Size.X, child.Size.Y, child.Size.Z))
        elseif child:IsA("SpecialMesh") then
            childData.meshType = child.MeshType
            childData.scale = child.Scale
            print(string.format("   üé® Mesh: %s (Scale: %.2f,%.2f,%.2f)", 
                child.Name, child.Scale.X, child.Scale.Y, child.Scale.Z))
        elseif child:IsA("Motor6D") then
            childData.part0 = child.Part0 and child.Part0.Name or "NIL"
            childData.part1 = child.Part1 and child.Part1.Name or "NIL"
            print(string.format("   üîó Motor6D: %s (%s -> %s)", 
                child.Name, childData.part0, childData.part1))
        elseif child:IsA("Script") or child:IsA("LocalScript") then
            childData.enabled = child.Enabled
            print(string.format("   üìú Script: %s (Enabled: %s)", 
                child.Name, tostring(child.Enabled)))
        else
            print(string.format("   ‚ùì Other: %s (%s)", child.Name, child.ClassName))
        end
        
        table.insert(structure.children, childData)
    end
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    scannedTool = structure
    
    print("‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(string.format("üìä –ò—Ç–æ–≥–æ: %d –¥–µ—Ç–µ–π", #structure.children))
    
    return true
end

-- –°–û–ó–î–ê–ù–ò–ï –¢–û–ß–ù–û–ì–û –ö–õ–û–ù–ê
local function createPerfectClone()
    print("\nüé≠ === –°–û–ó–î–ê–ù–ò–ï –¢–û–ß–ù–û–ì–û –ö–õ–û–ù–ê ===")
    
    if not scannedTool then
        print("‚ùå –°–Ω–∞—á–∞–ª–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –ø–∏—Ç–æ–º—Ü–∞!")
        return nil
    end
    
    local pet = findPetInHands()
    if not pet then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil
    end
    
    print("üîß –°–æ–∑–¥–∞—é —Ç–æ—á–Ω—ã–π –∫–ª–æ–Ω...")
    
    -- –°–æ–∑–¥–∞–µ–º –∫–ª–æ–Ω
    local clone = pet:Clone()
    clone.Name = "Dragonfly [6.36 KG] [Age 35]"
    
    print("‚úÖ –ö–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: " .. clone.Name)
    print("üìä –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–æ–Ω–∞...")
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–æ–Ω–∞
    local cloneChildCount = #clone:GetChildren()
    local originalChildCount = #pet:GetChildren()
    
    print(string.format("üìä –î–µ—Ç–∏: –û—Ä–∏–≥–∏–Ω–∞–ª=%d, –ö–ª–æ–Ω=%d", originalChildCount, cloneChildCount))
    
    if cloneChildCount ~= originalChildCount then
        print("‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!")
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º Handle
    local handle = clone:FindFirstChild("Handle")
    if handle then
        print("‚úÖ Handle –Ω–∞–π–¥–µ–Ω: " .. handle.Name)
        print(string.format("   Size: %.2f,%.2f,%.2f", handle.Size.X, handle.Size.Y, handle.Size.Z))
        print("   CanCollide: " .. tostring(handle.CanCollide))
    else
        print("‚ùå Handle –ù–ï –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞—é...")
        handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 1, 1)
        handle.Transparency = 1
        handle.CanCollide = false
        handle.Parent = clone
        print("‚úÖ Handle —Å–æ–∑–¥–∞–Ω")
    end
    
    return clone
end

-- –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–ú–ï–ù–ê —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
local function diagnosticReplace()
    print("\nüî¨ === –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–ú–ï–ù–ê ===")
    
    local shovel = findShovelInHands()
    if not shovel then
        print("‚ùå Shovel –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    local character = player.Character
    if not character then
        print("‚ùå Character –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω Shovel: " .. shovel.Name)
    print("üìç Character: " .. character.Name)
    
    -- –°–æ–∑–¥–∞–µ–º –∫–ª–æ–Ω
    local clone = createPerfectClone()
    if not clone then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–æ–Ω!")
        return false
    end
    
    print("üîß –ù–∞—á–∏–Ω–∞—é –∑–∞–º–µ–Ω—É...")
    
    -- –®–∞–≥ 1: –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –î–û –∑–∞–º–µ–Ω—ã
    print("üìä –°–û–°–¢–û–Ø–ù–ò–ï –î–û –ó–ê–ú–ï–ù–´:")
    local toolsInCharacterBefore = {}
    for _, obj in pairs(character:GetChildren()) do
        if obj:IsA("Tool") then
            table.insert(toolsInCharacterBefore, obj.Name)
        end
    end
    print("   Tools –≤ Character: " .. table.concat(toolsInCharacterBefore, ", "))
    
    -- –®–∞–≥ 2: –£–¥–∞–ª—è–µ–º Shovel
    print("üóëÔ∏è –£–¥–∞–ª—è—é Shovel...")
    shovel:Destroy()
    
    -- –®–∞–≥ 3: –ü–∞—É–∑–∞
    wait(0.3)
    
    -- –®–∞–≥ 4: –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï —É–¥–∞–ª–µ–Ω–∏—è
    print("üìä –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–°–õ–ï –£–î–ê–õ–ï–ù–ò–Ø:")
    local toolsInCharacterAfterDelete = {}
    for _, obj in pairs(character:GetChildren()) do
        if obj:IsA("Tool") then
            table.insert(toolsInCharacterAfterDelete, obj.Name)
        end
    end
    print("   Tools –≤ Character: " .. (table.concat(toolsInCharacterAfterDelete, ", ") ~= "" and table.concat(toolsInCharacterAfterDelete, ", ") or "–ü–£–°–¢–û"))
    
    -- –®–∞–≥ 5: –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–æ–Ω
    print("üêâ –î–æ–±–∞–≤–ª—è—é –∫–ª–æ–Ω –≤ Character...")
    clone.Parent = character
    
    -- –®–∞–≥ 6: –ü–∞—É–∑–∞
    wait(0.2)
    
    -- –®–∞–≥ 7: –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ü–û–°–õ–ï –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    print("üìä –°–û–°–¢–û–Ø–ù–ò–ï –ü–û–°–õ–ï –î–û–ë–ê–í–õ–ï–ù–ò–Ø:")
    local toolsInCharacterAfterAdd = {}
    for _, obj in pairs(character:GetChildren()) do
        if obj:IsA("Tool") then
            table.insert(toolsInCharacterAfterAdd, obj.Name)
            print("   üéÆ Tool –≤ —Ä—É–∫–∞—Ö: " .. obj.Name)
            print("      Parent: " .. (obj.Parent and obj.Parent.Name or "NIL"))
            print("      ClassName: " .. obj.ClassName)
        end
    end
    
    -- –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä—è–µ–º Backpack
    local backpack = character:FindFirstChild("Backpack")
    if backpack then
        print("üì¶ –ü–†–û–í–ï–†–ö–ê BACKPACK:")
        local toolsInBackpack = {}
        for _, obj in pairs(backpack:GetChildren()) do
            if obj:IsA("Tool") then
                table.insert(toolsInBackpack, obj.Name)
                print("   üì¶ Tool –≤ Backpack: " .. obj.Name)
            end
        end
        if #toolsInBackpack == 0 then
            print("   üì¶ Backpack –ø—É—Å—Ç")
        end
    else
        print("‚ùå Backpack –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    end
    
    print("üéØ === –ò–¢–û–ì –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===")
    if #toolsInCharacterAfterAdd > 0 then
        print("‚úÖ –£–°–ü–ï–•: –ö–ª–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä—É–∫–∏!")
        print("üìù –ò–º—è: " .. toolsInCharacterAfterAdd[1])
    else
        print("‚ùå –ü–†–û–í–ê–õ: –ö–ª–æ–Ω –ù–ï –ø–æ—è–≤–∏–ª—Å—è –≤ —Ä—É–∫–∞—Ö!")
        print("üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ö–ª–æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω —Å–∏—Å—Ç–µ–º–æ–π")
        print("   2. –ö–ª–æ–Ω –ø–æ–ø–∞–ª –≤ Backpack")
        print("   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å Handle")
        print("   4. –ü—Ä–æ–±–ª–µ–º–∞ —Å Tool —Å–≤–æ–π—Å—Ç–≤–∞–º–∏")
    end
    
    return #toolsInCharacterAfterAdd > 0
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createDiagnosticGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ToolCloneDiagnosticGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 500, 0, 450)
    frame.Position = UDim2.new(0.5, -250, 0.5, -225)
    frame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.3)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundColor3 = Color3.new(0.2, 0.2, 0.6)
    title.BorderSizePixel = 0
    title.Text = "üî¨ TOOL CLONE DIAGNOSTIC"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 100)
    status.Position = UDim2.new(0, 10, 0, 50)
    status.BackgroundTransparency = 1
    status.Text = "–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï–ú:\n1. –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏\n2. –ì–ª—É–±–æ–∫–æ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É\n3. –í–æ–∑—å–º–∏—Ç–µ Shovel\n4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫—É—é –∑–∞–º–µ–Ω—É"
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.TextWrapped = true
    status.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    local scanBtn = Instance.new("TextButton")
    scanBtn.Size = UDim2.new(1, -20, 0, 50)
    scanBtn.Position = UDim2.new(0, 10, 0, 160)
    scanBtn.BackgroundColor3 = Color3.new(0, 0.8, 0)
    scanBtn.BorderSizePixel = 0
    scanBtn.Text = "üîç –ì–ª—É–±–æ–∫–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
    scanBtn.TextColor3 = Color3.new(1, 1, 1)
    scanBtn.TextScaled = true
    scanBtn.Font = Enum.Font.SourceSansBold
    scanBtn.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–æ–Ω–∞
    local cloneBtn = Instance.new("TextButton")
    cloneBtn.Size = UDim2.new(1, -20, 0, 50)
    cloneBtn.Position = UDim2.new(0, 10, 0, 220)
    cloneBtn.BackgroundColor3 = Color3.new(0.8, 0.4, 0)
    cloneBtn.BorderSizePixel = 0
    cloneBtn.Text = "üé≠ –°–æ–∑–¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –∫–ª–æ–Ω"
    cloneBtn.TextColor3 = Color3.new(1, 1, 1)
    cloneBtn.TextScaled = true
    cloneBtn.Font = Enum.Font.SourceSansBold
    cloneBtn.Visible = false
    cloneBtn.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–º–µ–Ω—ã
    local replaceBtn = Instance.new("TextButton")
    replaceBtn.Size = UDim2.new(1, -20, 0, 50)
    replaceBtn.Position = UDim2.new(0, 10, 0, 280)
    replaceBtn.BackgroundColor3 = Color3.new(0.8, 0, 0.4)
    replaceBtn.BorderSizePixel = 0
    replaceBtn.Text = "üî¨ –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ó–ê–ú–ï–ù–ê"
    replaceBtn.TextColor3 = Color3.new(1, 1, 1)
    replaceBtn.TextScaled = true
    replaceBtn.Font = Enum.Font.SourceSansBold
    replaceBtn.Visible = false
    replaceBtn.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(1, -20, 0, 40)
    closeBtn.Position = UDim2.new(0, 10, 0, 340)
    closeBtn.BackgroundColor3 = Color3.new(0.6, 0.2, 0.2)
    closeBtn.BorderSizePixel = 0
    closeBtn.Text = "‚ùå –ó–∞–∫—Ä—ã—Ç—å"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.Parent = frame
    
    -- –°–æ–±—ã—Ç–∏—è
    scanBtn.MouseButton1Click:Connect(function()
        status.Text = "üîç –°–∫–∞–Ω–∏—Ä—É—é –ø–∏—Ç–æ–º—Ü–∞...\n–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —Å–≤–æ–π—Å—Ç–≤–∞..."
        status.TextColor3 = Color3.new(1, 1, 0)
        
        local success = deepScanPet()
        
        if success then
            status.Text = "‚úÖ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∏—Ç–æ–º—Ü–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.\n–¢–µ–ø–µ—Ä—å –≤–æ–∑—å–º–∏—Ç–µ Shovel."
            status.TextColor3 = Color3.new(0, 1, 0)
            cloneBtn.Visible = true
            replaceBtn.Visible = true
        else
            status.Text = "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!\n–í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏."
            status.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    cloneBtn.MouseButton1Click:Connect(function()
        status.Text = "üé≠ –°–æ–∑–¥–∞—é —Ç–æ—á–Ω—ã–π –∫–ª–æ–Ω...\n–ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É..."
        status.TextColor3 = Color3.new(1, 1, 0)
        
        local clone = createPerfectClone()
        
        if clone then
            status.Text = "‚úÖ –¢–æ—á–Ω—ã–π –∫–ª–æ–Ω —Å–æ–∑–¥–∞–Ω!\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."
            status.TextColor3 = Color3.new(0, 1, 0)
        else
            status.Text = "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–æ–Ω–∞!"
            status.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    replaceBtn.MouseButton1Click:Connect(function()
        status.Text = "üî¨ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–º–µ–Ω–∞...\n–ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ..."
        status.TextColor3 = Color3.new(1, 1, 0)
        
        local success = diagnosticReplace()
        
        if success then
            status.Text = "‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!\n–ö–ª–æ–Ω –≤ —Ä—É–∫–∞—Ö! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å."
            status.TextColor3 = Color3.new(0, 1, 0)
        else
            status.Text = "‚ùå –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ö–ª–æ–Ω –ù–ï –ø–æ—è–≤–∏–ª—Å—è!\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π."
            status.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
createDiagnosticGUI()
print("‚úÖ ToolCloneDiagnostic –≥–æ—Ç–æ–≤!")
print("üî¨ –¶–ï–õ–¨: –í—ã—è—Å–Ω–∏—Ç—å, –ø–æ—á–µ–º—É –∫–ª–æ–Ω –ø–∏—Ç–æ–º—Ü–∞ –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ —Ä—É–∫–∞—Ö")
print("üìä –ë—É–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞")
