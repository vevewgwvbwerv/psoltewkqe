-- ü§ñ PET SCALER INDEPENDENT - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
-- –ö–ª–æ–Ω–∏—Ä—É–µ—Ç AnimationController –∏ –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("ü§ñ === PET SCALER INDEPENDENT ===")
print("–°–æ–∑–¥–∞–µ–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π!")

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local CONFIG = {
    SEARCH_RADIUS = 100,
    SCALE_FACTOR = 3.0,
    TWEEN_TIME = 3.0,
    EASING_STYLE = Enum.EasingStyle.Quad,
    EASING_DIRECTION = Enum.EasingDirection.Out
}

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞
local function findPet()
    local playerChar = player.Character
    if not playerChar then return nil end
    
    local hrp = playerChar:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end
    
    local playerPos = hrp.Position
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:match("%x%x%x%x%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%-%x%x%x%x%x%x%x%x%x%x%x%x") then
            if obj.PrimaryPart then
                local distance = (obj.PrimaryPart.Position - playerPos).Magnitude
                if distance <= CONFIG.SEARCH_RADIUS then
                    return obj
                end
            end
        end
    end
    
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏
local function deepCopyModel(originalModel)
    print("üìã –°–æ–∑–¥–∞—é –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –º–æ–¥–µ–ª–∏:", originalModel.Name)
    
    local copy = originalModel:Clone()
    copy.Name = originalModel.Name .. "_INDEPENDENT_COPY"
    copy.Parent = Workspace
    
    -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ø–∏–∏
    if copy.PrimaryPart and originalModel.PrimaryPart then
        local originalCFrame = originalModel.PrimaryPart.CFrame
        local offset = Vector3.new(15, 0, 0)
        
        local targetPosition = originalCFrame.Position + offset
        
        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
        raycastParams.FilterDescendantsInstances = {copy, originalModel}
        
        local rayOrigin = Vector3.new(targetPosition.X, targetPosition.Y + 100, targetPosition.Z)
        local rayDirection = Vector3.new(0, -200, 0)
        
        local raycastResult = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)
        
        if raycastResult then
            local groundY = raycastResult.Position.Y
            local finalPosition = Vector3.new(targetPosition.X, groundY, targetPosition.Z)
            
            local newCFrame = CFrame.new(finalPosition, finalPosition + originalCFrame.LookVector)
            copy:SetPrimaryPartCFrame(newCFrame)
            print("üìç –ö–æ–ø–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∞ –Ω–∞ –∑–µ–º–ª–µ")
        else
            local newCFrame = CFrame.new(targetPosition, targetPosition + originalCFrame.LookVector)
            copy:SetPrimaryPartCFrame(newCFrame)
            print("üìç –ö–æ–ø–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∞ –Ω–∞ —É—Ä–æ–≤–Ω–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞")
        end
    end
    
    print("‚úÖ –ö–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞:", copy.Name)
    return copy
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö BasePart –∏–∑ –º–æ–¥–µ–ª–∏
local function getAllParts(model)
    local parts = {}
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            table.insert(parts, obj)
        end
    end
    
    return parts
end

-- –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–∏
local function scaleModelSmoothly(model, scaleFactor, tweenTime)
    print("üî• –ù–∞—á–∏–Ω–∞—é –ø–ª–∞–≤–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏:", model.Name)
    
    local parts = getAllParts(model)
    
    if #parts == 0 then
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —á–∞—Å—Ç–µ–π –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è")
        return false
    end
    
    print("üìä –ù–∞–π–¥–µ–Ω–æ —á–∞—Å—Ç–µ–π –¥–ª—è –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è:", #parts)
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    local originalData = {}
    for _, part in ipairs(parts) do
        originalData[part] = {
            size = part.Size,
            cframe = part.CFrame
        }
    end
    
    -- –°–æ–∑–¥–∞–µ–º TweenInfo
    local tweenInfo = TweenInfo.new(
        tweenTime,
        CONFIG.EASING_STYLE,
        CONFIG.EASING_DIRECTION,
        0,
        false,
        0
    )
    
    -- –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ CFrame
    local tweens = {}
    local completedTweens = 0
    
    for _, part in ipairs(parts) do
        local originalSize = originalData[part].size
        local originalCFrame = originalData[part].cframe
        
        local newSize = originalSize * scaleFactor
        
        local tween = TweenService:Create(part, tweenInfo, {
            Size = newSize,
            CFrame = originalCFrame
        })
        
        tween.Completed:Connect(function()
            completedTweens = completedTweens + 1
            if completedTweens == #parts then
                print("üéâ –í—Å–µ " .. #parts .. " —á–∞—Å—Ç–µ–π —É—Å–ø–µ—à–Ω–æ —É–≤–µ–ª–∏—á–µ–Ω—ã –≤ " .. scaleFactor .. "x")
            end
        end)
        
        table.insert(tweens, tween)
        tween:Play()
    end
    
    print("üöÄ –ó–∞–ø—É—â–µ–Ω–æ " .. #tweens .. " —Ç–≤–∏–Ω–æ–≤ –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è")
    return true
end

-- –§—É–Ω–∫—Ü–∏—è —É–º–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Anchored
local function smartAnchoredManagement(copyParts)
    print("üß† –£–º–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Anchored...")
    
    local rootPart = nil
    
    for _, part in ipairs(copyParts) do
        if part.Name == "HumanoidRootPart" or part.Name == "RootPart" or part.Name == "Torso" then
            rootPart = part
            part.Anchored = true
            print("  ‚öì –ó–∞—è–∫–æ—Ä–µ–Ω –∫–æ—Ä–µ–Ω—å:", part.Name)
        else
            part.Anchored = false
            print("  üÜì –û—Å–≤–æ–±–æ–∂–¥–µ–Ω:", part.Name)
        end
    end
    
    print("  ‚úÖ Anchored –Ω–∞—Å—Ç—Ä–æ–µ–Ω: –∫–æ—Ä–µ–Ω—å –∑–∞—è–∫–æ—Ä–µ–Ω, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–≤–æ–±–æ–¥–Ω—ã")
    return rootPart
end

-- –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø - –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–û–ù–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
local function cloneAnimationComponents(original, copy)
    print("\nü§ñ === –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–û–ù–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ===")
    
    -- 1. –ü–û–ò–°–ö ANIMATION CONTROLLER –í –û–†–ò–ì–ò–ù–ê–õ–ï
    local originalAnimController = original:FindFirstChildOfClass("AnimationController")
    if not originalAnimController then
        print("‚ùå AnimationController –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω AnimationController –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ")
    
    -- 2. –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï ANIMATION CONTROLLER
    local clonedAnimController = originalAnimController:Clone()
    clonedAnimController.Parent = copy
    
    print("‚úÖ AnimationController —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ–ø–∏—é")
    
    -- 3. –ü–û–ò–°–ö ANIMATOR –í –ö–õ–û–ù–ò–†–û–í–ê–ù–ù–û–ú –ö–û–ù–¢–†–û–õ–õ–ï–†–ï
    local clonedAnimator = clonedAnimController:FindFirstChildOfClass("Animator")
    if not clonedAnimator then
        print("‚ùå Animator –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ")
        return false
    end
    
    print("‚úÖ Animator –Ω–∞–π–¥–µ–Ω –≤ —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ")
    
    -- 4. –°–û–ó–î–ê–ù–ò–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ò
    print("\nüé≠ === –°–û–ó–î–ê–ù–ò–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    -- –°–æ–∑–¥–∞–µ–º Animation –æ–±—ä–µ–∫—Ç —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º rbxassetid
    local idleAnimation = Instance.new("Animation")
    idleAnimation.Name = "IdleAnimation"
    idleAnimation.AnimationId = "rbxassetid://107329390413456"  -- –ù–∞–π–¥–µ–Ω–Ω—ã–π ID
    idleAnimation.Parent = clonedAnimController
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω Animation –æ–±—ä–µ–∫—Ç —Å ID: rbxassetid://107329390413456")
    
    -- 5. –ó–ê–ì–†–£–ó–ö–ê –ò –ó–ê–ü–£–°–ö –ê–ù–ò–ú–ê–¶–ò–ò
    wait(1) -- –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    
    print("\nüöÄ === –ó–ê–ü–£–°–ö –ù–ï–ó–ê–í–ò–°–ò–ú–û–ô –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    local success, idleTrack = pcall(function()
        return clonedAnimator:LoadAnimation(idleAnimation)
    end)
    
    if success and idleTrack then
        print("‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        idleTrack.Looped = true
        idleTrack.Priority = Enum.AnimationPriority.Action
        
        -- –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        idleTrack:Play()
        
        print("üéâ IDLE –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –∏ –∑–∞—Ü–∏–∫–ª–µ–Ω–∞!")
        print("üí° –ö–æ–ø–∏—è —Ç–µ–ø–µ—Ä—å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –ø–∏—Ç–æ–º–µ—Ü —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π!")
        
        return true
    else
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏:", idleTrack)
        return false
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    print("\nüîç === –ü–û–ò–°–ö –ü–ò–¢–û–ú–¶–ê ===")
    
    local petModel = findPet()
    if not petModel then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞–¥–∏—É—Å–µ", CONFIG.SEARCH_RADIUS, "–±–ª–æ–∫–æ–≤")
        return
    end
    
    print("‚úÖ –ü–∏—Ç–æ–º–µ—Ü –Ω–∞–π–¥–µ–Ω:", petModel.Name)
    
    -- –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ø–∏–∏
    print("\nüìã === –°–û–ó–î–ê–ù–ò–ï –ö–û–ü–ò–ò ===")
    local petCopy = deepCopyModel(petModel)
    
    -- –®–∞–≥ 2: –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("\nüî• === –ú–ê–°–®–¢–ê–ë–ò–†–û–í–ê–ù–ò–ï ===")
    
    -- –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏
    local copyParts = getAllParts(petCopy)
    for _, part in ipairs(copyParts) do
        if part:IsA("BasePart") then
            part.Anchored = true
        end
    end
    
    wait(0.5)
    local scaleSuccess = scaleModelSmoothly(petCopy, CONFIG.SCALE_FACTOR, CONFIG.TWEEN_TIME)
    
    if not scaleSuccess then
        print("‚ùå –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!")
        return
    end
    
    -- –®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Anchored
    print("\nüß† === –ù–ê–°–¢–†–û–ô–ö–ê ANCHORED ===")
    wait(CONFIG.TWEEN_TIME + 1)
    
    local rootPart = smartAnchoredManagement(copyParts)
    
    -- –®–∞–≥ 4: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    print("\nü§ñ === –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    local animationSuccess = cloneAnimationComponents(petModel, petCopy)
    
    if animationSuccess then
        print("\nüéâ === –£–°–ü–ï–•! ===")
        print("‚úÖ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        print("‚úÖ –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞")
        print("ü§ñ –ö–æ–ø–∏—è —Ç–µ–ø–µ—Ä—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü!")
        print("üí° –û–Ω–∞ –±—É–¥–µ—Ç –∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞!")
    else
        print("\n‚ö†Ô∏è === –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–• ===")
        print("‚úÖ –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞")
        print("‚ùå –ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    local oldGui = playerGui:FindFirstChild("PetScalerIndependentGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetScalerIndependentGUI"
    screenGui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 280, 0, 80)
    frame.Position = UDim2.new(0, 50, 0, 250) -- –ü–æ–¥ –¥—Ä—É–≥–∏–º–∏ GUI
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(0, 150, 255) -- –°–∏–Ω—è—è —Ä–∞–º–∫–∞
    frame.Parent = screenGui
    
    local button = Instance.new("TextButton")
    button.Name = "IndependentButton"
    button.Size = UDim2.new(0, 260, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 20)
    button.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    button.BorderSizePixel = 0
    button.Text = "ü§ñ –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –ü–∏—Ç–æ–º–µ—Ü"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.SourceSansBold
    button.Parent = frame
    
    button.MouseButton1Click:Connect(function()
        button.Text = "‚è≥ –°–æ–∑–¥–∞—é –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞..."
        button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        spawn(function()
            main()
            
            wait(3)
            button.Text = "ü§ñ –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–π –ü–∏—Ç–æ–º–µ—Ü"
            button.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        end)
    end)
    
    button.MouseEnter:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(0, 150, 255) then
            button.BackgroundColor3 = Color3.fromRGB(0, 130, 220)
        end
    end)
    
    button.MouseLeave:Connect(function()
        if button.BackgroundColor3 == Color3.fromRGB(0, 130, 220) then
            button.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
        end
    end)
    
    print("üñ•Ô∏è PetScaler Independent GUI —Å–æ–∑–¥–∞–Ω!")
end

-- –ó–∞–ø—É—Å–∫
createGUI()
print("=" .. string.rep("=", 70))
print("üí° PETSCALER INDEPENDENT:")
print("   ü§ñ –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞")
print("   üé≠ –ö–ª–æ–Ω–∏—Ä—É–µ—Ç –≤—Å–µ –∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã")
print("   üîÑ –ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é idle –∞–Ω–∏–º–∞—Ü–∏—é")
print("   ‚ú® –ö–æ–ø–∏—è –∞–Ω–∏–º–∏—Ä—É–µ—Ç—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞!")
print("üéØ –ù–∞–∂–º–∏—Ç–µ —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!")
print("=" .. string.rep("=", 70))
