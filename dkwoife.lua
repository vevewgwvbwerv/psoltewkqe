-- ü•ö EGG INTERCEPTOR v1.0 - –ß–ê–°–¢–¨ 1
-- –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –∏–∑ —è–π—Ü–∞ –∏ –∑–∞–º–µ–Ω—è–µ—Ç –Ω–∞ Dragonfly
-- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –í–°–ï —ç—Ñ—Ñ–µ–∫—Ç—ã –≤–∑—Ä—ã–≤–∞ –∏ —Ä–æ—Å—Ç–∞, –ù–ï –∫–æ–ø–∏—Ä—É–µ—Ç idle –∞–Ω–∏–º–∞—Ü–∏—é

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("ü•ö === EGG INTERCEPTOR v1.0 - –ß–ê–°–¢–¨ 1 ===")
print("=" .. string.rep("=", 60))

-- üìä –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
local CONFIG = {
    SEARCH_RADIUS = 100,  -- –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ Dragonfly —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º
    MONITOR_DURATION = 30, -- –í—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ—Å–ª–µ EggExplode
    DEBUG_MODE = true     -- –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏
}

-- üéØ –°–û–°–¢–û–Ø–ù–ò–ï –ü–ï–†–ï–•–í–ê–¢–ß–ò–ö–ê
local InterceptorState = {
    isActive = false,
    eggExplodeDetected = false,
    dragonflyFound = false,
    dragonflyModel = nil,
    originalPetModel = nil,
    interceptComplete = false
}

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position
print("üìç –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞:", playerPos)
print("üéØ –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ Dragonfly:", CONFIG.SEARCH_RADIUS)

-- üêâ –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ß–¢–û –ú–û–î–ï–õ–¨ - DRAGONFLY
-- –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ: 0 MeshPart, –Ω–æ –µ—Å—Ç—å BasePart —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
local function checkIfDragonfly(model)
    if not model or not model:IsA("Model") then
        return false
    end
    
    local meshPartCount = 0
    local basePartCount = 0
    local hasDragonflyParts = false
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") then
            meshPartCount = meshPartCount + 1
        elseif obj:IsA("BasePart") and obj.Name ~= "Handle" then
            basePartCount = basePartCount + 1
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —á–∞—Å—Ç–∏ Dragonfly
            local partName = obj.Name:lower()
            if partName:find("wing") or partName:find("tail") or 
               partName:find("leg") or partName:find("body") or 
               partName:find("head") or partName:find("bug") or
               partName:find("dragon") then
                hasDragonflyParts = true
            end
        end
    end
    
    -- Dragonfly: 0 MeshPart, –Ω–æ –µ—Å—Ç—å BasePart —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    local isDragonfly = (meshPartCount == 0) and (basePartCount > 0) and hasDragonflyParts
    
    if CONFIG.DEBUG_MODE and isDragonfly then
        print("üêâ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ Dragonfly:")
        print("   MeshPart: " .. meshPartCount)
        print("   BasePart: " .. basePartCount) 
        print("   –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —á–∞—Å—Ç–∏: " .. tostring(hasDragonflyParts))
    end
    
    return isDragonfly
end

-- üîç –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê DRAGONFLY –†–Ø–î–û–ú –° –ò–ì–†–û–ö–û–ú
-- –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ PetScaler_v2.9.lua —Å —É—á–µ—Ç–æ–º –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π Dragonfly
local function findNearbyDragonfly()
    if CONFIG.DEBUG_MODE then
        print("üîç –ü–æ–∏—Å–∫ Dragonfly —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º...")
    end
    
    local foundDragonflyModels = {}
    
    -- –ü–æ–∏—Å–∫ UUID –º–æ–¥–µ–ª–µ–π (–∫–∞–∫ –≤ PetScaler_v2.9.lua)
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= CONFIG.SEARCH_RADIUS then
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ Dragonfly (0 MeshPart, –Ω–æ –µ—Å—Ç—å BasePart)
                    local isDragonfly = checkIfDragonfly(obj)
                    if isDragonfly then
                        table.insert(foundDragonflyModels, {
                            model = obj,
                            distance = distance
                        })
                        if CONFIG.DEBUG_MODE then
                            print("‚úÖ –ù–∞–π–¥–µ–Ω Dragonfly:", obj.Name, "–î–∏—Å—Ç–∞–Ω—Ü–∏—è:", math.floor(distance))
                        end
                    end
                end
            end
        end
    end
    
    if #foundDragonflyModels == 0 then
        print("‚ùå Dragonfly –Ω–µ –Ω–∞–π–¥–µ–Ω —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º!")
        return nil
    end
    
    -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–ª–∏–∂–∞–π—à–∏–π
    table.sort(foundDragonflyModels, function(a, b) return a.distance < b.distance end)
    local targetDragonfly = foundDragonflyModels[1].model
    
    print("üêâ –í—ã–±—Ä–∞–Ω Dragonfly:", targetDragonfly.Name)
    return targetDragonfly
end

-- üîç –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê EGGEXPLODE
-- –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ EggAnimationSourceTracker.lua
local function checkForEggExplode()
    -- –ò—â–µ–º –≤ ReplicatedStorage
    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
        if obj.Name == "EggExplode" and obj:IsA("Model") then
            return true, obj, "ReplicatedStorage"
        end
    end
    
    -- –ò—â–µ–º –≤ Workspace
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj.Name == "EggExplode" and obj:IsA("Model") then
            return true, obj, "Workspace"
        end
    end
    
    return false, nil, nil
end

-- üéØ –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê –í–†–ï–ú–ï–ù–ù–û–ô –ú–û–î–ï–õ–ò –í VISUALS
-- –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
local function findTemporaryPetInVisuals()
    local visualsFolder = Workspace:FindFirstChild("Visuals")
    if not visualsFolder then
        return nil
    end
    
    -- –ò—â–µ–º –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ Visuals
    for _, obj in pairs(visualsFolder:GetChildren()) do
        if obj:IsA("Model") then
            local modelName = obj.Name:lower()
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∏–º–µ–Ω–∞ –ø–∏—Ç–æ–º—Ü–µ–≤ –∏–∑ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            if modelName:find("dog") or modelName:find("bunny") or 
               modelName:find("golden") or modelName:find("lab") then
                if CONFIG.DEBUG_MODE then
                    print("üéØ –ù–∞–π–¥–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –≤ Visuals:", obj.Name)
                end
                return obj
            end
        end
    end
    
    return nil
end

-- üîÑ –§–£–ù–ö–¶–ò–Ø –ì–õ–£–ë–û–ö–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø DRAGONFLY
-- –û—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ deepCopyModel –∏–∑ PetScaler_v2.9.lua
local function deepCopyDragonfly(originalDragonfly)
    if CONFIG.DEBUG_MODE then
        print("üìã –°–æ–∑–¥–∞—é –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é Dragonfly:", originalDragonfly.Name)
    end
    
    local copy = originalDragonfly:Clone()
    copy.Name = "Dragonfly_EggReplacement"
    
    -- –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∫–æ–ø–∏—è –Ω–µ –∏–º–µ–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è –ø–æ–∫–∞
    copy.Parent = nil
    
    if CONFIG.DEBUG_MODE then
        print("‚úÖ –ö–æ–ø–∏—è Dragonfly —Å–æ–∑–¥–∞–Ω–∞:", copy.Name)
    end
    
    return copy
end

-- üéØ –§–£–ù–ö–¶–ò–Ø –ó–ê–ú–ï–ù–´ –í–†–ï–ú–ï–ù–ù–û–ô –ú–û–î–ï–õ–ò –ù–ê DRAGONFLY
-- –ö–ª—é—á–µ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
local function replaceTemporaryModel(originalPetModel, dragonflyReplacement)
    if CONFIG.DEBUG_MODE then
        print("üîÑ –ù–∞—á–∏–Ω–∞—é –∑–∞–º–µ–Ω—É –º–æ–¥–µ–ª–∏:")
        print("   –û—Ä–∏–≥–∏–Ω–∞–ª:", originalPetModel.Name)
        print("   –ó–∞–º–µ–Ω–∞:", dragonflyReplacement.Name)
    end
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏
    local originalParent = originalPetModel.Parent
    local originalCFrame = originalPetModel:GetModelCFrame()
    local originalSize = originalPetModel:GetModelSize()
    
    if CONFIG.DEBUG_MODE then
        print("üìç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ä–∏–≥–∏–Ω–∞–ª–∞:")
        print("   Parent:", originalParent and originalParent.Name or "nil")
        print("   Position:", originalCFrame.Position)
        print("   Size:", originalSize)
    end
    
    -- –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –º–æ–¥–µ–ª—å
    originalPetModel:Destroy()
    
    -- –†–∞–∑–º–µ—â–∞–µ–º Dragonfly –Ω–∞ —Ç–æ–º –∂–µ –º–µ—Å—Ç–µ
    dragonflyReplacement:SetPrimaryPartCFrame(originalCFrame)
    dragonflyReplacement.Parent = originalParent
    
    if CONFIG.DEBUG_MODE then
        print("‚úÖ –ó–∞–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! Dragonfly —Ä–∞–∑–º–µ—â–µ–Ω –≤:", originalParent.Name)
    end
    
    return dragonflyReplacement
end

-- üé¨ –§–£–ù–ö–¶–ò–Ø –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø –≠–§–§–ï–ö–¢–û–í (–ù–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ò)
-- –ö–æ–ø–∏—Ä—É–µ—Ç –≤—Å–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∫—Ä–æ–º–µ idle –∞–Ω–∏–º–∞—Ü–∏–∏
local function copyNonIdleEffects(fromModel, toModel)
    if CONFIG.DEBUG_MODE then
        print("üé¨ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (–∏—Å–∫–ª—é—á–∞—è idle)...")
    end
    
    -- –ë–ï–ó–û–ü–ê–°–ù–û–ï –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Animator
    local animatorFound = false
    for _, obj in pairs(fromModel:GetDescendants()) do
        if obj:IsA("Animator") then
            local success, animatorCopy = pcall(function()
                return obj:Clone()
            end)
            
            if success and animatorCopy then
                -- –ò—â–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
                local targetHumanoid = toModel:FindFirstChildOfClass("Humanoid")
                
                if targetHumanoid then
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É Humanoid –µ—â–µ –Ω–µ—Ç Animator
                    local existingAnimator = targetHumanoid:FindFirstChildOfClass("Animator")
                    if not existingAnimator then
                        local placeSuccess = pcall(function()
                            animatorCopy.Parent = targetHumanoid
                        end)
                        if placeSuccess then
                            animatorFound = true
                            if CONFIG.DEBUG_MODE then
                                print("‚úÖ Animator –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ Humanoid")
                            end
                        end
                    end
                end
                
                -- –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ Humanoid, –ø—Ä–æ–±—É–µ–º –∫–æ—Ä–µ–Ω—å –º–æ–¥–µ–ª–∏
                if not animatorFound then
                    local existingAnimator = toModel:FindFirstChildOfClass("Animator")
                    if not existingAnimator then
                        local placeSuccess = pcall(function()
                            animatorCopy.Parent = toModel
                        end)
                        if placeSuccess then
                            animatorFound = true
                            if CONFIG.DEBUG_MODE then
                                print("‚úÖ Animator –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ—Ä–µ–Ω—å –º–æ–¥–µ–ª–∏")
                            end
                        end
                    end
                end
                
                -- –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º –∫–æ–ø–∏—é
                if not animatorFound then
                    animatorCopy:Destroy()
                    if CONFIG.DEBUG_MODE then
                        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å Animator, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                    end
                end
            end
            break -- –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π Animator
        end
    end
    
    -- –ù–ï –∫–æ–ø–∏—Ä—É–µ–º Motor6D —Å–æ—Å—Ç–æ—è–Ω–∏—è (—á—Ç–æ–±—ã –Ω–µ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å idle)
    -- –≠—Ñ—Ñ–µ–∫—Ç—ã —Ä–æ—Å—Ç–∞ –∏ –≤–∑—Ä—ã–≤–∞ –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –∏–≥—Ä–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    
    if CONFIG.DEBUG_MODE then
        print("‚úÖ –≠—Ñ—Ñ–µ–∫—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã (idle –∞–Ω–∏–º–∞—Ü–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∞)")
        print("   Animator —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω:", animatorFound)
    end
end

-- ‚ö° –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ò –ü–ï–†–ï–•–í–ê–¢–ê
local function startEggInterception()
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —è–π—Ü–∞...")
    
    -- –®–∞–≥ 1: –ù–∞–π—Ç–∏ Dragonfly —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º
    local dragonflyModel = findNearbyDragonfly()
    if not dragonflyModel then
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω Dragonfly —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º!")
        return false
    end
    
    InterceptorState.dragonflyModel = dragonflyModel
    InterceptorState.dragonflyFound = true
    print("‚úÖ Dragonfly –Ω–∞–π–¥–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∑–∞–º–µ–Ω–µ")
    
    -- –®–∞–≥ 2: –°–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é Dragonfly –¥–ª—è –∑–∞–º–µ–Ω—ã
    local dragonflyReplacement = deepCopyDragonfly(dragonflyModel)
    
    -- –®–∞–≥ 3: –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ EggExplode
    InterceptorState.isActive = true
    local startTime = tick()
    
    print("üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ EggExplode –∞–∫—Ç–∏–≤–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ!")
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not InterceptorState.isActive then
            connection:Disconnect()
            return
        end
        
        local elapsed = tick() - startTime
        
        -- –¢–∞–π–º–∞—É—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        if elapsed > CONFIG.MONITOR_DURATION then
            print("‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
            InterceptorState.isActive = false
            return
        end
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º EggExplode
        if not InterceptorState.eggExplodeDetected then
            local found, eggObj, location = checkForEggExplode()
            if found then
                InterceptorState.eggExplodeDetected = true
                print("‚ö° EggExplode –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤", location)
                
                -- –¶–ò–ö–õ–ò–ß–ï–°–ö–ò–ô –ü–û–ò–°–ö –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
                spawn(function()
                    print("üîç –ù–∞—á–∏–Ω–∞—é —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –≤ Visuals...")
                    
                    local searchAttempts = 0
                    local maxAttempts = 200 -- 20 —Å–µ–∫—É–Ω–¥ –ø–æ–∏—Å–∫–∞ (200 * 0.1 —Å–µ–∫)
                    local temporaryPet = nil
                    
                    -- –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∫–∞–∂–¥—ã–µ 0.1 —Å–µ–∫—É–Ω–¥—ã
                    while searchAttempts < maxAttempts and not temporaryPet do
                        temporaryPet = findTemporaryPetInVisuals()
                        
                        if temporaryPet then
                            print("üéØ –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –ù–ê–ô–î–ï–ù–ê:", temporaryPet.Name, "(–ø–æ–ø—ã—Ç–∫–∞", searchAttempts + 1, ")")
                            break
                        end
                        
                        searchAttempts = searchAttempts + 1
                        if CONFIG.DEBUG_MODE and searchAttempts % 10 == 0 then
                            print("üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è... –ø–æ–ø—ã—Ç–∫–∞", searchAttempts, "–∏–∑", maxAttempts)
                        end
                        
                        wait(0.1) -- –ñ–¥–µ–º 0.1 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                    end
                    
                    if temporaryPet then
                        print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞—é –∑–∞–º–µ–Ω—É...")
                        
                        -- –ö–æ–ø–∏—Ä—É–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã (–ù–ï idle)
                        copyNonIdleEffects(temporaryPet, dragonflyReplacement)
                        
                        -- –ì–õ–ê–í–ù–û–ï: –ó–∞–º–µ–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å –Ω–∞ Dragonfly
                        local replacedModel = replaceTemporaryModel(temporaryPet, dragonflyReplacement)
                        
                        if replacedModel then
                            InterceptorState.interceptComplete = true
                            print("üéâ –£–°–ü–ï–•! –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ Dragonfly!")
                            print("‚úÖ Dragonfly –ø–æ–ª—É—á–∏—Ç –≤—Å–µ —ç—Ñ—Ñ–µ–∫—Ç—ã —Ä–æ—Å—Ç–∞ –∏ –≤–∑—Ä—ã–≤–∞")
                            print("‚úÖ Idle –∞–Ω–∏–º–∞—Ü–∏—è –ù–ï –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è (–∫–∞–∫ —Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å)")
                        else
                            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ –º–æ–¥–µ–ª–∏")
                        end
                    else
                        print("‚ùå –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –ù–ï –ù–ê–ô–î–ï–ù–ê –ø–æ—Å–ª–µ", maxAttempts, "–ø–æ–ø—ã—Ç–æ–∫")
                        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —è–π—Ü–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏")
                    end
                    
                    InterceptorState.isActive = false
                end)
            end
        end
    end)
    
    return true
end

-- üñ•Ô∏è –°–û–ó–î–ê–ù–ò–ï GUI –°–ò–°–¢–ï–ú–´
-- –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ createGUI –∏–∑ PetScaler_v2.9.lua
local function createEggInterceptorGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI –µ—Å–ª–∏ –µ—Å—Ç—å
    local oldGui = playerGui:FindFirstChild("EggInterceptorGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "EggInterceptorGUI"
    screenGui.Parent = playerGui
    
    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 280, 0, 120)
    frame.Position = UDim2.new(0, 50, 0, 250) -- –ü–æ–¥ PetScaler
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 100, 0) -- –û—Ä–∞–Ω–∂–µ–≤–∞—è —Ä–∞–º–∫–∞
    frame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 0, 25)
    titleLabel.Position = UDim2.new(0, 0, 0, 5)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "ü•ö EGG INTERCEPTOR v1.0"
    titleLabel.TextColor3 = Color3.fromRGB(255, 150, 50)
    titleLabel.TextSize = 12
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
    local interceptButton = Instance.new("TextButton")
    interceptButton.Name = "InterceptButton"
    interceptButton.Size = UDim2.new(0, 260, 0, 35)
    interceptButton.Position = UDim2.new(0, 10, 0, 35)
    interceptButton.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
    interceptButton.BorderSizePixel = 0
    interceptButton.Text = "ü•ö –ó–ê–ü–£–°–¢–ò–¢–¨ –ü–ï–†–ï–•–í–ê–¢ –Ø–ô–¶–ê"
    interceptButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    interceptButton.TextSize = 12
    interceptButton.Font = Enum.Font.SourceSansBold
    interceptButton.Parent = frame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 5)
    buttonCorner.Parent = interceptButton
    
    -- –°—Ç–∞—Ç—É—Å–Ω–∞—è –º–µ—Ç–∫–∞
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Name = "StatusLabel"
    statusLabel.Size = UDim2.new(1, -20, 0, 40)
    statusLabel.Position = UDim2.new(0, 10, 0, 75)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "üîç –ù–∞–π–¥–∏—Ç–µ Dragonfly —Ä—è–¥–æ–º –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É"
    statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    statusLabel.TextSize = 10
    statusLabel.Font = Enum.Font.SourceSans
    statusLabel.TextWrapped = true
    statusLabel.TextYAlignment = Enum.TextYAlignment.Top
    statusLabel.Parent = frame
    
    -- –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏
    interceptButton.MouseButton1Click:Connect(function()
        if InterceptorState.isActive then
            print("‚ö†Ô∏è –ü–µ—Ä–µ—Ö–≤–∞—Ç —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω!")
            return
        end
        
        interceptButton.Text = "‚è≥ –ü–û–ò–°–ö DRAGONFLY..."
        interceptButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        statusLabel.Text = "üîç –ò—â–µ–º Dragonfly —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º..."
        
        spawn(function()
            local success = startEggInterception()
            
            if success then
                interceptButton.Text = "üéØ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ê–ö–¢–ò–í–ï–ù"
                interceptButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                statusLabel.Text = "‚úÖ Dragonfly –Ω–∞–π–¥–µ–Ω! –û—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ –¥–ª—è –∑–∞–º–µ–Ω—ã."
                
                -- –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
                while InterceptorState.isActive do
                    wait(0.5)
                end
                
                if InterceptorState.interceptComplete then
                    interceptButton.Text = "üéâ –ü–ï–†–ï–•–í–ê–¢ –£–°–ü–ï–®–ï–ù!"
                    interceptButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
                    statusLabel.Text = "üéâ –£—Å–ø–µ—Ö! –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ Dragonfly!"
                else
                    interceptButton.Text = "‚è∞ –¢–ê–ô–ú–ê–£–¢"
                    interceptButton.BackgroundColor3 = Color3.fromRGB(200, 100, 0)
                    statusLabel.Text = "‚è∞ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É."
                end
                
                -- –°–±—Ä–æ—Å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                wait(5)
                interceptButton.Text = "ü•ö –ó–ê–ü–£–°–¢–ò–¢–¨ –ü–ï–†–ï–•–í–ê–¢ –Ø–ô–¶–ê"
                interceptButton.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
                statusLabel.Text = "üîç –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É –ø–µ—Ä–µ—Ö–≤–∞—Ç—É."
                
                -- –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
                InterceptorState = {
                    isActive = false,
                    eggExplodeDetected = false,
                    dragonflyFound = false,
                    dragonflyModel = nil,
                    originalPetModel = nil,
                    interceptComplete = false
                }
            else
                interceptButton.Text = "‚ùå DRAGONFLY –ù–ï –ù–ê–ô–î–ï–ù"
                interceptButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
                statusLabel.Text = "‚ùå Dragonfly –Ω–µ –Ω–∞–π–¥–µ–Ω —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º!"
                
                wait(3)
                interceptButton.Text = "ü•ö –ó–ê–ü–£–°–¢–ò–¢–¨ –ü–ï–†–ï–•–í–ê–¢ –Ø–ô–¶–ê"
                interceptButton.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
                statusLabel.Text = "üîç –ù–∞–π–¥–∏—Ç–µ Dragonfly —Ä—è–¥–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            end
        end)
    end)
    
    -- –≠—Ñ—Ñ–µ–∫—Ç—ã –Ω–∞–≤–µ–¥–µ–Ω–∏—è
    interceptButton.MouseEnter:Connect(function()
        if interceptButton.BackgroundColor3 == Color3.fromRGB(255, 100, 0) then
            interceptButton.BackgroundColor3 = Color3.fromRGB(255, 120, 20)
        end
    end)
    
    interceptButton.MouseLeave:Connect(function()
        if interceptButton.BackgroundColor3 == Color3.fromRGB(255, 120, 20) then
            interceptButton.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
        end
    end)
    
    print("üñ•Ô∏è EggInterceptor GUI —Å–æ–∑–¥–∞–Ω!")
end

-- üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –ó–ê–ü–£–°–ö
local function initializeEggInterceptor()
    print("üöÄ === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø EGG INTERCEPTOR v1.0 ===")
    
    -- –°–æ–∑–¥–∞–µ–º GUI
    createEggInterceptorGUI()
    
    print("‚úÖ EGG INTERCEPTOR v1.0 –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
    print("üìã –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
    print("   1. –ù–∞–π–¥–∏—Ç–µ Dragonfly —Ä—è–¥–æ–º —Å —Å–æ–±–æ–π (UUID –∏–º—è —Å {})")
    print("   2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–ê–ü–£–°–¢–ò–¢–¨ –ü–ï–†–ï–•–í–ê–¢ –Ø–ô–¶–ê'")
    print("   3. –û—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –∑–∞–º–µ–Ω–∏—Ç—Å—è –Ω–∞ Dragonfly")
    print("   4. Dragonfly –ø–æ–ª—É—á–∏—Ç –í–°–ï —ç—Ñ—Ñ–µ–∫—Ç—ã —Ä–æ—Å—Ç–∞ –∏ –≤–∑—Ä—ã–≤–∞")
    print("   5. Idle –∞–Ω–∏–º–∞—Ü–∏—è –ù–ï –∫–æ–ø–∏—Ä—É–µ—Ç—Å—è (–æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è)")
    print("üéØ –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ—Ö–≤–∞—Ç—É!")
end

-- ‚úÖ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ß–ê–°–¢–¨ 3 –ó–ê–ì–†–£–ñ–ï–ù–ê
print("‚úÖ –ß–ê–°–¢–¨ 3 –ó–ê–ì–†–£–ñ–ï–ù–ê:")
print("   üñ•Ô∏è GUI —Å–∏—Å—Ç–µ–º–∞ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—É—Å–∫–∞")
print("   üìä –°—Ç–∞—Ç—É—Å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏–Ω–¥–∏–∫–∞—Ü–∏—è")
print("   üéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
print("   üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è")
print("üéâ === EGG INTERCEPTOR v1.0 –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í! ===")
print("=" .. string.rep("=", 60))

-- üöÄ –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´
initializeEggInterceptor()
