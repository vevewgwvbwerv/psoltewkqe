-- DeepModelOriginDetective.lua
-- –î–ï–¢–ï–ö–¢–ò–í–ù–´–ô –ê–ù–ê–õ–ò–ó–ê–¢–û–†: –ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞
-- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –í–°–Æ —Ü–µ–ø–æ—á–∫—É —Å–æ–∑–¥–∞–Ω–∏—è: ReplicatedStorage ‚Üí Scripts ‚Üí Events ‚Üí Model

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local ReplicatedFirst = game:GetService("ReplicatedFirst")

local player = Players.LocalPlayer

print("üïµÔ∏è === DEEP MODEL ORIGIN DETECTIVE ===")
print("üéØ –¶–µ–ª—å: –ù–∞–π—Ç–∏ –û–¢–ö–£–î–ê –∏ –ö–ê–ö —Å–æ–∑–¥–∞–µ—Ç—Å—è –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞")
print("=" .. string.rep("=", 60))

-- üìä –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –î–ï–¢–ï–ö–¢–ò–í–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê
local CONFIG = {
    SEARCH_RADIUS = 300,
    MONITOR_DURATION = 120,
    DEEP_SCAN_INTERVAL = 0.02,
    TRACK_ALL_INSTANCES = true,
    ANALYZE_SCRIPTS = true,
    MONITOR_EVENTS = true
}

-- üîç –î–ï–¢–ï–ö–¢–ò–í–ù–´–ï –î–ê–ù–ù–´–ï
local DetectiveData = {
    -- –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –º–æ–¥–µ–ª–µ–π
    modelSources = {},
    
    -- –°–∫—Ä–∏–ø—Ç—ã –∏ —Å–æ–±—ã—Ç–∏—è
    activeScripts = {},
    detectedEvents = {},
    
    -- –¶–µ–ø–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    creationChain = {},
    
    -- –°–Ω–∏–º–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    beforeSnapshot = {},
    afterSnapshot = {},
    
    -- –í—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è
    timeline = {}
}

-- üñ•Ô∏è –î–ï–¢–ï–ö–¢–ò–í–ù–ê–Ø –ö–û–ù–°–û–õ–¨
local DetectiveConsole = nil
local ConsoleLines = {}
local MaxLines = 100

-- –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏
local function createDetectiveConsole()
    if DetectiveConsole then DetectiveConsole:Destroy() end
    
    DetectiveConsole = Instance.new("ScreenGui")
    DetectiveConsole.Name = "DeepModelOriginDetectiveConsole"
    DetectiveConsole.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 700, 0, 500)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.02, 0.02, 0.1)
    frame.BorderSizePixel = 3
    frame.BorderColor3 = Color3.new(0.8, 0.2, 0.2)
    frame.Parent = DetectiveConsole
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 35)
    title.BackgroundColor3 = Color3.new(0.8, 0.1, 0.1)
    title.BorderSizePixel = 0
    title.Text = "üïµÔ∏è DEEP MODEL ORIGIN DETECTIVE"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -45)
    scrollFrame.Position = UDim2.new(0, 5, 0, 40)
    scrollFrame.BackgroundColor3 = Color3.new(0.01, 0.01, 0.05)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 10
    scrollFrame.Parent = frame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -10, 1, 0)
    textLabel.Position = UDim2.new(0, 5, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "üïµÔ∏è –î–µ—Ç–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤..."
    textLabel.TextColor3 = Color3.new(1, 0.9, 0.9)
    textLabel.TextSize = 11
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Parent = scrollFrame
    
    return textLabel
end

-- –§—É–Ω–∫—Ü–∏—è –¥–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function detectiveLog(category, message, data)
    local timestamp = os.date("%H:%M:%S.") .. string.format("%03d", (tick() % 1) * 1000)
    local prefixes = {
        DETECTIVE = "üïµÔ∏è", SOURCE = "üì¶", SCRIPT = "üìú", EVENT = "‚ö°",
        CREATION = "üèóÔ∏è", CHAIN = "üîó", TIMELINE = "‚è±Ô∏è", CRITICAL = "üî•",
        FOUND = "üéØ", ANALYSIS = "üî¨", MYSTERY = "‚ùì", SOLVED = "‚úÖ"
    }
    
    local logLine = string.format("[%s] %s %s", timestamp, prefixes[category] or "‚ÑπÔ∏è", message)
    
    if data and next(data) then
        for key, value in pairs(data) do
            logLine = logLine .. string.format("\n    %s: %s", key, tostring(value))
        end
    end
    
    table.insert(ConsoleLines, logLine)
    
    if #ConsoleLines > MaxLines then
        table.remove(ConsoleLines, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å
    if DetectiveConsole then
        local textLabel = DetectiveConsole:FindFirstChild("Frame"):FindFirstChild("ScrollingFrame"):FindFirstChild("TextLabel")
        if textLabel then
            textLabel.Text = table.concat(ConsoleLines, "\n")
            local scrollFrame = textLabel.Parent
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, textLabel.TextBounds.Y + 10)
            scrollFrame.CanvasPosition = Vector2.new(0, scrollFrame.CanvasSize.Y.Offset)
        end
    end
    
    print(logLine)
end

-- üîç –§–ê–ó–ê 1: –ì–õ–£–ë–û–ö–û–ï –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ò–°–¢–û–ß–ù–ò–ö–û–í
local function scanAllModelSources()
    detectiveLog("DETECTIVE", "üîç –ù–ê–ß–ê–õ–û –ì–õ–£–ë–û–ö–û–ì–û –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø –ò–°–¢–û–ß–ù–ò–ö–û–í")
    
    -- –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ReplicatedStorage
    detectiveLog("SOURCE", "üì¶ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ReplicatedStorage...")
    local replicatedModels = 0
    for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("Model") or obj:IsA("Tool") then
            local name = obj.Name:lower()
            if name:find("bunny") or name:find("dog") or name:find("pet") or name:find("animal") then
                replicatedModels = replicatedModels + 1
                DetectiveData.modelSources[obj:GetFullName()] = {
                    object = obj,
                    location = "ReplicatedStorage",
                    path = obj:GetFullName(),
                    children = #obj:GetChildren(),
                    className = obj.ClassName
                }
                
                detectiveLog("FOUND", "üéØ –ù–ê–ô–î–ï–ù –ò–°–¢–û–ß–ù–ò–ö –í REPLICATEDSTORAGE!", {
                    Name = obj.Name,
                    Path = obj:GetFullName(),
                    ClassName = obj.ClassName,
                    Children = #obj:GetChildren()
                })
            end
        end
    end
    
    -- –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ReplicatedFirst
    detectiveLog("SOURCE", "üì¶ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ReplicatedFirst...")
    for _, obj in pairs(ReplicatedFirst:GetDescendants()) do
        if obj:IsA("Model") or obj:IsA("Tool") then
            local name = obj.Name:lower()
            if name:find("bunny") or name:find("dog") or name:find("pet") or name:find("animal") then
                DetectiveData.modelSources[obj:GetFullName()] = {
                    object = obj,
                    location = "ReplicatedFirst",
                    path = obj:GetFullName(),
                    children = #obj:GetChildren(),
                    className = obj.ClassName
                }
                
                detectiveLog("FOUND", "üéØ –ù–ê–ô–î–ï–ù –ò–°–¢–û–ß–ù–ò–ö –í REPLICATEDFIRST!", {
                    Name = obj.Name,
                    Path = obj:GetFullName()
                })
            end
        end
    end
    
    detectiveLog("SOURCE", string.format("üìä –ù–∞–π–¥–µ–Ω–æ %d –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤", replicatedModels))
end

-- üìú –§–ê–ó–ê 2: –ê–ù–ê–õ–ò–ó –°–ö–†–ò–ü–¢–û–í
local function analyzeActiveScripts()
    detectiveLog("SCRIPT", "üìú –ê–ù–ê–õ–ò–ó –ê–ö–¢–ò–í–ù–´–• –°–ö–†–ò–ü–¢–û–í...")
    
    -- –ü–æ–∏—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ workspace
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Script") or obj:IsA("LocalScript") then
            local scriptName = obj.Name:lower()
            if scriptName:find("pet") or scriptName:find("egg") or scriptName:find("tool") or 
               scriptName:find("model") or scriptName:find("spawn") or scriptName:find("create") then
                
                DetectiveData.activeScripts[obj:GetFullName()] = {
                    script = obj,
                    name = obj.Name,
                    path = obj:GetFullName(),
                    parent = obj.Parent and obj.Parent.Name or "NIL",
                    className = obj.ClassName
                }
                
                detectiveLog("SCRIPT", "üìú –ù–ê–ô–î–ï–ù –ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢!", {
                    Name = obj.Name,
                    Path = obj:GetFullName(),
                    Parent = obj.Parent and obj.Parent.Name or "NIL"
                })
            end
        end
    end
    
    -- –ü–æ–∏—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –≤ ReplicatedStorage
    for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("Script") or obj:IsA("LocalScript") or obj:IsA("ModuleScript") then
            local scriptName = obj.Name:lower()
            if scriptName:find("pet") or scriptName:find("egg") or scriptName:find("tool") then
                detectiveLog("SCRIPT", "üìú –°–ö–†–ò–ü–¢ –í REPLICATEDSTORAGE!", {
                    Name = obj.Name,
                    Path = obj:GetFullName(),
                    Type = obj.ClassName
                })
            end
        end
    end
end

-- ‚ö° –§–ê–ó–ê 3: –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–û–ë–´–¢–ò–ô –ò –ò–ó–ú–ï–ù–ï–ù–ò–ô
local function monitorCreationEvents()
    detectiveLog("EVENT", "‚ö° –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–û–ë–´–¢–ò–ô –°–û–ó–î–ê–ù–ò–Ø...")
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ workspace
    local workspaceConnection = Workspace.DescendantAdded:Connect(function(obj)
        if obj:IsA("Model") or obj:IsA("Tool") then
            local name = obj.Name:lower()
            if name:find("bunny") or name:find("dog") or name:find("pet") or name:find("animal") then
                local creationTime = tick()
                
                DetectiveData.creationChain[obj:GetFullName()] = {
                    object = obj,
                    createdAt = creationTime,
                    parent = obj.Parent and obj.Parent.Name or "NIL",
                    location = "Workspace"
                }
                
                detectiveLog("CREATION", "üèóÔ∏è –ù–û–í–ê–Ø –ú–û–î–ï–õ–¨ –°–û–ó–î–ê–ù–ê –í WORKSPACE!", {
                    Name = obj.Name,
                    Parent = obj.Parent and obj.Parent.Name or "NIL",
                    ClassName = obj.ClassName,
                    Time = string.format("%.3f", creationTime)
                })
                
                -- –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏
                analyzeNewModel(obj)
            end
        end
    end)
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ character
    local character = player.Character
    if character then
        local characterConnection = character.ChildAdded:Connect(function(obj)
            if obj:IsA("Tool") then
                local name = obj.Name:lower()
                if name:find("bunny") or name:find("dog") or name:find("pet") or name:find("animal") then
                    detectiveLog("CREATION", "üéÆ TOOL –î–û–ë–ê–í–õ–ï–ù –í CHARACTER!", {
                        Name = obj.Name,
                        ClassName = obj.ClassName,
                        Children = #obj:GetChildren()
                    })
                    
                    -- –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è Tool
                    analyzeToolOrigin(obj)
                end
            end
        end)
    end
    
    return workspaceConnection
end

-- üî¨ –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –ù–û–í–û–ô –ú–û–î–ï–õ–ò
local function analyzeNewModel(model)
    detectiveLog("ANALYSIS", "üî¨ –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –ù–û–í–û–ô –ú–û–î–ï–õ–ò: " .. model.Name)
    
    -- –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    local structure = {
        baseParts = 0,
        meshParts = 0,
        motor6ds = 0,
        welds = 0,
        scripts = 0,
        animators = 0,
        handles = 0
    }
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            structure.baseParts = structure.baseParts + 1
            if obj.Name == "Handle" then
                structure.handles = structure.handles + 1
            end
        elseif obj:IsA("MeshPart") then
            structure.meshParts = structure.meshParts + 1
        elseif obj:IsA("Motor6D") then
            structure.motor6ds = structure.motor6ds + 1
        elseif obj:IsA("Weld") then
            structure.welds = structure.welds + 1
        elseif obj:IsA("Script") or obj:IsA("LocalScript") then
            structure.scripts = structure.scripts + 1
            detectiveLog("SCRIPT", "üìú –°–ö–†–ò–ü–¢ –í –ú–û–î–ï–õ–ò: " .. obj.Name)
        elseif obj:IsA("Animator") then
            structure.animators = structure.animators + 1
        end
    end
    
    detectiveLog("ANALYSIS", "üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥–µ–ª–∏:", structure)
    
    -- –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –º–æ–¥–µ–ª–µ–π –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
    for sourcePath, sourceData in pairs(DetectiveData.modelSources) do
        if sourceData.object.Name == model.Name or 
           sourceData.object.Name:lower():find(model.Name:lower()) then
            detectiveLog("CHAIN", "üîó –í–û–ó–ú–û–ñ–ù–ê–Ø –°–í–Ø–ó–¨ –° –ò–°–¢–û–ß–ù–ò–ö–û–ú!", {
                Source = sourcePath,
                Model = model.Name,
                Match = "Name similarity"
            })
        end
    end
end

-- üéØ –ê–ù–ê–õ–ò–ó –ü–†–û–ò–°–•–û–ñ–î–ï–ù–ò–Ø TOOL
local function analyzeToolOrigin(tool)
    detectiveLog("ANALYSIS", "üéØ –ê–ù–ê–õ–ò–ó –ü–†–û–ò–°–•–û–ñ–î–ï–ù–ò–Ø TOOL: " .. tool.Name)
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º Handle
    local handle = tool:FindFirstChild("Handle")
    if handle then
        detectiveLog("ANALYSIS", "üéÆ Handle –Ω–∞–π–¥–µ–Ω!", {
            Position = tostring(handle.Position),
            Size = tostring(handle.Size),
            Material = tostring(handle.Material)
        })
    end
    
    -- –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    for _, child in pairs(tool:GetChildren()) do
        detectiveLog("ANALYSIS", string.format("üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ Tool: %s (%s)", child.Name, child.ClassName))
        
        if child:IsA("Model") then
            detectiveLog("ANALYSIS", "üéØ –ú–û–î–ï–õ–¨ –í–ù–£–¢–†–ò TOOL!", {
                ModelName = child.Name,
                Children = #child:GetChildren()
            })
            
            -- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
            for sourcePath, sourceData in pairs(DetectiveData.modelSources) do
                if sourceData.object.Name == child.Name then
                    detectiveLog("SOLVED", "‚úÖ –ù–ê–ô–î–ï–ù–û –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –° –ò–°–¢–û–ß–ù–ò–ö–û–ú!", {
                        ToolModel = child.Name,
                        SourcePath = sourcePath,
                        SourceLocation = sourceData.location
                    })
                end
            end
        end
    end
end

-- üìä –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–ï–¢–ï–ö–¢–ò–í–ù–û–ì–û –û–¢–ß–ï–¢–ê
local function generateDetectiveReport()
    detectiveLog("CRITICAL", "üìä === –î–ï–¢–ï–ö–¢–ò–í–ù–´–ô –û–¢–ß–ï–¢ ===")
    
    -- –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –º–æ–¥–µ–ª–µ–π
    detectiveLog("SOURCE", string.format("üì¶ –ù–∞–π–¥–µ–Ω–æ %d –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –º–æ–¥–µ–ª–µ–π:", #DetectiveData.modelSources))
    for path, data in pairs(DetectiveData.modelSources) do
        detectiveLog("SOURCE", string.format("  ‚Ä¢ %s (%s)", data.object.Name, data.location))
    end
    
    -- –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    detectiveLog("SCRIPT", string.format("üìú –ù–∞–π–¥–µ–Ω–æ %d –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤:", #DetectiveData.activeScripts))
    for path, data in pairs(DetectiveData.activeScripts) do
        detectiveLog("SCRIPT", string.format("  ‚Ä¢ %s", data.name))
    end
    
    -- –¶–µ–ø–æ—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
    detectiveLog("CREATION", string.format("üèóÔ∏è –û—Ç—Å–ª–µ–∂–µ–Ω–æ %d —Å–æ–±—ã—Ç–∏–π —Å–æ–∑–¥–∞–Ω–∏—è:", #DetectiveData.creationChain))
    for path, data in pairs(DetectiveData.creationChain) do
        detectiveLog("CREATION", string.format("  ‚Ä¢ %s –≤ %s", data.object.Name, data.location))
    end
    
    detectiveLog("CRITICAL", "üïµÔ∏è –î–ï–¢–ï–ö–¢–ò–í–ù–û–ï –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
end

-- üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–ï–¢–ï–ö–¢–ò–í–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê
local function startDetectiveInvestigation()
    detectiveLog("DETECTIVE", "üöÄ –ó–ê–ü–£–°–ö –î–ï–¢–ï–ö–¢–ò–í–ù–û–ì–û –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø")
    detectiveLog("DETECTIVE", "üéØ –¶–µ–ª—å: –ù–∞–π—Ç–∏ –û–¢–ö–£–î–ê –∏ –ö–ê–ö —Å–æ–∑–¥–∞–µ—Ç—Å—è –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞")
    
    -- –§–∞–∑–∞ 1: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    scanAllModelSources()
    
    -- –§–∞–∑–∞ 2: –ê–Ω–∞–ª–∏–∑ —Å–∫—Ä–∏–ø—Ç–æ–≤
    analyzeActiveScripts()
    
    -- –§–∞–∑–∞ 3: –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–±—ã—Ç–∏–π
    local workspaceConnection = monitorCreationEvents()
    
    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
    local startTime = tick()
    local mainConnection
    mainConnection = RunService.Heartbeat:Connect(function()
        local elapsed = tick() - startTime
        
        if elapsed > CONFIG.MONITOR_DURATION then
            detectiveLog("DETECTIVE", "‚è∞ –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
            mainConnection:Disconnect()
            if workspaceConnection then workspaceConnection:Disconnect() end
            generateDetectiveReport()
        end
    end)
    
    detectiveLog("DETECTIVE", "üïµÔ∏è –î–ï–¢–ï–ö–¢–ò–í–ù–û–ï –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û!")
    detectiveLog("DETECTIVE", "ü•ö –û–¢–ö–†–û–ô–¢–ï –Ø–ô–¶–û –î–õ–Ø –ù–ê–ß–ê–õ–ê –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–Ø!")
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createDetectiveGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "DeepModelOriginDetectiveGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 350, 0, 150)
    frame.Position = UDim2.new(1, -370, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.1, 0.05, 0.05)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundColor3 = Color3.new(0.8, 0.1, 0.1)
    title.BorderSizePixel = 0
    title.Text = "üïµÔ∏è MODEL ORIGIN DETECTIVE"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local startBtn = Instance.new("TextButton")
    startBtn.Size = UDim2.new(1, -20, 0, 50)
    startBtn.Position = UDim2.new(0, 10, 0, 50)
    startBtn.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
    startBtn.BorderSizePixel = 0
    startBtn.Text = "üöÄ –ù–ê–ß–ê–¢–¨ –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï"
    startBtn.TextColor3 = Color3.new(1, 1, 1)
    startBtn.TextScaled = true
    startBtn.Font = Enum.Font.SourceSansBold
    startBtn.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 40)
    status.Position = UDim2.new(0, 10, 0, 110)
    status.BackgroundTransparency = 1
    status.Text = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é.\n–û—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞."
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.TextWrapped = true
    status.Parent = frame
    
    startBtn.MouseButton1Click:Connect(function()
        status.Text = "üïµÔ∏è –†–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ!\n–û—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ —Å–µ–π—á–∞—Å!"
        status.TextColor3 = Color3.new(1, 0.2, 0.2)
        startBtn.Text = "‚úÖ –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û"
        startBtn.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
        startBtn.Active = false
        
        startDetectiveInvestigation()
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
local consoleTextLabel = createDetectiveConsole()
createDetectiveGUI()

detectiveLog("DETECTIVE", "‚úÖ DeepModelOriginDetective –≥–æ—Ç–æ–≤!")
detectiveLog("DETECTIVE", "üïµÔ∏è –î–µ—Ç–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")
detectiveLog("DETECTIVE", "üöÄ –ù–∞–∂–º–∏—Ç–µ '–ù–ê–ß–ê–¢–¨ –†–ê–°–°–õ–ï–î–û–í–ê–ù–ò–ï' –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ!")
