-- üî• –£–°–ò–õ–ï–ù–ù–´–ô MOTOR6D –ö–û–ù–¢–†–û–õ–õ–ï–† - –¢–û–õ–¨–ö–û IDLE –ê–ù–ò–ú–ê–¶–ò–Ø!
-- –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ–º –í–°–ï walking –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä—Å–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ idle

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üî• === –£–°–ò–õ–ï–ù–ù–´–ô MOTOR6D –ö–û–ù–¢–†–û–õ–õ–ï–† ===")
print("üéØ –¶–µ–ª—å: –¢–û–õ–¨–ö–û idle –∞–Ω–∏–º–∞—Ü–∏—è, –ù–ò–ö–ê–ö–û–ô —Ö–æ–¥—å–±—ã!")
print("üí™ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ walking –∞–Ω–∏–º–∞—Ü–∏–π!")

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position

-- üêæ –†–ê–ë–û–ß–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê –ü–ò–¢–û–ú–¶–ê
local function hasPetVisuals(model)
    local meshCount = 0
    local petMeshes = {}
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or ""
            }
            if meshData.meshId ~= "" then
                table.insert(petMeshes, meshData)
            end
        elseif obj:IsA("SpecialMesh") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or "",
                textureId = obj.TextureId or ""
            }
            if meshData.meshId ~= "" or meshData.textureId ~= "" then
                table.insert(petMeshes, meshData)
            end
        end
    end
    
    return meshCount > 0, petMeshes
end

local function findPet()
    print("üîç –ü–æ–∏—Å–∫ UUID –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤...")
    
    local foundPets = {}
    local SEARCH_RADIUS = 100
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= SEARCH_RADIUS then
                    local hasVisuals, meshes = hasPetVisuals(obj)
                    if hasVisuals then
                        table.insert(foundPets, {
                            model = obj,
                            distance = distance,
                            meshes = meshes
                        })
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                    end
                end
            end
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    table.sort(foundPets, function(a, b) return a.distance < b.distance end)
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.model.Name)
    
    return targetPet.model
end

-- üé¨ –ó–ê–ü–ò–°–¨ –¢–û–õ–¨–ö–û IDLE –ü–û–ó (–£–õ–£–ß–®–ï–ù–ù–ê–Ø)
local function recordPureIdlePoses(petModel)
    print("\nüé¨ === –ó–ê–ü–ò–°–¨ –ß–ò–°–¢–´–• IDLE –ü–û–ó ===")
    
    local motor6Ds = {}
    local idlePoses = {}
    
    -- –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Motor6D
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motor6Ds, obj)
        end
    end
    
    print("üîß –ù–∞–π–¥–µ–Ω–æ Motor6D:", #motor6Ds)
    
    if #motor6Ds == 0 then
        print("‚ùå Motor6D –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    -- –ê–ì–†–ï–°–°–ò–í–ù–û –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
        humanoid.PlatformStand = true
        print("üõë –ü–∏—Ç–æ–º–µ—Ü –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏")
    end
    
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    local originalPosition = nil
    if rootPart then
        originalPosition = rootPart.Position
        rootPart.Anchored = true
        print("‚öì RootPart –∑–∞—è–∫–æ—Ä–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏")
    end
    
    -- –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –í–°–ï walking –∞–Ω–∏–º–∞—Ü–∏–∏
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Animator") then
            local tracks = obj:GetPlayingAnimationTracks()
            for _, track in pairs(tracks) do
                local name = track.Animation.Name:lower()
                local id = track.Animation.AnimationId:lower()
                
                -- –ï—Å–ª–∏ —ç—Ç–æ –ù–ï idle - —É–Ω–∏—á—Ç–æ–∂–∞–µ–º
                if not name:find("idle") and not id:find("1073293904134356") then
                    track:Stop()
                    track:Destroy()
                    print("üíÄ –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∞ walking –∞–Ω–∏–º–∞—Ü–∏—è:", track.Animation.Name)
                end
            end
        end
    end
    
    print("üìπ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ idle...")
    wait(3)
    
    -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ idle –ø–æ–∑—ã
    print("üìπ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ idle –ø–æ–∑—ã (5 —Å–µ–∫—É–Ω–¥)...")
    
    local recordingTime = 5
    local frameRate = 60  -- –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —á–∞—Å—Ç–æ—Ç—É –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    local frameInterval = 1 / frameRate
    local totalFrames = recordingTime * frameRate
    
    local currentFrame = 0
    local startTime = tick()
    
    local recordConnection
    recordConnection = RunService.Heartbeat:Connect(function()
        local elapsed = tick() - startTime
        
        if elapsed >= frameInterval * currentFrame then
            currentFrame = currentFrame + 1
            
            -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–∑—ã –≤—Å–µ—Ö Motor6D
            local framePoses = {}
            
            for _, motor in pairs(motor6Ds) do
                framePoses[motor.Name] = {
                    C0 = motor.C0,
                    C1 = motor.C1,
                    Transform = motor.Transform
                }
            end
            
            table.insert(idlePoses, framePoses)
            
            if currentFrame % 60 == 0 then  -- –ö–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
                print(string.format("üìπ –ó–∞–ø–∏—Å–∞–Ω–æ idle –∫–∞–¥—Ä–æ–≤: %d/%d", currentFrame, totalFrames))
            end
        end
        
        if elapsed >= recordingTime then
            recordConnection:Disconnect()
            print("‚úÖ –ó–∞–ø–∏—Å—å —á–∏—Å—Ç—ã—Ö idle –ø–æ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            print(string.format("üìπ –ó–∞–ø–∏—Å–∞–Ω–æ –∫–∞–¥—Ä–æ–≤: %d", #idlePoses))
        end
    end)
    
    -- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    while #idlePoses < totalFrames and recordConnection.Connected do
        wait(0.1)
    end
    
    return idlePoses, motor6Ds, originalPosition
end

-- üî• –ê–ì–†–ï–°–°–ò–í–ù–û–ï –§–û–†–°–ò–†–û–í–ê–ù–ò–ï –¢–û–õ–¨–ö–û IDLE
local function forceOnlyIdleAnimation(idlePoses, motor6Ds, petModel, originalPosition)
    print("\nüî• === –ê–ì–†–ï–°–°–ò–í–ù–û–ï –§–û–†–°–ò–†–û–í–ê–ù–ò–ï –¢–û–õ–¨–ö–û IDLE ===")
    
    if not idlePoses or #idlePoses == 0 then
        print("‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö idle –ø–æ–∑!")
        return
    end
    
    print("üî• –ù–∞—á–∏–Ω–∞—é –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ idle –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    local rootPart = petModel:FindFirstChild("HumanoidRootPart") or petModel:FindFirstChild("Torso")
    
    local currentFrame = 1
    local frameRate = 60
    local frameInterval = 1 / frameRate
    local lastFrameTime = tick()
    
    local forceConnection
    forceConnection = RunService.Heartbeat:Connect(function()
        local now = tick()
        
        -- –ê–ì–†–ï–°–°–ò–í–ù–û –±–ª–æ–∫–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
        if humanoid then
            humanoid.WalkSpeed = 0
            humanoid.JumpPower = 0
            humanoid.PlatformStand = true
        end
        
        if rootPart and originalPosition then
            rootPart.Anchored = true
            -- –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –µ—Å–ª–∏ —Å–¥–≤–∏–Ω—É–ª—Å—è
            if (rootPart.Position - originalPosition).Magnitude > 0.1 then
                rootPart.Position = originalPosition
                print("üîÑ –ü–∏—Ç–æ–º–µ—Ü —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –æ–±—Ä–∞—Ç–Ω–æ")
            end
        end
        
        -- –ê–ì–†–ï–°–°–ò–í–ù–û —É–Ω–∏—á—Ç–æ–∂–∞–µ–º walking –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä
        for _, obj in pairs(petModel:GetDescendants()) do
            if obj:IsA("Animator") then
                local tracks = obj:GetPlayingAnimationTracks()
                for _, track in pairs(tracks) do
                    local name = track.Animation.Name:lower()
                    local id = track.Animation.AnimationId:lower()
                    
                    -- –ï—Å–ª–∏ —ç—Ç–æ –ù–ï idle - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —É–Ω–∏—á—Ç–æ–∂–∞–µ–º
                    if not name:find("idle") and not id:find("1073293904134356") then
                        track:Stop()
                        print("üíÄ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ walking –∞–Ω–∏–º–∞—Ü–∏—è:", track.Animation.Name)
                    end
                end
            end
        end
        
        -- –ü—Ä–∏–º–µ–Ω—è–µ–º idle –ø–æ–∑—ã
        if now - lastFrameTime >= frameInterval then
            lastFrameTime = now
            
            local framePoses = idlePoses[currentFrame]
            
            if framePoses then
                -- –ü—Ä–∏–º–µ–Ω—è–µ–º idle –ø–æ–∑—ã –∫–æ –≤—Å–µ–º Motor6D
                for _, motor in pairs(motor6Ds) do
                    local pose = framePoses[motor.Name]
                    if pose then
                        pcall(function()
                            motor.C0 = pose.C0
                            motor.C1 = pose.C1
                            motor.Transform = pose.Transform
                        end)
                    end
                end
            end
            
            -- –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–∞–¥—Ä—É
            currentFrame = currentFrame + 1
            if currentFrame > #idlePoses then
                currentFrame = 1  -- –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º idle
                print("üîÑ Idle –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞—Ü–∏–∫–ª–µ–Ω–∞!")
            end
        end
    end)
    
    print("‚úÖ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!")
    print("üî• –ü–∏—Ç–æ–º–µ—Ü –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –¢–û–õ–¨–ö–û idle –∞–Ω–∏–º–∞—Ü–∏–∏!")
    print("üíÄ –í–°–ï walking –∞–Ω–∏–º–∞—Ü–∏–∏ —É–Ω–∏—á—Ç–æ–∂–∞—é—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä!")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 300 —Å–µ–∫—É–Ω–¥ (5 –º–∏–Ω—É—Ç)
    spawn(function()
        wait(300)
        forceConnection:Disconnect()
        print("\n‚èπÔ∏è –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —Ñ–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
    end)
    
    return forceConnection
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local petModel = findPet()
    if not petModel then
        return
    end
    
    print("\nüé¨ === –ó–ê–ü–ò–°–¨ –ß–ò–°–¢–´–• IDLE –ü–û–ó ===")
    print("üí° –ü–∏—Ç–æ–º–µ—Ü –±—É–¥–µ—Ç –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏!")
    print("üìπ –ó–∞–ø–∏—Å—å –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
    
    wait(3)
    
    local idlePoses, motor6Ds, originalPosition = recordPureIdlePoses(petModel)
    
    if idlePoses and #idlePoses > 0 then
        print("‚úÖ –ß–∏—Å—Ç—ã–µ idle –ø–æ–∑—ã –∑–∞–ø–∏—Å–∞–Ω—ã!")
        
        wait(2)
        
        print("\nüî• === –ê–ì–†–ï–°–°–ò–í–ù–û–ï –§–û–†–°–ò–†–û–í–ê–ù–ò–ï ===")
        local connection = forceOnlyIdleAnimation(idlePoses, motor6Ds, petModel, originalPosition)
        
        if connection then
            print("üéâ –£–°–ü–ï–•! –ü–∏—Ç–æ–º–µ—Ü —Ç–µ–ø–µ—Ä—å –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù –≤ idle –∞–Ω–∏–º–∞—Ü–∏–∏!")
            print("üî• –í–°–ï walking –∞–Ω–∏–º–∞—Ü–∏–∏ —É–Ω–∏—á—Ç–æ–∂–∞—é—Ç—Å—è!")
            print("üîÑ –¢–æ–ª—å–∫–æ idle –∞–Ω–∏–º–∞—Ü–∏—è –∏–≥—Ä–∞–µ—Ç –≤ —Ü–∏–∫–ª–µ!")
        end
    else
        print("‚ùå –ó–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å")
    end
end

-- üöÄ –ü–†–Ø–ú–û–ô –ó–ê–ü–£–°–ö
print("\nüöÄ === –ó–ê–ü–£–°–ö–ê–Æ –ê–ì–†–ï–°–°–ò–í–ù–´–ô IDLE –§–û–†–°–ï–† ===")
print("üî• –¢–û–õ–¨–ö–û idle –∞–Ω–∏–º–∞—Ü–∏—è! –ù–ò–ö–ê–ö–û–ô —Ö–æ–¥—å–±—ã!")
print("üíÄ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ walking –∞–Ω–∏–º–∞—Ü–∏–π!")

spawn(function()
    wait(2)
    main()
end)

print("\nüí° === –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø ===")
print("üõë 1. –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∏—Ç–æ–º—Ü–∞")
print("üíÄ 2. –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –í–°–ï walking –∞–Ω–∏–º–∞—Ü–∏–∏")
print("üìπ 3. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¢–û–õ–¨–ö–û —á–∏—Å—Ç—ã–µ idle –ø–æ–∑—ã")
print("üî• 4. –§–æ—Ä—Å–∏—Ä—É–µ–º idle –ø–æ–∑—ã –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä")
print("üíÄ 5. –ë–ª–æ–∫–∏—Ä—É–µ–º walking –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä")
print("‚öì 6. –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏")
print("üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç: –¢–û–õ–¨–ö–û idle –∞–Ω–∏–º–∞—Ü–∏—è, –ù–ò–ö–û–ì–î–ê —Ö–æ–¥—å–±–∞!")
print("\nüöÄ –ê–ì–†–ï–°–°–ò–í–ù–´–ô –ö–û–ù–¢–†–û–õ–¨ –ó–ê–ü–£–©–ï–ù!")
