-- üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø –ü–ò–¢–û–ú–¶–ï–í
-- –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–æ–¥–µ–ª–µ–π –≤ Workspace

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer

print("üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø –ü–ò–¢–û–ú–¶–ï–í ===")
print("=" .. string.rep("=", 60))

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position
print("üìç –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞:", playerPos)

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
local SEARCH_RADIUS = 50
local petPartNames = {"Tail", "Mouth", "Jaw", "LeftEye", "RightEye", "LeftEar", "RightEar", "ColourSpot", "PetMover", "Head", "Body", "Ear", "Eye"}

print("üéØ –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞:", SEARCH_RADIUS)
print("üîç –ò—â–µ–º —á–∞—Å—Ç–∏:", table.concat(petPartNames, ", "))
print()

-- –≠—Ç–∞–ø 1: –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ Workspace
print("üìä –≠–¢–ê–ü 1: –ê–ù–ê–õ–ò–ó –í–°–ï–• –û–ë–™–ï–ö–¢–û–í –í WORKSPACE")
print("-" .. string.rep("-", 50))

local totalObjects = 0
local modelsFound = 0
local partsFound = 0
local nearbyObjects = 0

for _, obj in ipairs(Workspace:GetDescendants()) do
    totalObjects = totalObjects + 1
    
    if obj:IsA("Model") then
        modelsFound = modelsFound + 1
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–µ–ª–µ–π
        local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
        if success then
            local distance = (modelCFrame.Position - playerPos).Magnitude
            if distance <= SEARCH_RADIUS then
                nearbyObjects = nearbyObjects + 1
                print("  üì¶ –ú–æ–¥–µ–ª—å —Ä—è–¥–æ–º:", obj.Name, "| –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:", math.floor(distance))
                
                -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–∞—Å—Ç–∏ –º–æ–¥–µ–ª–∏
                local modelParts = {}
                for _, child in ipairs(obj:GetChildren()) do
                    if child:IsA("BasePart") then
                        table.insert(modelParts, child.Name .. " (T:" .. math.floor(child.Transparency * 100) .. "%)")
                    end
                end
                
                if #modelParts > 0 then
                    print("    üß© –ß–∞—Å—Ç–∏:", table.concat(modelParts, ", "))
                end
            end
        end
    elseif obj:IsA("BasePart") then
        partsFound = partsFound + 1
        
        local distance = (obj.Position - playerPos).Magnitude
        if distance <= SEARCH_RADIUS then
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —á–∞—Å—Ç—å—é –ø–∏—Ç–æ–º—Ü–∞
            for _, petPartName in ipairs(petPartNames) do
                if obj.Name == petPartName or obj.Name:find(petPartName) then
                    print("  üéØ –ù–ê–ô–î–ï–ù–ê –ß–ê–°–¢–¨ –ü–ò–¢–û–ú–¶–ê:", obj.Name, "| –†–æ–¥–∏—Ç–µ–ª—å:", obj.Parent and obj.Parent.Name or "–ù–ï–¢", "| –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:", math.floor(distance))
                    break
                end
            end
        end
    end
end

print()
print("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê WORKSPACE:")
print("  üìä –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤:", totalObjects)
print("  üì¶ –ú–æ–¥–µ–ª–µ–π:", modelsFound)
print("  üß© –ß–∞—Å—Ç–µ–π:", partsFound)
print("  üìç –û–±—ä–µ–∫—Ç–æ–≤ —Ä—è–¥–æ–º:", nearbyObjects)
print()

-- –≠—Ç–∞–ø 2: –ü–æ–∏—Å–∫ –º–æ–¥–µ–ª–µ–π —Å UUID –∏–º–µ–Ω–∞–º–∏
print("üìä –≠–¢–ê–ü 2: –ü–û–ò–°–ö –ú–û–î–ï–õ–ï–ô –° UUID –ò–ú–ï–ù–ê–ú–ò")
print("-" .. string.rep("-", 50))

local uuidModels = {}

for _, obj in ipairs(Workspace:GetChildren()) do
    if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
        local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
        if success then
            local distance = (modelCFrame.Position - playerPos).Magnitude
            if distance <= SEARCH_RADIUS then
                table.insert(uuidModels, {
                    model = obj,
                    name = obj.Name,
                    distance = distance
                })
                
                print("  üÜî UUID –ú–æ–¥–µ–ª—å:", obj.Name, "| –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:", math.floor(distance))
                
                -- –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —á–∞—Å—Ç–µ–π
                local petParts = {}
                local visibleParts = 0
                local totalParts = 0
                
                for _, child in ipairs(obj:GetChildren()) do
                    if child:IsA("BasePart") then
                        totalParts = totalParts + 1
                        if child.Transparency < 1 then
                            visibleParts = visibleParts + 1
                        end
                        
                        for _, petPartName in ipairs(petPartNames) do
                            if child.Name == petPartName or child.Name:find(petPartName) then
                                table.insert(petParts, child.Name)
                                break
                            end
                        end
                    end
                end
                
                print("    üìä –ß–∞—Å—Ç–µ–π –≤—Å–µ–≥–æ:", totalParts, "| –í–∏–¥–∏–º—ã—Ö:", visibleParts, "| –ß–∞—Å—Ç–µ–π –ø–∏—Ç–æ–º—Ü–∞:", #petParts)
                if #petParts > 0 then
                    print("    üêæ –ß–∞—Å—Ç–∏ –ø–∏—Ç–æ–º—Ü–∞:", table.concat(petParts, ", "))
                end
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º PrimaryPart
                if obj.PrimaryPart then
                    print("    ‚úÖ PrimaryPart:", obj.PrimaryPart.Name)
                else
                    print("    ‚ùå PrimaryPart –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                end
            end
        end
    end
end

print()
print("üìà –ù–ê–ô–î–ï–ù–û UUID –ú–û–î–ï–õ–ï–ô:", #uuidModels)
print()

-- –≠—Ç–∞–ø 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–∏—Ç–æ–º—Ü–µ–≤
print("üìä –≠–¢–ê–ü 3: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–û–ì–ò–ö–ò –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –ü–ò–¢–û–ú–¶–ï–í")
print("-" .. string.rep("-", 50))

for i, modelInfo in ipairs(uuidModels) do
    local obj = modelInfo.model
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å #" .. i .. ":", obj.Name)
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ
    local hasPetParts = false
    local petPartNames_check = {"Tail", "Mouth", "Jaw", "Eye", "Ear", "Body", "Head", "PetMover"}
    local visibleParts = 0
    
    for _, child in ipairs(obj:GetChildren()) do
        if child:IsA("BasePart") then
            if child.Transparency < 1 then
                visibleParts = visibleParts + 1
            end
            
            for _, petPartName in ipairs(petPartNames_check) do
                if child.Name:find(petPartName) then
                    hasPetParts = true
                    print("    ‚úÖ –ù–∞–π–¥–µ–Ω–∞ —á–∞—Å—Ç—å –ø–∏—Ç–æ–º—Ü–∞:", child.Name, "| –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:", child.Transparency)
                    break
                end
            end
        end
    end
    
    print("    üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: hasPetParts =", hasPetParts, "| visibleParts =", visibleParts)
    
    if hasPetParts and visibleParts >= 5 then
        print("    ‚úÖ –ú–û–î–ï–õ–¨ –ü–†–û–®–õ–ê –ü–†–û–í–ï–†–ö–£ - —ç—Ç–æ –ø–∏—Ç–æ–º–µ—Ü!")
    else
        print("    ‚ùå –ú–æ–¥–µ–ª—å –ù–ï –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É")
        if not hasPetParts then
            print("      - –ù–µ –Ω–∞–π–¥–µ–Ω—ã —á–∞—Å—Ç–∏ –ø–∏—Ç–æ–º—Ü–∞")
        end
        if visibleParts < 5 then
            print("      - –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∏–¥–∏–º—ã—Ö —á–∞—Å—Ç–µ–π (" .. visibleParts .. " < 5)")
        end
    end
    print()
end

-- –≠—Ç–∞–ø 4: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
print("-" .. string.rep("-", 30))

if #uuidModels == 0 then
    print("‚ùå UUID –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("  1. –ù–∞—Ö–æ–¥–∏—Ç–µ—Å—å –ª–∏ –≤—ã —Ä—è–¥–æ–º —Å –ø–∏—Ç–æ–º—Ü–∞–º–∏?")
    print("  2. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞?")
    print("  3. –î–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –ª–∏ —Ä–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞?")
elseif #uuidModels > 0 then
    print("‚úÖ UUID –º–æ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω–æ–π")
    print("  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —á–∞—Å—Ç–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤")
    print("  2. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è")
    print("  3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ visibleParts")
end

print()
print("üéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
print("=" .. string.rep("=", 60))
