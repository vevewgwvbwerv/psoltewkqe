-- üî¨ –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ò–¢–û–ú–¶–ê - –ü–û–ù–ò–ú–ê–ï–ú –ö–ê–ö –û–ù –†–ê–ë–û–¢–ê–ï–¢
-- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –í–°–ï: Motor6D, Animator, Humanoid, –∞–Ω–∏–º–∞—Ü–∏–∏, —Å–æ—Å—Ç–æ—è–Ω–∏—è

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üî¨ === –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ò–¢–û–ú–¶–ê ===")
print("üéØ –¶–µ–ª—å: –ü–û–ù–Ø–¢–¨ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç idle –∞–Ω–∏–º–∞—Ü–∏—è")

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞
local function findPet()
    print("üîç –ò—â—É –ø–∏—Ç–æ–º—Ü–∞ —Ä—è–¥–æ–º —Å –∏–≥—Ä–æ–∫–æ–º...")
    
    for _, obj in pairs(Workspace:GetChildren()) do
        if obj:IsA("Model") and obj ~= playerChar then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= 50 then
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –º–æ–¥–µ–ª–∏ —á–∞—Å—Ç–∏ —Ç–µ–ª–∞ –ø–∏—Ç–æ–º—Ü–∞
                    local hasBodyParts = false
                    for _, child in pairs(obj:GetChildren()) do
                        if child:IsA("BasePart") and (child.Name:lower():find("body") or 
                           child.Name:lower():find("torso") or child.Name:lower():find("head") or
                           child.Name:lower():find("root")) then
                            hasBodyParts = true
                            break
                        end
                    end
                    
                    if hasBodyParts then
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                        return obj
                    end
                end
            end
        end
    end
    
    print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø–∏—Ç–æ–º—Ü–∞
local function deepAnalyzePet(petModel)
    print("\nüî¨ === –ì–õ–£–ë–û–ö–ò–ô –ê–ù–ê–õ–ò–ó –ü–ò–¢–û–ú–¶–ê ===")
    print("üìã –ú–æ–¥–µ–ª—å:", petModel.Name)
    
    -- 1. –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –ú–û–î–ï–õ–ò
    print("\nüìÅ === –°–¢–†–£–ö–¢–£–†–ê –ú–û–î–ï–õ–ò ===")
    local allChildren = petModel:GetChildren()
    print("üë• –í—Å–µ–≥–æ –¥–µ—Ç–µ–π:", #allChildren)
    
    for i, child in pairs(allChildren) do
        print(string.format("  %d. %s (%s)", i, child.Name, child.ClassName))
        
        -- –ï—Å–ª–∏ —ç—Ç–æ BasePart, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if child:IsA("BasePart") then
            print(string.format("     üìê Size: %s", tostring(child.Size)))
            print(string.format("     üìç Position: %s", tostring(child.Position)))
            print(string.format("     ‚öì Anchored: %s", tostring(child.Anchored)))
            print(string.format("     ‚ö° Velocity: %s", tostring(child.Velocity)))
        end
    end
    
    -- 2. –ü–û–ò–°–ö –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
    print("\nüß© === –ü–û–ò–°–ö –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ===")
    
    local humanoid = petModel:FindFirstChildOfClass("Humanoid")
    local animator = petModel:FindFirstChildOfClass("Animator")
    local rootPart = petModel:FindFirstChild("RootPart") or petModel:FindFirstChild("Torso") or petModel:FindFirstChild("HumanoidRootPart")
    
    print("ü§ñ Humanoid:", humanoid and "‚úÖ –ù–ê–ô–î–ï–ù" or "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")
    print("üé≠ Animator:", animator and "‚úÖ –ù–ê–ô–î–ï–ù" or "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")
    print("üéØ RootPart:", rootPart and "‚úÖ –ù–ê–ô–î–ï–ù (" .. rootPart.Name .. ")" or "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")
    
    -- 3. –ê–ù–ê–õ–ò–ó MOTOR6D
    print("\n‚öôÔ∏è === –ê–ù–ê–õ–ò–ó MOTOR6D ===")
    local motors = {}
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Motor6D") then
            table.insert(motors, obj)
        end
    end
    
    print("‚öôÔ∏è –ù–∞–π–¥–µ–Ω–æ Motor6D:", #motors)
    for i, motor in pairs(motors) do
        print(string.format("  %d. %s", i, motor.Name))
        print(string.format("     üîó Part0: %s", motor.Part0 and motor.Part0.Name or "nil"))
        print(string.format("     üîó Part1: %s", motor.Part1 and motor.Part1.Name or "nil"))
        print(string.format("     üìê C0: %s", tostring(motor.C0)))
        print(string.format("     üìê C1: %s", tostring(motor.C1)))
        print(string.format("     üîÑ Transform: %s", tostring(motor.Transform)))
    end
    
    return {
        humanoid = humanoid,
        animator = animator,
        rootPart = rootPart,
        motors = motors
    }
end

-- –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
local function startRealTimeMonitoring(petData)
    print("\nüìä === –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò ===")
    print("‚è±Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã")
    print("üéØ –°–ª–µ–¥–∏–º –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–∏—Ç–æ–º—Ü–∞...")
    
    local lastPosition = petData.rootPart and petData.rootPart.Position or Vector3.new(0, 0, 0)
    local isMoving = false
    local standingTime = 0
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
        if petData.rootPart and petData.rootPart.Parent then
            local currentPos = petData.rootPart.Position
            local distance = (currentPos - lastPosition).Magnitude
            
            if distance > 0.1 then
                if not isMoving then
                    print("\nüèÉ === –ü–ò–¢–û–ú–ï–¶ –ù–ê–ß–ê–õ –î–í–ò–ì–ê–¢–¨–°–Ø ===")
                    isMoving = true
                    standingTime = 0
                end
            else
                if isMoving then
                    print("\nüõë === –ü–ò–¢–û–ú–ï–¶ –û–°–¢–ê–ù–û–í–ò–õ–°–Ø ===")
                    isMoving = false
                    standingTime = 0
                else
                    standingTime = standingTime + 1
                end
            end
            
            lastPosition = currentPos
        end
        
        -- –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ö–ê–ñ–î–´–ï 30 –ö–ê–î–†–û–í (–ø—Ä–∏–º–µ—Ä–Ω–æ 0.5 —Å–µ–∫)
        if tick() % 0.5 < 0.02 then
            
            print(string.format("\nüìä === –°–û–°–¢–û–Ø–ù–ò–ï (%.1f —Å–µ–∫) ===", tick()))
            print("üèÉ –î–≤–∏–∂–µ—Ç—Å—è:", isMoving and "–î–ê" or "–ù–ï–¢")
            print("‚è∞ –°—Ç–æ–∏—Ç —É–∂–µ:", standingTime, "–∫–∞–¥—Ä–æ–≤")
            
            -- –ê–Ω–∞–ª–∏–∑ Humanoid
            if petData.humanoid and petData.humanoid.Parent then
                print("ü§ñ === HUMANOID ===")
                print("  üèÉ WalkSpeed:", petData.humanoid.WalkSpeed)
                print("  ü¶ò JumpPower:", petData.humanoid.JumpPower or "nil")
                print("  ü¶ò JumpHeight:", petData.humanoid.JumpHeight or "nil")
                print("  üõë PlatformStand:", petData.humanoid.PlatformStand or "nil")
                print("  üí∫ Sit:", petData.humanoid.Sit or "nil")
                print("  üéØ State:", petData.humanoid:GetState().Name)
                print("  ‚ù§Ô∏è Health:", petData.humanoid.Health)
            else
                print("‚ùå HUMANOID –ü–†–û–ü–ê–õ!")
            end
            
            -- –ê–Ω–∞–ª–∏–∑ Animator
            if petData.animator and petData.animator.Parent then
                print("üé≠ === ANIMATOR ===")
                local tracks = petData.animator:GetPlayingAnimationTracks()
                print("  üìΩÔ∏è –ò–≥—Ä–∞—é—â–∏—Ö –∞–Ω–∏–º–∞—Ü–∏–π:", #tracks)
                
                for i, track in pairs(tracks) do
                    print(string.format("    %d. %s", i, track.Animation.Name))
                    print(string.format("       üÜî ID: %s", track.Animation.AnimationId))
                    print(string.format("       ‚ñ∂Ô∏è Playing: %s", track.IsPlaying))
                    print(string.format("       üîÑ Looped: %s", track.Looped))
                    print(string.format("       ‚ö° Priority: %s", track.Priority.Name))
                    print(string.format("       ‚è±Ô∏è Time: %.2f", track.TimePosition))
                    print(string.format("       üìè Length: %.2f", track.Length or 0))
                    print(string.format("       üîä Weight: %.2f", track.WeightCurrent))
                end
            else
                print("‚ùå ANIMATOR –ü–†–û–ü–ê–õ!")
            end
            
            -- –ê–Ω–∞–ª–∏–∑ –ø–æ–∑–∏—Ü–∏–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
            if petData.rootPart and petData.rootPart.Parent then
                print("üìç === –ü–û–ó–ò–¶–ò–Ø –ò –î–í–ò–ñ–ï–ù–ò–ï ===")
                print("  üìç Position:", petData.rootPart.Position)
                print("  ‚ö° Velocity:", petData.rootPart.Velocity)
                print("  üåÄ AngularVelocity:", petData.rootPart.AngularVelocity)
            end
            
            -- –û–°–û–ë–û–ï –í–ù–ò–ú–ê–ù–ò–ï –ö–û–ì–î–ê –ü–ò–¢–û–ú–ï–¶ –°–¢–û–ò–¢ –î–û–õ–ì–û
            if not isMoving and standingTime > 60 then -- –°—Ç–æ–∏—Ç –±–æ–ª—å—à–µ 1 —Å–µ–∫—É–Ω–¥—ã
                print("\nüéØ === –ü–ò–¢–û–ú–ï–¶ –î–û–õ–ì–û –°–¢–û–ò–¢ - –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó ===")
                
                -- –ê–Ω–∞–ª–∏–∑ Motor6D –≤ –º–æ–º–µ–Ω—Ç —Å—Ç–æ—è–Ω–∏—è
                print("‚öôÔ∏è === MOTOR6D –í –ú–û–ú–ï–ù–¢ –°–¢–û–Ø–ù–ò–Ø ===")
                for i, motor in pairs(petData.motors) do
                    if motor.Parent then
                        print(string.format("  %s:", motor.Name))
                        print(string.format("    üîÑ Transform: %s", tostring(motor.Transform)))
                        print(string.format("    üìê C0: %s", tostring(motor.C0)))
                        print(string.format("    üìê C1: %s", tostring(motor.C1)))
                    end
                end
            end
        end
    end)
    
    print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω! –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –≤—ã–≤–æ–¥–æ–º...")
    return connection
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local petModel = findPet()
    if not petModel then
        return
    end
    
    local petData = deepAnalyzePet(petModel)
    
    print("\nüéÆ === –ù–ê–ß–ò–ù–ê–ï–ú –ú–û–ù–ò–¢–û–†–ò–ù–ì ===")
    print("üí° –ü–æ–¥–æ–π–¥–∏—Ç–µ –∫ –ø–∏—Ç–æ–º—Ü—É –∏ –Ω–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –≤—ã–≤–æ–¥–æ–º")
    print("üéØ –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –º–æ–º–µ–Ω—Ç—ã –∫–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –°–¢–û–ò–¢")
    
    local connection = startRealTimeMonitoring(petData)
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥
    spawn(function()
        wait(60)
        connection:Disconnect()
        print("\n‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ 60 —Å–µ–∫—É–Ω–¥")
    end)
end

-- üöÄ –ü–†–Ø–ú–û–ô –ó–ê–ü–£–°–ö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò
print("\nüöÄ === –ó–ê–ü–£–°–ö–ê–Æ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£ –°–†–ê–ó–£ ===")
print("üí° –ü–æ–¥–æ–π–¥–∏—Ç–µ –∫ –ø–∏—Ç–æ–º—Ü—É –∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å!")
print("üî¨ –ê–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –∏–¥—Ç–∏ 60 —Å–µ–∫—É–Ω–¥...")

-- –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å—Ä–∞–∑—É
spawn(function()
    wait(2) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    main()
end)

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
local function createGUI()
    print("üñ•Ô∏è –°–æ–∑–¥–∞—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π GUI...")
    
    local playerGui = player.PlayerGui
    if not playerGui then
        print("‚ùå PlayerGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI
    local oldGui = playerGui:FindFirstChild("PetDiagnosticGUI")
    if oldGui then
        oldGui:Destroy()
        print("üóëÔ∏è –£–¥–∞–ª–∏–ª —Å—Ç–∞—Ä—ã–π GUI")
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetDiagnosticGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 300, 0, 100)
    frame.Position = UDim2.new(0, 50, 0, 200)
    frame.BackgroundColor3 = Color3.fromRGB(50, 0, 50)
    frame.BorderSizePixel = 3
    frame.BorderColor3 = Color3.fromRGB(255, 0, 255)
    frame.Parent = screenGui
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "üî¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–ò–¢–û–ú–¶–ê"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 16
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local button = Instance.new("TextButton")
    button.Name = "DiagnosticButton"
    button.Size = UDim2.new(0, 280, 0, 50)
    button.Position = UDim2.new(0, 10, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
    button.BorderSizePixel = 0
    button.Text = "üî¨ –ó–ê–ü–£–°–¢–ò–¢–¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 18
    button.Font = Enum.Font.SourceSansBold
    button.Parent = frame
    
    button.MouseButton1Click:Connect(function()
        print("\nüî¨ === –ö–ù–û–ü–ö–ê –ù–ê–ñ–ê–¢–ê! –ó–ê–ü–£–°–ö–ê–Æ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£ ===\n")
        button.Text = "üî¨ –ê–ù–ê–õ–ò–ó–ò–†–£–Æ..."
        button.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        spawn(function()
            main()
            
            wait(5)
            button.Text = "üî¨ –ó–ê–ü–£–°–¢–ò–¢–¨ –î–ò–ê–ì–ù–û–°–¢–ò–ö–£"
            button.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
        end)
    end)
    
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π GUI —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("üìç –ü–æ–∑–∏—Ü–∏—è GUI: –ª–µ–≤—ã–π –≤–µ—Ä—Ö —ç–∫—Ä–∞–Ω–∞")
    print("üéØ –ò—â–∏—Ç–µ –§–ò–û–õ–ï–¢–û–í–£–Æ –∫–Ω–æ–ø–∫—É!")
end

-- –°–æ–∑–¥–∞–µ–º GUI
createGUI()

print("\nüí° === –ò–ù–°–¢–†–£–ö–¶–ò–ò ===\n")
print("üéØ 1. –ò—â–∏—Ç–µ –§–ò–û–õ–ï–¢–û–í–£–Æ –∫–Ω–æ–ø–∫—É –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É")
print("üî¨ 2. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
print("üìä 3. –°–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
print("üêæ 4. –ü–æ–¥–æ–π–¥–∏—Ç–µ –∫ –ø–∏—Ç–æ–º—Ü—É –≤–æ –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞")
print("‚è∞ 5. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª–∏—Ç—Å—è 60 —Å–µ–∫—É–Ω–¥")
print("\nüöÄ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –£–ñ–ï –ó–ê–ü–£–©–ï–ù–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò!")
