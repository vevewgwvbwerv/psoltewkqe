-- DragonflyTransfer.lua
-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–Ω–æ—Å Dragonfly –∏–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local player = Players.LocalPlayer

-- –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DragonflyTransfer"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0.8, 0, 0.4, 0)
mainFrame.Position = UDim2.new(0.1, 0, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0.2, 0)
titleLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
titleLabel.BorderSizePixel = 0
titleLabel.Text = "üêâ Dragonfly Transfer System"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.Parent = mainFrame

-- –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞
local transferButton = Instance.new("TextButton")
transferButton.Size = UDim2.new(0.8, 0, 0.3, 0)
transferButton.Position = UDim2.new(0.1, 0, 0.3, 0)
transferButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
transferButton.BorderSizePixel = 0
transferButton.Text = "üîÑ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ Dragonfly –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"
transferButton.TextColor3 = Color3.fromRGB(255, 255, 255)
transferButton.TextScaled = true
transferButton.Font = Enum.Font.SourceSansBold
transferButton.Parent = mainFrame

-- –°—Ç–∞—Ç—É—Å –ª–µ–π–±–ª
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0.5, 0)
statusLabel.Position = UDim2.new(0, 0, 0.5, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "–ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–Ω–æ—Å—É Dragonfly\n–ò–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π (—Å–ª–æ—Ç 1 –∏–ª–∏ 2)"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.SourceSans
statusLabel.TextWrapped = true
statusLabel.Parent = mainFrame

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è (Hotbar)
local function findMainInventory()
    local playerGui = player:FindFirstChild("PlayerGui")
    if not playerGui then 
        print("‚ùå PlayerGui –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return nil 
    end
    
    local backpackGui = playerGui:FindFirstChild("BackpackGui")
    if not backpackGui then 
        print("‚ùå BackpackGui –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return nil 
    end
    
    print("üì± BackpackGui –Ω–∞–π–¥–µ–Ω, –∏—â—É Hotbar...")
    
    -- –ò—â–µ–º Hotbar –≤ BackpackGui
    local hotbar = backpackGui:FindFirstChild("Hotbar")
    if hotbar then
        print("‚úÖ –ù–∞–π–¥–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å (Hotbar)")
        return hotbar
    end
    
    -- –ï—Å–ª–∏ Hotbar –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—â–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
    print("üîç Hotbar –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—â—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã...")
    for _, child in pairs(backpackGui:GetChildren()) do
        if child:IsA("Frame") or child:IsA("ScrollingFrame") then
            print("   üìã –ü—Ä–æ–≤–µ—Ä—è—é:", child.Name, "(" .. child.ClassName .. ")")
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            local childCount = 0
            local hasNumberedSlots = false
            
            for _, grandChild in pairs(child:GetChildren()) do
                if grandChild:IsA("GuiObject") and grandChild.Visible then
                    childCount = childCount + 1
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–æ—Ç—ã —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ (1, 2, 3...)
                    if grandChild:IsA("TextButton") and tonumber(grandChild.Name) then
                        hasNumberedSlots = true
                    end
                end
            end
            
            print("      üéØ –≠–ª–µ–º–µ–Ω—Ç–æ–≤:", childCount, "| –ß–∏—Å–ª–æ–≤—ã–µ —Å–ª–æ—Ç—ã:", hasNumberedSlots)
            
            -- –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –æ–∫–æ–ª–æ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ò –µ—Å—Ç—å —á–∏—Å–ª–æ–≤—ã–µ —Å–ª–æ—Ç—ã, —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
            if childCount >= 8 and childCount <= 12 and hasNumberedSlots then
                print("‚úÖ –ù–∞–π–¥–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:", child.Name, "—Å", childCount, "—ç–ª–µ–º–µ–Ω—Ç–∞–º–∏")
                return child
            end
            
            -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ, –µ—Å–ª–∏ –∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç "hotbar" –∏–ª–∏ "backpack"
            if child.Name:lower():find("hotbar") or child.Name:lower():find("backpack") then
                if childCount >= 5 then -- –ú–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
                    print("‚úÖ –ù–∞–π–¥–µ–Ω –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ –∏–º–µ–Ω–∏:", child.Name, "—Å", childCount, "—ç–ª–µ–º–µ–Ω—Ç–∞–º–∏")
                    return child
                end
            end
        end
    end
    
    print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Å Dragonfly
local function findDragonflyInExtended()
    local playerGui = player:FindFirstChild("PlayerGui")
    if not playerGui then 
        print("‚ùå PlayerGui –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ Dragonfly")
        return nil 
    end
    
    local backpackGui = playerGui:FindFirstChild("BackpackGui")
    if not backpackGui then 
        print("‚ùå BackpackGui –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ Dragonfly")
        return nil 
    end
    
    print("üîç –ò—â—É Dragonfly –≤ BackpackGui...")
    
    -- –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç "23" —Å Dragonfly (–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞)
    local foundButtons = {}
    for _, desc in pairs(backpackGui:GetDescendants()) do
        if desc:IsA("TextButton") then
            table.insert(foundButtons, desc.Name)
            
            if desc.Name == "23" then
                print("   üéØ –ù–∞–π–¥–µ–Ω TextButton '23', –ø—Ä–æ–≤–µ—Ä—è—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ...")
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ Dragonfly
                for _, child in pairs(desc:GetDescendants()) do
                    if child:IsA("TextLabel") then
                        print("      üìù TextLabel:", child.Text)
                        if child.Text:lower():find("dragonfly") then
                            print("‚úÖ –ù–∞–π–¥–µ–Ω Dragonfly –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ:", child.Text)
                            return desc
                        end
                    end
                end
            end
        end
    end
    
    print("‚ùå Dragonfly –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
    print("üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ TextButton'—ã:", table.concat(foundButtons, ", "))
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
    print("üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É 'dragonfly'...")
    for _, desc in pairs(backpackGui:GetDescendants()) do
        if desc:IsA("TextLabel") and desc.Text:lower():find("dragonfly") then
            print("   üêâ –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç Dragonfly:", desc.Text, "–≤", desc.Parent.Name, "(" .. desc.Parent.ClassName .. ")")
            if desc.Parent:IsA("TextButton") then
                print("‚úÖ –†–æ–¥–∏—Ç–µ–ª—å - TextButton, –≤–æ–∑–≤—Ä–∞—â–∞—é –µ–≥–æ")
                return desc.Parent
            end
        end
    end
    
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
local function findEmptySlotInMain(mainInventory)
    if not mainInventory then 
        print("‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω")
        return nil 
    end
    
    print("üîç –ò—â—É –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã –≤:", mainInventory.Name)
    
    -- –ò—â–µ–º —Å–ª–æ—Ç—ã 1 –∏ 2 (–≥–¥–µ Shovel –∏ Egg)
    local foundSlots = {}
    for _, child in pairs(mainInventory:GetChildren()) do
        if child:IsA("TextButton") then
            table.insert(foundSlots, child.Name)
            
            if child.Name == "1" or child.Name == "2" then
                print("‚úÖ –ù–∞–π–¥–µ–Ω —Å–ª–æ—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã:", child.Name)
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ—Ç–∞
                for _, desc in pairs(child:GetDescendants()) do
                    if desc:IsA("TextLabel") and desc.Text ~= "" then
                        print("   üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ—Ç–∞:", desc.Text)
                        break
                    end
                end
                
                return child
            end
        end
    end
    
    print("‚ùå –°–ª–æ—Ç—ã 1 –∏ 2 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    print("üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã:", table.concat(foundSlots, ", "))
    
    -- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ - –ª—é–±–æ–π —Å–ª–æ—Ç —Å –Ω–µ-–ø–∏—Ç–æ–º—Ü–µ–º
    print("üîç –ò—â—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ª–æ—Ç—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏...")
    for _, child in pairs(mainInventory:GetChildren()) do
        if child:IsA("TextButton") then
            local hasPet = false
            local itemText = ""
            
            for _, desc in pairs(child:GetDescendants()) do
                if desc:IsA("TextLabel") and desc.Text ~= "" then
                    itemText = desc.Text
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ø–∏—Ç–æ–º–µ—Ü –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç
                    if desc.Text:lower():find("kg") and desc.Text:lower():find("age") then
                        hasPet = true
                    end
                    break
                end
            end
            
            -- –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–∏—Ç–æ–º–µ—Ü, –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å
            if not hasPet and itemText ~= "" then
                print("‚úÖ –ù–∞–π–¥–µ–Ω —Å–ª–æ—Ç —Å –ø—Ä–µ–¥–º–µ—Ç–æ–º –¥–ª—è –∑–∞–º–µ–Ω—ã:", child.Name, "(" .. itemText .. ")")
                return child
            end
        end
    end
    
    print("‚ùå –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Å–ª–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è —Å–∏–º—É–ª—è—Ü–∏–∏ drag-and-drop
local function simulateDragAndDrop(source, target)
    if not source or not target then return false end
    
    print("üñ±Ô∏è –°–∏–º—É–ª–∏—Ä—É—é drag-and-drop:")
    print("   üì§ –ò—Å—Ç–æ—á–Ω–∏–∫:", source.Name, "–≤", source.Parent.Name)
    print("   üì• –¶–µ–ª—å:", target.Name, "–≤", target.Parent.Name)
    
    -- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    local sourcePos = source.AbsolutePosition
    local sourceSize = source.AbsoluteSize
    local targetPos = target.AbsolutePosition
    local targetSize = target.AbsoluteSize
    
    -- –í—ã—á–∏—Å–ª—è–µ–º —Ü–µ–Ω—Ç—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    local sourceCenterX = sourcePos.X + sourceSize.X / 2
    local sourceCenterY = sourcePos.Y + sourceSize.Y / 2
    local targetCenterX = targetPos.X + targetSize.X / 2
    local targetCenterY = targetPos.Y + targetSize.Y / 2
    
    print("   üìç –ò—Å—Ç–æ—á–Ω–∏–∫ —Ü–µ–Ω—Ç—Ä:", sourceCenterX, sourceCenterY)
    print("   üìç –¶–µ–ª—å —Ü–µ–Ω—Ç—Ä:", targetCenterX, targetCenterY)
    
    -- –°–∏–º—É–ª–∏—Ä—É–µ–º drag-and-drop
    local success, error = pcall(function()
        -- –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ
        VirtualInputManager:SendMouseButtonEvent(sourceCenterX, sourceCenterY, 0, true, game, 1)
        wait(0.1)
        
        -- –ü–µ—Ä–µ–º–µ—â–∞–µ–º –∫ —Ü–µ–ª–∏
        VirtualInputManager:SendMouseMoveEvent(targetCenterX, targetCenterY, game)
        wait(0.2)
        
        -- –û—Ç–ø—É—Å–∫–∞–µ–º
        VirtualInputManager:SendMouseButtonEvent(targetCenterX, targetCenterY, 0, false, game, 1)
        wait(0.1)
    end)
    
    if success then
        print("‚úÖ Drag-and-drop —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return true
    else
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏ drag-and-drop:", error)
        return false
    end
end

-- –§—É–Ω–∫—Ü–∏—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ —á–µ—Ä–µ–∑ –∫–ª–∏–∫–∏
local function alternativeTransferMethod(dragonflyButton, targetSlot)
    print("üéØ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ –∫–ª–∏–∫–∏...")
    
    -- –ú–µ—Ç–æ–¥ 1: –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ Dragonfly
    local success1, error1 = pcall(function()
        local pos = dragonflyButton.AbsolutePosition
        local size = dragonflyButton.AbsoluteSize
        local centerX = pos.X + size.X / 2
        local centerY = pos.Y + size.Y / 2
        
        -- –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫
        VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 1)
        VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 1)
        wait(0.1)
        VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, true, game, 1)
        VirtualInputManager:SendMouseButtonEvent(centerX, centerY, 0, false, game, 1)
    end)
    
    if success1 then
        print("‚úÖ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ Dragonfly –≤—ã–ø–æ–ª–Ω–µ–Ω")
        return true
    end
    
    -- –ú–µ—Ç–æ–¥ 2: –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ + –ª–µ–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —Ü–µ–ª—å
    local success2, error2 = pcall(function()
        local sourcePos = dragonflyButton.AbsolutePosition
        local sourceSize = dragonflyButton.AbsoluteSize
        local sourceCenterX = sourcePos.X + sourceSize.X / 2
        local sourceCenterY = sourcePos.Y + sourceSize.Y / 2
        
        -- –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫
        VirtualInputManager:SendMouseButtonEvent(sourceCenterX, sourceCenterY, 1, true, game, 1)
        VirtualInputManager:SendMouseButtonEvent(sourceCenterX, sourceCenterY, 1, false, game, 1)
        wait(0.2)
        
        -- –õ–µ–≤—ã–π –∫–ª–∏–∫ –Ω–∞ —Ü–µ–ª—å
        local targetPos = targetSlot.AbsolutePosition
        local targetSize = targetSlot.AbsoluteSize
        local targetCenterX = targetPos.X + targetSize.X / 2
        local targetCenterY = targetPos.Y + targetSize.Y / 2
        
        VirtualInputManager:SendMouseButtonEvent(targetCenterX, targetCenterY, 0, true, game, 1)
        VirtualInputManager:SendMouseButtonEvent(targetCenterX, targetCenterY, 0, false, game, 1)
    end)
    
    if success2 then
        print("‚úÖ –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ + –ª–µ–≤—ã–π –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω")
        return true
    end
    
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–Ω–æ—Å–∞
local function checkTransferSuccess()
    wait(1)
    
    local hotbar = findMainInventory()
    if not hotbar then return false end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç—ã 1 –∏ 2 –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Dragonfly
    for _, child in pairs(hotbar:GetChildren()) do
        if child:IsA("TextButton") and (child.Name == "1" or child.Name == "2") then
            for _, desc in pairs(child:GetDescendants()) do
                if desc:IsA("TextLabel") and desc.Text:lower():find("dragonfly") then
                    print("üéâ Dragonfly —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ —Å–ª–æ—Ç:", child.Name)
                    return true
                end
            end
        end
    end
    
    return false
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–Ω–æ—Å–∞
local function transferDragonfly()
    statusLabel.Text = "üîç –ü–æ–∏—Å–∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–π..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
    
    -- –®–∞–≥ 1: –ù–∞–π—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    local hotbar = findMainInventory()
    if not hotbar then
        statusLabel.Text = "‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–µ –Ω–∞–π–¥–µ–Ω"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        return
    end
    
    -- –®–∞–≥ 2: –ù–∞–π—Ç–∏ Dragonfly –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    statusLabel.Text = "üêâ –ü–æ–∏—Å–∫ Dragonfly..."
    local dragonflyButton = findDragonflyInExtended()
    if not dragonflyButton then
        statusLabel.Text = "‚ùå Dragonfly –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        return
    end
    
    -- –®–∞–≥ 3: –ù–∞–π—Ç–∏ –ø—É—Å—Ç–æ–π —Å–ª–æ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
    statusLabel.Text = "üì¶ –ü–æ–∏—Å–∫ –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ—Ç–∞..."
    local emptySlot = findEmptySlotInMain(hotbar)
    if not emptySlot then
        statusLabel.Text = "‚ùå –ü—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        return
    end
    
    -- –®–∞–≥ 4: –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ–Ω–æ—Å
    statusLabel.Text = "üîÑ –ü–µ—Ä–µ–Ω–æ—à—É Dragonfly..."
    
    -- –ü—Ä–æ–±—É–µ–º drag-and-drop
    local dragSuccess = simulateDragAndDrop(dragonflyButton, emptySlot)
    
    if not dragSuccess then
        -- –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        statusLabel.Text = "üéØ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã..."
        alternativeTransferMethod(dragonflyButton, emptySlot)
    end
    
    -- –®–∞–≥ 5: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    statusLabel.Text = "‚úÖ –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."
    
    if checkTransferSuccess() then
        statusLabel.Text = "üéâ Dragonfly —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!\n–¢–µ–ø–µ—Ä—å –µ–≥–æ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤ —Ä—É–∫—É."
        statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    else
        statusLabel.Text = "‚ùå –ü–µ—Ä–µ–Ω–æ—Å –Ω–µ —É–¥–∞–ª—Å—è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ Dragonfly –≤—Ä—É—á–Ω—É—é"
        statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    end
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
transferButton.MouseButton1Click:Connect(function()
    transferButton.Text = "‚è≥ –ü–µ—Ä–µ–Ω–æ—à—É..."
    transferButton.BackgroundColor3 = Color3.fromRGB(150, 150, 0)
    
    spawn(function()
        transferDragonfly()
        
        wait(2)
        transferButton.Text = "üîÑ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ Dragonfly –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"
        transferButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    end)
end)

print("‚úÖ DragonflyTransfer –∑–∞–≥—Ä—É–∂–µ–Ω! –ü–µ—Ä–µ–Ω–µ—Å–µ—Ç Dragonfly –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å.")
