-- RealTimeCreationTracker.lua
-- –¢–†–ï–ö–ï–† –†–ï–ê–õ–¨–ù–û–ì–û –°–û–ó–î–ê–ù–ò–Ø: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –ò–ú–ï–ù–ù–û –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞
-- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç debug hooks –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Instance.new/Clone –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("‚ö° === REAL TIME CREATION TRACKER ===")
print("üéØ –¶–µ–ª—å: –û—Ç—Å–ª–µ–¥–∏—Ç—å –†–ï–ê–õ–¨–ù–´–ô –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞")
print("=" .. string.rep("=", 60))

-- üìä –î–ê–ù–ù–´–ï –¢–†–ï–ö–ï–†–ê
local TrackerData = {
    targetModel = nil,
    creationEvents = {},
    scriptCalls = {},
    instanceCreations = {},
    isTracking = false,
    startTime = nil
}

-- üñ•Ô∏è –ë–û–õ–¨–®–ê–Ø –ö–û–ù–°–û–õ–¨
local TrackerConsole = nil
local ConsoleLines = {}
local MaxLines = 200

-- –°–æ–∑–¥–∞–Ω–∏–µ –±–æ–ª—å—à–æ–π –∫–æ–Ω—Å–æ–ª–∏
local function createTrackerConsole()
    if TrackerConsole then TrackerConsole:Destroy() end
    
    TrackerConsole = Instance.new("ScreenGui")
    TrackerConsole.Name = "RealTimeCreationTrackerConsole"
    TrackerConsole.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 900, 0, 700)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.02, 0.1, 0.02)
    frame.BorderSizePixel = 3
    frame.BorderColor3 = Color3.new(0.2, 1, 0.2)
    frame.Parent = TrackerConsole
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 35)
    title.BackgroundColor3 = Color3.new(0.2, 1, 0.2)
    title.BorderSizePixel = 0
    title.Text = "‚ö° REAL TIME CREATION TRACKER"
    title.TextColor3 = Color3.new(0, 0, 0)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -45)
    scrollFrame.Position = UDim2.new(0, 5, 0, 40)
    scrollFrame.BackgroundColor3 = Color3.new(0.01, 0.05, 0.01)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 15
    scrollFrame.Parent = frame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -10, 1, 0)
    textLabel.Position = UDim2.new(0, 5, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "‚ö° –¢—Ä–µ–∫–µ—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤..."
    textLabel.TextColor3 = Color3.new(0.9, 1, 0.9)
    textLabel.TextSize = 10
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Parent = scrollFrame
    
    return textLabel
end

-- –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function realtimeLog(category, message, data)
    local timestamp = os.date("%H:%M:%S.") .. string.format("%03d", (tick() % 1) * 1000)
    local relativeTime = TrackerData.startTime and string.format("+%.3f", tick() - TrackerData.startTime) or "0.000"
    
    local prefixes = {
        TRACKER = "‚ö°", CREATION = "üèóÔ∏è", SCRIPT = "üìú", INSTANCE = "üîß",
        FOUND = "üéØ", CRITICAL = "üî•", SUCCESS = "‚úÖ", ERROR = "‚ùå", 
        DEBUG = "üêõ", CALL = "üìû", CLONE = "üë•"
    }
    
    local logLine = string.format("[%s] (%s) %s %s", timestamp, relativeTime, prefixes[category] or "‚ÑπÔ∏è", message)
    
    if data and next(data) then
        for key, value in pairs(data) do
            logLine = logLine .. string.format("\n      %s: %s", key, tostring(value))
        end
    end
    
    table.insert(ConsoleLines, logLine)
    
    if #ConsoleLines > MaxLines then
        table.remove(ConsoleLines, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å
    if TrackerConsole then
        local textLabel = TrackerConsole:FindFirstChild("Frame"):FindFirstChild("ScrollingFrame"):FindFirstChild("TextLabel")
        if textLabel then
            textLabel.Text = table.concat(ConsoleLines, "\n")
            local scrollFrame = textLabel.Parent
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, textLabel.TextBounds.Y + 10)
            scrollFrame.CanvasPosition = Vector2.new(0, scrollFrame.CanvasSize.Y.Offset)
        end
    end
    
    print(logLine)
end

-- üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–û–ó–î–ê–ù–ò–Ø INSTANCE
local function monitorInstanceCreation()
    realtimeLog("TRACKER", "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ–∑–¥–∞–Ω–∏—è Instance...")
    
    -- –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    local originalInstance = Instance
    local instanceMetatable = getmetatable(Instance)
    
    if instanceMetatable then
        local originalNew = instanceMetatable.__call or Instance.new
        
        instanceMetatable.__call = function(self, className, parent)
            local obj = originalNew(self, className, parent)
            
            if className == "Model" then
                realtimeLog("INSTANCE", "üîß –°–û–ó–î–ê–ù –ù–û–í–´–ô MODEL!", {
                    ClassName = className,
                    Parent = parent and parent.Name or "NIL",
                    Name = obj.Name or "UNNAMED"
                })
                
                TrackerData.instanceCreations[obj] = {
                    time = tick(),
                    className = className,
                    parent = parent,
                    stackTrace = debug.traceback()
                }
            end
            
            return obj
        end
    end
end

-- üë• –ú–û–ù–ò–¢–û–†–ò–ù–ì –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–Ø
local function monitorCloning()
    realtimeLog("TRACKER", "üë• –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω—ã
    local function hookClone(obj)
        if obj and obj.Clone then
            local originalClone = obj.Clone
            obj.Clone = function(self)
                local clone = originalClone(self)
                
                if self:IsA("Model") then
                    realtimeLog("CLONE", "üë• –ú–û–î–ï–õ–¨ –ö–õ–û–ù–ò–†–û–í–ê–ù–ê!", {
                        Original = self.Name,
                        Clone = clone.Name,
                        OriginalParent = self.Parent and self.Parent.Name or "NIL",
                        CloneParent = clone.Parent and clone.Parent.Name or "NIL"
                    })
                    
                    TrackerData.instanceCreations[clone] = {
                        time = tick(),
                        method = "Clone",
                        original = self,
                        stackTrace = debug.traceback()
                    }
                end
                
                return clone
            end
        end
    end
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º hook –∫–æ –≤—Å–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –æ–±—ä–µ–∫—Ç–∞–º
    for _, obj in pairs(game:GetDescendants()) do
        if obj:IsA("Model") then
            hookClone(obj)
        end
    end
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º hook –∫ –Ω–æ–≤—ã–º –æ–±—ä–µ–∫—Ç–∞–º
    game.DescendantAdded:Connect(function(obj)
        if obj:IsA("Model") then
            hookClone(obj)
        end
    end)
end

-- üìú –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ö–†–ò–ü–¢–û–í
local function monitorScriptActivity()
    realtimeLog("SCRIPT", "üìú –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤...")
    
    -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –≤ workspace
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Script") or obj:IsA("LocalScript") then
            realtimeLog("SCRIPT", "üìú –ù–∞–π–¥–µ–Ω —Å–∫—Ä–∏–ø—Ç: " .. obj.Name, {
                Path = obj:GetFullName(),
                Parent = obj.Parent and obj.Parent.Name or "NIL"
            })
        end
    end
end

-- üéØ –¢–û–ß–ù–û–ï –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–ò–¢–û–ú–¶–ê
local function trackPetCreation()
    realtimeLog("FOUND", "üéØ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞...")
    
    local petConnection = Workspace.DescendantAdded:Connect(function(obj)
        if obj:IsA("Model") then
            local name = obj.Name:lower()
            if name == "dog" or name == "bunny" or name == "golden lab" or 
               name == "cat" or name == "rabbit" or name == "puppy" then
                
                TrackerData.targetModel = obj
                
                realtimeLog("CRITICAL", "üî• –ü–ò–¢–û–ú–ï–¶ –°–û–ó–î–ê–ù –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò!", {
                    Name = obj.Name,
                    Parent = obj.Parent and obj.Parent.Name or "NIL",
                    Time = string.format("%.3f", tick()),
                    RelativeTime = TrackerData.startTime and string.format("%.3f —Å–µ–∫", tick() - TrackerData.startTime) or "0"
                })
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
                if TrackerData.instanceCreations[obj] then
                    local creationInfo = TrackerData.instanceCreations[obj]
                    realtimeLog("SUCCESS", "‚úÖ –ù–ê–ô–î–ï–ù–ê –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–û–ó–î–ê–ù–ò–ò!", {
                        Method = creationInfo.method or "Instance.new",
                        CreationTime = string.format("%.3f", creationInfo.time),
                        OriginalObject = creationInfo.original and creationInfo.original.Name or "NIL"
                    })
                    
                    if creationInfo.stackTrace then
                        realtimeLog("DEBUG", "üêõ STACK TRACE –°–û–ó–î–ê–ù–ò–Ø:")
                        local lines = string.split(creationInfo.stackTrace, "\n")
                        for i, line in ipairs(lines) do
                            if i <= 10 then -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫
                                realtimeLog("DEBUG", "  " .. line)
                            end
                        end
                    end
                else
                    realtimeLog("ERROR", "‚ùå –ù–ï–¢ –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –°–û–ó–î–ê–ù–ò–ò –≠–¢–û–ì–û –û–ë–™–ï–ö–¢–ê")
                end
                
                -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è
                local parent = obj.Parent
                if parent then
                    realtimeLog("FOUND", "üéØ –ê–ù–ê–õ–ò–ó –†–û–î–ò–¢–ï–õ–Ø: " .. parent.Name, {
                        ClassName = parent.ClassName,
                        Path = parent:GetFullName(),
                        Children = #parent:GetChildren()
                    })
                end
                
                -- –û—Ç–∫–ª—é—á–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
                petConnection:Disconnect()
                realtimeLog("TRACKER", "‚ö° –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
            end
        end
    end)
    
    return petConnection
end

-- üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –¢–†–ï–ö–ò–ù–ì–ê
local function startRealTimeTracking()
    realtimeLog("TRACKER", "üöÄ –ó–ê–ü–£–°–ö –¢–†–ï–ö–ò–ù–ì–ê –†–ï–ê–õ–¨–ù–û–ì–û –í–†–ï–ú–ï–ù–ò")
    realtimeLog("TRACKER", "‚ö° –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –†–ï–ê–õ–¨–ù–û–ì–û —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞")
    
    TrackerData.isTracking = true
    TrackerData.startTime = tick()
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –º–æ–Ω–∏—Ç–æ—Ä—ã
    monitorInstanceCreation()
    monitorCloning()
    monitorScriptActivity()
    local petConnection = trackPetCreation()
    
    realtimeLog("TRACKER", "‚úÖ –í—Å–µ –º–æ–Ω–∏—Ç–æ—Ä—ã –∞–∫—Ç–∏–≤–Ω—ã!")
    realtimeLog("TRACKER", "ü•ö –û–¢–ö–†–û–ô–¢–ï –Ø–ô–¶–û –ü–†–Ø–ú–û –°–ï–ô–ß–ê–°!")
    
    -- –ê–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    spawn(function()
        wait(120)
        if petConnection then
            petConnection:Disconnect()
        end
        TrackerData.isTracking = false
        realtimeLog("TRACKER", "‚è∞ –¢—Ä–µ–∫–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
    end)
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createTrackerGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "RealTimeCreationTrackerGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 350, 0, 120)
    frame.Position = UDim2.new(1, -370, 0, 400)
    frame.BackgroundColor3 = Color3.new(0.02, 0.1, 0.02)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.new(0.2, 1, 0.2)
    title.BorderSizePixel = 0
    title.Text = "‚ö° REALTIME TRACKER"
    title.TextColor3 = Color3.new(0, 0, 0)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local startBtn = Instance.new("TextButton")
    startBtn.Size = UDim2.new(1, -20, 0, 40)
    startBtn.Position = UDim2.new(0, 10, 0, 40)
    startBtn.BackgroundColor3 = Color3.new(0.2, 1, 0.2)
    startBtn.BorderSizePixel = 0
    startBtn.Text = "‚ö° –†–ï–ê–õ–¨–ù–´–ô –¢–†–ï–ö–ò–ù–ì"
    startBtn.TextColor3 = Color3.new(0, 0, 0)
    startBtn.TextScaled = true
    startBtn.Font = Enum.Font.SourceSansBold
    startBtn.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 30)
    status.Position = UDim2.new(0, 10, 0, 90)
    status.BackgroundTransparency = 1
    status.Text = "–ì–æ—Ç–æ–≤ –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É —Ç—Ä–µ–∫–∏–Ω–≥—É"
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.Parent = frame
    
    startBtn.MouseButton1Click:Connect(function()
        status.Text = "‚ö° –¢—Ä–µ–∫–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω!"
        status.TextColor3 = Color3.new(0.2, 1, 0.2)
        startBtn.Text = "‚úÖ –¢–†–ï–ö–ò–ù–ì –ê–ö–¢–ò–í–ï–ù"
        startBtn.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
        startBtn.Active = false
        
        startRealTimeTracking()
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
local consoleTextLabel = createTrackerConsole()
createTrackerGUI()

realtimeLog("TRACKER", "‚úÖ RealTimeCreationTracker –≥–æ—Ç–æ–≤!")
realtimeLog("TRACKER", "‚ö° –¢—Ä–µ–∫–∏–Ω–≥ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞")
realtimeLog("TRACKER", "üéØ –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç Instance.new, Clone –∏ stack trace")
realtimeLog("TRACKER", "üöÄ –ù–∞–∂–º–∏—Ç–µ '–†–ï–ê–õ–¨–ù–´–ô –¢–†–ï–ö–ò–ù–ì' –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ!")
