-- üî¨ EGG ANIMATION SOURCE TRACKER
-- –ò—Å—Å–ª–µ–¥—É–µ—Ç –û–¢–ö–£–î–ê –∏ –ö–ê–ö –∏–≥—Ä–∞ —Å–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞
-- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è, —Å–∫—Ä–∏–ø—Ç—ã, –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤–æ –≤—Ä–µ–º—è –≤–∑—Ä—ã–≤–∞ —è–π—Ü–∞

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- üìä –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
local CONFIG = {
    SEARCH_RADIUS = 300,
    MONITOR_DURATION = 45,
    DEEP_SCAN_INTERVAL = 0.1
}

-- üñ•Ô∏è –°–ò–°–¢–ï–ú–ê –û–¢–î–ï–õ–¨–ù–û–ô –ö–û–ù–°–û–õ–ò
local ConsoleGUI = nil
local ConsoleFrame = nil
local ConsoleScrollFrame = nil
local ConsoleTextLabel = nil
local ConsoleLines = {}
local MaxConsoleLines = 100

-- üìã –°–û–°–¢–û–Ø–ù–ò–ï –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–Ø
local TrackingState = {
    isActive = false,
    eggExplodeDetected = false,
    startTime = 0,
    beforeSnapshot = {},
    afterSnapshot = {},
    detectedEvents = {},
    foundScripts = {},
    animationSources = {}
}

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–æ–Ω—Å–æ–ª–∏
local function createResearchConsole()
    if ConsoleGUI then
        ConsoleGUI:Destroy()
    end
    
    ConsoleGUI = Instance.new("ScreenGui")
    ConsoleGUI.Name = "EggAnimationSourceTrackerConsole"
    ConsoleGUI.Parent = player:WaitForChild("PlayerGui")
    
    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º –∫–æ–Ω—Å–æ–ª–∏
    ConsoleFrame = Instance.new("Frame")
    ConsoleFrame.Size = UDim2.new(0, 700, 0, 500)
    ConsoleFrame.Position = UDim2.new(0.5, -350, 0.5, -250)
    ConsoleFrame.BackgroundColor3 = Color3.fromRGB(8, 8, 12)
    ConsoleFrame.BorderSizePixel = 2
    ConsoleFrame.BorderColor3 = Color3.fromRGB(255, 100, 0)
    ConsoleFrame.Parent = ConsoleGUI
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = ConsoleFrame
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 40)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "üî¨ EGG ANIMATION SOURCE TRACKER - –ò–°–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–°–ö–ê–Ø –ö–û–ù–°–û–õ–¨"
    titleLabel.TextColor3 = Color3.fromRGB(255, 150, 50)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = ConsoleFrame
    
    -- –ü–∞–Ω–µ–ª—å –∫–Ω–æ–ø–æ–∫
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Size = UDim2.new(1, 0, 0, 40)
    buttonFrame.Position = UDim2.new(0, 0, 0, 45)
    buttonFrame.BackgroundTransparency = 1
    buttonFrame.Parent = ConsoleFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
    local startButton = Instance.new("TextButton")
    startButton.Size = UDim2.new(0, 150, 0, 30)
    startButton.Position = UDim2.new(0, 10, 0, 5)
    startButton.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
    startButton.Text = "üöÄ –ù–ê–ß–ê–¢–¨ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï"
    startButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    startButton.TextScaled = true
    startButton.Font = Enum.Font.SourceSansBold
    startButton.Parent = buttonFrame
    
    local startCorner = Instance.new("UICorner")
    startCorner.CornerRadius = UDim.new(0, 5)
    startCorner.Parent = startButton
    
    -- –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
    local clearButton = Instance.new("TextButton")
    clearButton.Size = UDim2.new(0, 100, 0, 30)
    clearButton.Position = UDim2.new(0, 170, 0, 5)
    clearButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    clearButton.Text = "üóëÔ∏è –û–ß–ò–°–¢–ò–¢–¨"
    clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    clearButton.TextScaled = true
    clearButton.Font = Enum.Font.SourceSansBold
    clearButton.Parent = buttonFrame
    
    local clearCorner = Instance.new("UICorner")
    clearCorner.CornerRadius = UDim.new(0, 5)
    clearCorner.Parent = clearButton
    
    -- –ö–Ω–æ–ø–∫–∞ —Å–≤–æ–¥–∫–∏
    local summaryButton = Instance.new("TextButton")
    summaryButton.Size = UDim2.new(0, 120, 0, 30)
    summaryButton.Position = UDim2.new(0, 280, 0, 5)
    summaryButton.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
    summaryButton.Text = "üìä –°–í–û–î–ö–ê"
    summaryButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    summaryButton.TextScaled = true
    summaryButton.Font = Enum.Font.SourceSansBold
    summaryButton.Parent = buttonFrame
    
    local summaryCorner = Instance.new("UICorner")
    summaryCorner.CornerRadius = UDim.new(0, 5)
    summaryCorner.Parent = summaryButton
    
    -- –°–∫—Ä–æ–ª–ª —Ñ—Ä–µ–π–º –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    ConsoleScrollFrame = Instance.new("ScrollingFrame")
    ConsoleScrollFrame.Size = UDim2.new(1, -20, 1, -100)
    ConsoleScrollFrame.Position = UDim2.new(0, 10, 0, 90)
    ConsoleScrollFrame.BackgroundColor3 = Color3.fromRGB(3, 3, 8)
    ConsoleScrollFrame.BorderSizePixel = 1
    ConsoleScrollFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
    ConsoleScrollFrame.ScrollBarThickness = 12
    ConsoleScrollFrame.Parent = ConsoleFrame
    
    local scrollCorner = Instance.new("UICorner")
    scrollCorner.CornerRadius = UDim.new(0, 5)
    scrollCorner.Parent = ConsoleScrollFrame
    
    -- –¢–µ–∫—Å—Ç–æ–≤–∞—è –º–µ—Ç–∫–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    ConsoleTextLabel = Instance.new("TextLabel")
    ConsoleTextLabel.Size = UDim2.new(1, -10, 1, 0)
    ConsoleTextLabel.Position = UDim2.new(0, 5, 0, 0)
    ConsoleTextLabel.BackgroundTransparency = 1
    ConsoleTextLabel.Text = "üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è –∫–æ–Ω—Å–æ–ª—å –≥–æ—Ç–æ–≤–∞.\\nüìã –ù–∞–∂–º–∏—Ç–µ '–ù–ê–ß–ê–¢–¨ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï' –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏."
    ConsoleTextLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
    ConsoleTextLabel.TextSize = 11
    ConsoleTextLabel.Font = Enum.Font.SourceSans
    ConsoleTextLabel.TextXAlignment = Enum.TextXAlignment.Left
    ConsoleTextLabel.TextYAlignment = Enum.TextYAlignment.Top
    ConsoleTextLabel.TextWrapped = true
    ConsoleTextLabel.Parent = ConsoleScrollFrame
    
    return startButton, clearButton, summaryButton
end

-- –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
local function addResearchLog(level, message, data)
    local timestamp = os.date("%H:%M:%S.") .. string.format("%03d", (tick() % 1) * 1000)
    local prefixes = {
        RESEARCH = "üî¨", EVENT = "‚ö°", SCRIPT = "üìú", ANIMATION = "üé¨",
        CREATION = "‚öôÔ∏è", SOURCE = "üéØ", DISCOVERY = "üí°", WARNING = "‚ö†Ô∏è"
    }
    
    local logLine = string.format("[%s] %s %s", timestamp, prefixes[level] or "‚ÑπÔ∏è", message)
    
    if data and next(data) then
        for key, value in pairs(data) do
            logLine = logLine .. string.format("\\n    %s: %s", key, tostring(value))
        end
    end
    
    table.insert(ConsoleLines, logLine)
    
    -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
    if #ConsoleLines > MaxConsoleLines then
        table.remove(ConsoleLines, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å–æ–ª–∏
    if ConsoleTextLabel then
        ConsoleTextLabel.Text = table.concat(ConsoleLines, "\\n")
        
        -- –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑
        spawn(function()
            wait(0.1)
            ConsoleScrollFrame.CanvasPosition = Vector2.new(0, ConsoleTextLabel.TextBounds.Y)
        end)
    end
end

-- üîç –§–£–ù–ö–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –°–ù–ò–ú–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø
local function createStateSnapshot(name)
    local snapshot = {
        name = name,
        timestamp = tick(),
        workspace = {},
        replicatedStorage = {},
        scripts = {},
        events = {}
    }
    
    -- –°–Ω–∏–º–æ–∫ Workspace
    for _, obj in pairs(Workspace:GetChildren()) do
        if obj:IsA("Model") or obj:IsA("Folder") then
            snapshot.workspace[obj.Name] = {
                className = obj.ClassName,
                childCount = #obj:GetChildren()
            }
        end
    end
    
    -- –°–Ω–∏–º–æ–∫ ReplicatedStorage
    for _, obj in pairs(ReplicatedStorage:GetChildren()) do
        snapshot.replicatedStorage[obj.Name] = {
            className = obj.ClassName,
            childCount = #obj:GetChildren()
        }
    end
    
    -- –ü–æ–∏—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Script") or obj:IsA("LocalScript") or obj:IsA("ModuleScript") then
            table.insert(snapshot.scripts, {
                name = obj.Name,
                className = obj.ClassName,
                parent = obj.Parent and obj.Parent.Name or "nil"
            })
        end
    end
    
    return snapshot
end

-- üìä –§–£–ù–ö–¶–ò–Ø –°–†–ê–í–ù–ï–ù–ò–Ø –°–ù–ò–ú–ö–û–í
local function compareSnapshots(before, after)
    local differences = {
        newWorkspaceObjects = {},
        newReplicatedObjects = {},
        newScripts = {},
        modifiedObjects = {}
    }
    
    -- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ Workspace
    for name, data in pairs(after.workspace) do
        if not before.workspace[name] then
            table.insert(differences.newWorkspaceObjects, {name = name, data = data})
        elseif before.workspace[name].childCount ~= data.childCount then
            table.insert(differences.modifiedObjects, {name = name, location = "Workspace", data = data})
        end
    end
    
    -- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ ReplicatedStorage
    for name, data in pairs(after.replicatedStorage) do
        if not before.replicatedStorage[name] then
            table.insert(differences.newReplicatedObjects, {name = name, data = data})
        end
    end
    
    -- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
    for _, script in pairs(after.scripts) do
        local found = false
        for _, beforeScript in pairs(before.scripts) do
            if beforeScript.name == script.name and beforeScript.parent == script.parent then
                found = true
                break
            end
        end
        if not found then
            table.insert(differences.newScripts, script)
        end
    end
    
    return differences
end

-- üé¨ –§–£–ù–ö–¶–ò–Ø –ê–ù–ê–õ–ò–ó–ê –ê–ù–ò–ú–ê–¶–ò–ò
local function analyzeAnimationSources(model)
    local animationData = {
        animators = {},
        animationTracks = {},
        motor6ds = {},
        tweens = {},
        scripts = {}
    }
    
    -- –ü–æ–∏—Å–∫ Animator –∏ AnimationTrack
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("Animator") then
            table.insert(animationData.animators, {
                name = obj.Name,
                parent = obj.Parent and obj.Parent.Name or "nil"
            })
            
            -- –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
            local tracks = obj:GetPlayingAnimationTracks()
            for _, track in pairs(tracks) do
                table.insert(animationData.animationTracks, {
                    animationId = track.Animation and track.Animation.AnimationId or "Unknown",
                    isPlaying = track.IsPlaying,
                    speed = track.Speed,
                    weight = track.Weight
                })
            end
        elseif obj:IsA("Motor6D") then
            table.insert(animationData.motor6ds, {
                name = obj.Name,
                c0 = tostring(obj.C0),
                c1 = tostring(obj.C1),
                part0 = obj.Part0 and obj.Part0.Name or "nil",
                part1 = obj.Part1 and obj.Part1.Name or "nil"
            })
        elseif obj:IsA("Script") or obj:IsA("LocalScript") then
            table.insert(animationData.scripts, {
                name = obj.Name,
                className = obj.ClassName,
                parent = obj.Parent and obj.Parent.Name or "nil"
            })
        end
    end
    
    return animationData
end

-- üîç –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê EGGEXPLODE
local function checkForEggExplode()
    -- –ò—â–µ–º –≤ ReplicatedStorage
    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
        if obj.Name == "EggExplode" and obj:IsA("Model") then
            return true, obj, "ReplicatedStorage"
        end
    end
    
    -- –ò—â–µ–º –≤ Workspace
    for _, obj in ipairs(Workspace:GetDescendants()) do
        if obj.Name == "EggExplode" and obj:IsA("Model") then
            return true, obj, "Workspace"
        end
    end
    
    return false, nil, nil
end

-- üöÄ –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø
local function startDeepResearch()
    addResearchLog("RESEARCH", "üöÄ –ó–ê–ü–£–°–ö –ì–õ–£–ë–û–ö–û–ì–û –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø –ò–°–¢–û–ß–ù–ò–ö–û–í –ê–ù–ò–ú–ê–¶–ò–ò")
    addResearchLog("RESEARCH", "üéØ –¶–µ–ª—å: –ù–∞–π—Ç–∏ –ö–ê–ö –∏ –û–¢–ö–£–î–ê —Å–æ–∑–¥–∞–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å")
    
    TrackingState.isActive = true
    TrackingState.startTime = tick()
    
    -- –°–æ–∑–¥–∞–µ–º —Å–Ω–∏–º–æ–∫ –î–û –≤–∑—Ä—ã–≤–∞ —è–π—Ü–∞
    addResearchLog("RESEARCH", "üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–Ω–∏–º–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –î–û –≤–∑—Ä—ã–≤–∞ —è–π—Ü–∞...")
    TrackingState.beforeSnapshot = createStateSnapshot("BEFORE_EGG_EXPLODE")
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not TrackingState.isActive then
            connection:Disconnect()
            return
        end
        
        local elapsed = tick() - TrackingState.startTime
        
        -- –§–∞–∑–∞ 1: –û–∂–∏–¥–∞–Ω–∏–µ EggExplode
        if not TrackingState.eggExplodeDetected then
            local found, eggObj, location = checkForEggExplode()
            if found then
                TrackingState.eggExplodeDetected = true
                
                addResearchLog("EVENT", "‚ö° EGGEXPLODE –û–ë–ù–ê–†–£–ñ–ï–ù –í " .. location .. "!")
                addResearchLog("RESEARCH", "üì∏ –°–æ–∑–¥–∞–Ω–∏–µ —Å–Ω–∏–º–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ü–û–°–õ–ï –≤–∑—Ä—ã–≤–∞...")
                
                -- –°–æ–∑–¥–∞–µ–º —Å–Ω–∏–º–æ–∫ –ü–û–°–õ–ï –≤–∑—Ä—ã–≤–∞
                wait(0.5) -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
                TrackingState.afterSnapshot = createStateSnapshot("AFTER_EGG_EXPLODE")
                
                -- –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å–Ω–∏–º–∫–∏
                local differences = compareSnapshots(TrackingState.beforeSnapshot, TrackingState.afterSnapshot)
                
                addResearchLog("DISCOVERY", "üí° –ê–ù–ê–õ–ò–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô –ü–û–°–õ–ï –í–ó–†–´–í–ê –Ø–ô–¶–ê:")
                
                if #differences.newWorkspaceObjects > 0 then
                    addResearchLog("CREATION", "‚öôÔ∏è –ù–û–í–´–ï –û–ë–™–ï–ö–¢–´ –í WORKSPACE:", {
                        count = #differences.newWorkspaceObjects
                    })
                    for _, obj in pairs(differences.newWorkspaceObjects) do
                        addResearchLog("CREATION", "  üì¶ " .. obj.name, obj.data)
                    end
                end
                
                if #differences.newReplicatedObjects > 0 then
                    addResearchLog("CREATION", "‚öôÔ∏è –ù–û–í–´–ï –û–ë–™–ï–ö–¢–´ –í REPLICATEDSTORAGE:", {
                        count = #differences.newReplicatedObjects
                    })
                    for _, obj in pairs(differences.newReplicatedObjects) do
                        addResearchLog("CREATION", "  üì¶ " .. obj.name, obj.data)
                    end
                end
                
                if #differences.newScripts > 0 then
                    addResearchLog("SCRIPT", "üìú –ù–û–í–´–ï –°–ö–†–ò–ü–¢–´ –û–ë–ù–ê–†–£–ñ–ï–ù–´:", {
                        count = #differences.newScripts
                    })
                    for _, script in pairs(differences.newScripts) do
                        addResearchLog("SCRIPT", "  üìú " .. script.name, script)
                    end
                end
                
                -- –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
                addResearchLog("RESEARCH", "üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")
            end
        else
            -- –§–∞–∑–∞ 2: –ü–æ–∏—Å–∫ –∏ –∞–Ω–∞–ª–∏–∑ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
            if elapsed > CONFIG.MONITOR_DURATION then
                addResearchLog("RESEARCH", "‚è∞ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
                TrackingState.isActive = false
                return
            end
            
            -- –ü–æ–∏—Å–∫ –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤
            for _, obj in pairs(Workspace:GetDescendants()) do
                if obj:IsA("Model") and obj.Name:lower():find("dog") or 
                   obj.Name:lower():find("bunny") or obj.Name:lower():find("golden") then
                    
                    if not TrackingState.animationSources[obj] then
                        TrackingState.animationSources[obj] = true
                        
                        addResearchLog("DISCOVERY", "üí° –ù–ê–ô–î–ï–ù–ê –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–ê–Ø –ú–û–î–ï–õ–¨: " .. obj.Name)
                        
                        -- –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∞–Ω–∏–º–∞—Ü–∏–∏
                        local animationData = analyzeAnimationSources(obj)
                        
                        addResearchLog("ANIMATION", "üé¨ –ê–ù–ê–õ–ò–ó –ò–°–¢–û–ß–ù–ò–ö–û–í –ê–ù–ò–ú–ê–¶–ò–ò:")
                        addResearchLog("ANIMATION", "  Animators: " .. #animationData.animators)
                        addResearchLog("ANIMATION", "  Animation Tracks: " .. #animationData.animationTracks)
                        addResearchLog("ANIMATION", "  Motor6Ds: " .. #animationData.motor6ds)
                        addResearchLog("ANIMATION", "  Scripts: " .. #animationData.scripts)
                        
                        if #animationData.animationTracks > 0 then
                            for _, track in pairs(animationData.animationTracks) do
                                addResearchLog("ANIMATION", "  üé¨ Animation Track:", track)
                            end
                        end
                        
                        if #animationData.scripts > 0 then
                            for _, script in pairs(animationData.scripts) do
                                addResearchLog("SCRIPT", "  üìú Script in model:", script)
                            end
                        end
                        
                        -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏
                        spawn(function()
                            local startTime = tick()
                            local modelName = obj.Name
                            
                            while obj and obj.Parent do
                                wait(0.2)
                            end
                            
                            local lifetime = tick() - startTime
                            addResearchLog("DISCOVERY", string.format("‚è±Ô∏è %s –∏—Å—á–µ–∑ —á–µ—Ä–µ–∑ %.2f —Å–µ–∫", modelName, lifetime))
                        end)
                    end
                end
            end
        end
    end)
    
    addResearchLog("RESEARCH", "üîç –ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ. –û—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!")
end

-- üìä –§–£–ù–ö–¶–ò–Ø –°–û–ó–î–ê–ù–ò–Ø –°–í–û–î–ö–ò
local function generateSummary()
    addResearchLog("RESEARCH", "üìä === –°–í–û–î–ö–ê –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø ===")
    addResearchLog("RESEARCH", "üéØ –ù–∞–π–¥–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏: " .. #TrackingState.animationSources)
    addResearchLog("RESEARCH", "üìú –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–∫—Ä–∏–ø—Ç–æ–≤: " .. #TrackingState.foundScripts)
    addResearchLog("RESEARCH", "‚ö° –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–±—ã—Ç–∏–π: " .. #TrackingState.detectedEvents)
    
    if TrackingState.beforeSnapshot and TrackingState.afterSnapshot then
        local differences = compareSnapshots(TrackingState.beforeSnapshot, TrackingState.afterSnapshot)
        addResearchLog("RESEARCH", "üì¶ –ù–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ Workspace: " .. #differences.newWorkspaceObjects)
        addResearchLog("RESEARCH", "üì¶ –ù–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ ReplicatedStorage: " .. #differences.newReplicatedObjects)
        addResearchLog("RESEARCH", "üìú –ù–æ–≤—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤: " .. #differences.newScripts)
    end
    
    addResearchLog("RESEARCH", "üìã === –ö–û–ù–ï–¶ –°–í–û–î–ö–ò ===")
end

-- üñ•Ô∏è –°–û–ó–î–ê–ù–ò–ï GUI –ò –ó–ê–ü–£–°–ö
local function initializeResearchTracker()
    local startButton, clearButton, summaryButton = createResearchConsole()
    
    startButton.MouseButton1Click:Connect(function()
        if not TrackingState.isActive then
            startButton.Text = "‚è≥ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û..."
            startButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
            startDeepResearch()
        end
    end)
    
    clearButton.MouseButton1Click:Connect(function()
        ConsoleLines = {}
        TrackingState = {
            isActive = false,
            eggExplodeDetected = false,
            startTime = 0,
            beforeSnapshot = {},
            afterSnapshot = {},
            detectedEvents = {},
            foundScripts = {},
            animationSources = {}
        }
        if ConsoleTextLabel then
            ConsoleTextLabel.Text = "üî¨ –ö–æ–Ω—Å–æ–ª—å –æ—á–∏—â–µ–Ω–∞. –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é."
        end
    end)
    
    summaryButton.MouseButton1Click:Connect(function()
        generateSummary()
    end)
    
    addResearchLog("RESEARCH", "‚úÖ EGG ANIMATION SOURCE TRACKER –ì–û–¢–û–í!")
    addResearchLog("RESEARCH", "üî¨ –ò—Å—Å–ª–µ–¥—É–µ—Ç –û–¢–ö–£–î–ê –±–µ—Ä–µ—Ç—Å—è –∞–Ω–∏–º–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞")
    addResearchLog("RESEARCH", "üìã –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è, —Å–∫—Ä–∏–ø—Ç—ã, –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏")
    addResearchLog("RESEARCH", "üéØ –ù–∞–∂–º–∏—Ç–µ '–ù–ê–ß–ê–¢–¨ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï' –¥–ª—è –∑–∞–ø—É—Å–∫–∞")
end

-- üöÄ –ó–ê–ü–£–°–ö
initializeResearchTracker()
