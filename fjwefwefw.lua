-- HotbarFinder.lua
-- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ Hotbar –¥–ª—è DragonflyTransfer

local Players = game:GetService("Players")
local player = Players.LocalPlayer

print("=== –ü–û–ò–°–ö HOTBAR ===")

local playerGui = player:FindFirstChild("PlayerGui")
if not playerGui then
    print("ERROR: PlayerGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local backpackGui = playerGui:FindFirstChild("BackpackGui")
if not backpackGui then
    print("ERROR: BackpackGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

print("SUCCESS: BackpackGui –Ω–∞–π–¥–µ–Ω!")

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ Hotbar
local function findHotbar()
    print("üîç –ò—â—É Hotbar...")
    
    -- –ú–µ—Ç–æ–¥ 1: –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –≤ BackpackGui
    local hotbar = backpackGui:FindFirstChild("Hotbar")
    if hotbar then
        print("‚úÖ –ù–ê–ô–î–ï–ù: BackpackGui/Hotbar")
        return hotbar, "BackpackGui/Hotbar"
    end
    
    -- –ú–µ—Ç–æ–¥ 2: –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Backpack
    local backpack = backpackGui:FindFirstChild("Backpack")
    if backpack then
        print("üîç –ù–∞–π–¥–µ–Ω Backpack, –∏—â—É Hotbar –≤–Ω—É—Ç—Ä–∏...")
        hotbar = backpack:FindFirstChild("Hotbar")
        if hotbar then
            print("‚úÖ –ù–ê–ô–î–ï–ù: BackpackGui/Backpack/Hotbar")
            return hotbar, "BackpackGui/Backpack/Hotbar"
        end
    end
    
    -- –ú–µ—Ç–æ–¥ 3: –ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –ø–æ—Ç–æ–º–∫–∞–º
    print("üîç –ò—â—É Hotbar —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø–æ—Ç–æ–º–∫–æ–≤...")
    for _, desc in pairs(backpackGui:GetDescendants()) do
        if desc.Name == "Hotbar" and desc:IsA("Frame") then
            -- –ù–∞–π–¥–µ–º –ø—É—Ç—å –∫ —ç–ª–µ–º–µ–Ω—Ç—É
            local path = desc.Name
            local parent = desc.Parent
            while parent and parent ~= backpackGui do
                path = parent.Name .. "/" .. path
                parent = parent.Parent
            end
            path = "BackpackGui/" .. path
            
            print("‚úÖ –ù–ê–ô–î–ï–ù: " .. path)
            return desc, path
        end
    end
    
    -- –ú–µ—Ç–æ–¥ 4: –ü–æ–∏—Å–∫ —Ñ—Ä–µ–π–º–∞ —Å 10 –∫–Ω–æ–ø–∫–∞–º–∏
    print("üîç –ò—â—É —Ñ—Ä–µ–π–º —Å 10 –∫–Ω–æ–ø–∫–∞–º–∏...")
    for _, desc in pairs(backpackGui:GetDescendants()) do
        if desc:IsA("Frame") then
            local buttonCount = 0
            for _, child in pairs(desc:GetChildren()) do
                if child:IsA("TextButton") then
                    buttonCount = buttonCount + 1
                end
            end
            
            if buttonCount == 10 then
                -- –ù–∞–π–¥–µ–º –ø—É—Ç—å –∫ —ç–ª–µ–º–µ–Ω—Ç—É
                local path = desc.Name
                local parent = desc.Parent
                while parent and parent ~= backpackGui do
                    path = parent.Name .. "/" .. path
                    parent = parent.Parent
                end
                path = "BackpackGui/" .. path
                
                print("‚úÖ –ù–ê–ô–î–ï–ù —Ñ—Ä–µ–π–º —Å 10 –∫–Ω–æ–ø–∫–∞–º–∏: " .. path)
                return desc, path
            end
        end
    end
    
    print("‚ùå Hotbar –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return nil, nil
end

-- –ò—â–µ–º Hotbar
local hotbar, path = findHotbar()

if hotbar then
    print("")
    print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("Hotbar –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: " .. path)
    print("–ö–ª–∞—Å—Å: " .. hotbar.ClassName)
    
    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    local children = hotbar:GetChildren()
    local buttonCount = 0
    for _, child in pairs(children) do
        if child:IsA("TextButton") then
            buttonCount = buttonCount + 1
        end
    end
    
    print("–ö–Ω–æ–ø–æ–∫ –≤ Hotbar: " .. buttonCount)
    
    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫
    print("–ü–µ—Ä–≤—ã–µ –∫–Ω–æ–ø–∫–∏:")
    local count = 0
    for _, child in pairs(children) do
        if child:IsA("TextButton") and count < 3 then
            count = count + 1
            
            -- –ò—â–µ–º —Ç–µ–∫—Å—Ç –≤ –∫–Ω–æ–ø–∫–µ
            local buttonText = "–ø—É—Å—Ç–æ"
            for _, desc in pairs(child:GetDescendants()) do
                if desc:IsA("TextLabel") and desc.Text ~= "" then
                    buttonText = desc.Text
                    break
                end
            end
            
            print("  " .. child.Name .. ": " .. buttonText)
        end
    end
    
    print("")
    print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç –ø—É—Ç—å –≤ DragonflyTransfer: " .. path)
else
    print("")
    print("‚ùå Hotbar –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É GUI.")
end

print("=== –ü–û–ò–°–ö –ó–ê–í–ï–†–®–ï–ù ===")
