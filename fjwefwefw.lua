-- üî• PERFECT PET SCANNER v1.0
-- –ü–æ–ª–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —Ä—É–∫–∏ –∏ –∑–∞–º–µ–Ω–∞ Shovel –Ω–∞ 1:1 –∫–æ–ø–∏—é
-- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –í–°–ï: CFrame, Motor6D, –∞–Ω–∏–º–∞—Ü–∏–∏, —á–∞—Å—Ç–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä—É

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer

print("üî• === PERFECT PET SCANNER v1.0 ===")
print("=" .. string.rep("=", 60))

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
local scannedPetData = {
    toolName = nil,
    handleData = nil,
    petModel = nil,
    allParts = {},
    allMotor6Ds = {},
    allCFrames = {},
    allProperties = {},
    weldData = nil,
    animationStates = {}
}

local currentReplacedTool = nil
local animationConnection = nil

-- === –§–£–ù–ö–¶–ò–ò –ì–õ–£–ë–û–ö–û–ì–û –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø ===

-- –§—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞
local function scanObjectProperties(obj)
    local properties = {}
    
    -- –ë–∞–∑–æ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    properties.Name = obj.Name
    properties.ClassName = obj.ClassName
    properties.Parent = obj.Parent and obj.Parent.Name or "nil"
    
    -- –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è BasePart
    if obj:IsA("BasePart") then
        properties.Size = obj.Size
        properties.CFrame = obj.CFrame
        properties.Material = obj.Material
        properties.BrickColor = obj.BrickColor
        properties.Transparency = obj.Transparency
        properties.CanCollide = obj.CanCollide
        properties.Anchored = obj.Anchored
        properties.Shape = obj.Shape
        properties.TopSurface = obj.TopSurface
        properties.BottomSurface = obj.BottomSurface
        properties.FrontSurface = obj.FrontSurface
        properties.BackSurface = obj.BackSurface
        properties.LeftSurface = obj.LeftSurface
        properties.RightSurface = obj.RightSurface
    end
    
    -- –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Motor6D
    if obj:IsA("Motor6D") then
        properties.Part0 = obj.Part0 and obj.Part0.Name or "nil"
        properties.Part1 = obj.Part1 and obj.Part1.Name or "nil"
        properties.C0 = obj.C0
        properties.C1 = obj.C1
        properties.CurrentAngle = obj.CurrentAngle
        properties.DesiredAngle = obj.DesiredAngle
        properties.MaxVelocity = obj.MaxVelocity
    end
    
    -- –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Weld
    if obj:IsA("Weld") or obj:IsA("WeldConstraint") then
        properties.Part0 = obj.Part0 and obj.Part0.Name or "nil"
        properties.Part1 = obj.Part1 and obj.Part1.Name or "nil"
        if obj:IsA("Weld") then
            properties.C0 = obj.C0
            properties.C1 = obj.C1
        end
    end
    
    return properties
end

-- –§—É–Ω–∫—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
local function deepCloneObject(original, parent)
    if not original then return nil end
    
    local clone = Instance.new(original.ClassName)
    clone.Name = original.Name
    
    -- –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞
    local properties = scanObjectProperties(original)
    
    for propName, propValue in pairs(properties) do
        if propName ~= "Parent" and propName ~= "Part0" and propName ~= "Part1" then
            local success, err = pcall(function()
                clone[propName] = propValue
            end)
            if not success then
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ", propName, ":", err)
            end
        end
    end
    
    clone.Parent = parent
    return clone
end

-- –§—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∏—Ç–æ–º—Ü–∞ –∏–∑ —Ä—É–∫–∏
local function scanPetFromHand()
    print("\nüîç === –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ü–ò–¢–û–ú–¶–ê –ò–ó –†–£–ö–ò ===")
    
    local character = player.Character
    if not character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    -- –ò—â–µ–º Tool –≤ —Ä—É–∫–∞—Ö
    local tool = character:FindFirstChildOfClass("Tool")
    if not tool then
        print("‚ùå –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏ –ø–µ—Ä–µ–¥ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º!")
        return false
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–∏—Ç–æ–º–µ—Ü (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É —á—Ç–æ –≤ DirectShovelFix)
    if not (string.find(tool.Name, "%[") and string.find(tool.Name, "KG%]")) then
        print("‚ùå –í —Ä—É–∫–∞—Ö –Ω–µ –ø–∏—Ç–æ–º–µ—Ü! –ù–∞–π–¥–µ–Ω:", tool.Name)
        print("üîç –ò—â–µ–º –ø–∏—Ç–æ–º—Ü–∞ —Å –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º '[...KG]'")
        return false
    end
    
    print("üéØ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", tool.Name)
    
    -- –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    scannedPetData = {
        toolName = nil,
        handleData = nil,
        petModel = nil,
        allParts = {},
        allMotor6Ds = {},
        allCFrames = {},
        allProperties = {},
        weldData = nil,
        animationStates = {}
    }
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è Tool
    scannedPetData.toolName = tool.Name
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º Handle
    local handle = tool:FindFirstChild("Handle")
    if handle then
        scannedPetData.handleData = scanObjectProperties(handle)
        print("‚úÖ Handle –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω")
    end
    
    -- –ò—â–µ–º –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞ –≤ Tool (–ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã)
    local petModel = nil
    
    -- –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º Model
    for _, child in pairs(tool:GetChildren()) do
        if child:IsA("Model") and child ~= handle then
            petModel = child
            print("üéØ –ù–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞:", child.Name)
            break
        end
    end
    
    -- –ï—Å–ª–∏ Model –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∏–∑ –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π (–∫–∞–∫ –≤ DirectShovelFix)
    if not petModel then
        print("üîß –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –∏–∑ —á–∞—Å—Ç–µ–π Tool...")
        petModel = Instance.new("Model")
        petModel.Name = "PetModel"
        petModel.Parent = tool
        
        -- –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –∫—Ä–æ–º–µ Handle –≤ –º–æ–¥–µ–ª—å
        local parts = {}
        for _, child in pairs(tool:GetChildren()) do
            if child:IsA("BasePart") and child ~= handle then
                table.insert(parts, child)
            end
        end
        
        for _, part in pairs(parts) do
            part.Parent = petModel
        end
        
        if #parts > 0 then
            petModel.PrimaryPart = parts[1]
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–æ–¥–µ–ª—å –∏–∑", #parts, "—á–∞—Å—Ç–µ–π")
        else
            print("‚ùå –ù–µ—Ç —á–∞—Å—Ç–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–∏!")
            return false
        end
    end
    
    print("üéØ –ù–∞–π–¥–µ–Ω–∞ –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞:", petModel.Name)
    
    -- –ì–ª—É–±–æ–∫–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞
    scannedPetData.petModel = petModel:Clone()
    scannedPetData.petModel.Parent = nil -- –•—Ä–∞–Ω–∏–º –≤ –ø–∞–º—è—Ç–∏
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ —á–∞—Å—Ç–∏
    local partCount = 0
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("BasePart") then
            local partData = {
                object = obj,
                properties = scanObjectProperties(obj),
                cframe = obj.CFrame,
                worldPosition = obj.Position
            }
            table.insert(scannedPetData.allParts, partData)
            partCount = partCount + 1
        end
    end
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ Motor6D
    local motor6dCount = 0
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("Motor6D") then
            local motorData = {
                object = obj,
                properties = scanObjectProperties(obj),
                c0 = obj.C0,
                c1 = obj.C1,
                currentAngle = obj.CurrentAngle,
                desiredAngle = obj.DesiredAngle
            }
            table.insert(scannedPetData.allMotor6Ds, motorData)
            motor6dCount = motor6dCount + 1
        end
    end
    
    -- –°–∫–∞–Ω–∏—Ä—É–µ–º Weld –∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ —Ä—É–∫–µ
    local rightHand = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
    if rightHand then
        local rightGrip = rightHand:FindFirstChild("RightGrip")
        if rightGrip then
            scannedPetData.weldData = {
                c0 = rightGrip.C0,
                c1 = rightGrip.C1,
                properties = scanObjectProperties(rightGrip)
            }
            print("‚úÖ Weld –∫—Ä–µ–ø–ª–µ–Ω–∏—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω")
        end
    end
    
    print("‚úÖ –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üìä –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–∞—Å—Ç–µ–π:", partCount)
    print("üìä –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ Motor6D:", motor6dCount)
    print("üìä –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏:", #scannedPetData.petModel:GetDescendants())
    
    return true
end

-- === –§–£–ù–ö–¶–ò–ò –°–û–ó–î–ê–ù–ò–Ø –ö–û–ü–ò–ò ===

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ—á–Ω–æ–π –∫–æ–ø–∏–∏ Tool
local function createExactPetTool()
    if not scannedPetData.toolName then
        print("‚ùå –î–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –°–Ω–∞—á–∞–ª–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –ø–∏—Ç–æ–º—Ü–∞.")
        return nil
    end
    
    print("\nüîß === –°–û–ó–î–ê–ù–ò–ï –¢–û–ß–ù–û–ô –ö–û–ü–ò–ò TOOL ===")
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π Tool
    local newTool = Instance.new("Tool")
    newTool.Name = scannedPetData.toolName
    newTool.RequiresHandle = true
    newTool.CanBeDropped = false
    
    -- –°–æ–∑–¥–∞–µ–º Handle —Å —Ç–æ—á–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
    local handle = Instance.new("Part")
    handle.Name = "Handle"
    
    if scannedPetData.handleData then
        for propName, propValue in pairs(scannedPetData.handleData) do
            if propName ~= "Parent" and propName ~= "CFrame" then
                local success, err = pcall(function()
                    handle[propName] = propValue
                end)
                if not success then
                    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ Handle", propName, ":", err)
                end
            end
        end
    end
    
    handle.Anchored = false
    handle.CanCollide = false
    handle.Parent = newTool
    
    -- –ö–ª–æ–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞
    if scannedPetData.petModel then
        local petCopy = scannedPetData.petModel:Clone()
        petCopy.Name = "PetModel"
        petCopy.Parent = newTool
        
        -- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Å–µ —á–∞—Å—Ç–∏
        for _, part in pairs(petCopy:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
                part.CanCollide = false
                
                -- –°–æ–∑–¥–∞–µ–º WeldConstraint –¥–ª—è –∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ Handle
                local weld = Instance.new("WeldConstraint")
                weld.Part0 = handle
                weld.Part1 = part
                weld.Parent = handle
            end
        end
        
        print("‚úÖ –ú–æ–¥–µ–ª—å –ø–∏—Ç–æ–º—Ü–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Å", #petCopy:GetDescendants(), "–æ–±—ä–µ–∫—Ç–∞–º–∏")
    end
    
    print("‚úÖ –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è Tool —Å–æ–∑–¥–∞–Ω–∞!")
    return newTool
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã Shovel –Ω–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
local function replaceShovelWithScannedPet()
    print("\nüîÑ === –ó–ê–ú–ï–ù–ê SHOVEL –ù–ê –û–¢–°–ö–ê–ù–ò–†–û–í–ê–ù–ù–û–ì–û –ü–ò–¢–û–ú–¶–ê ===")
    
    local character = player.Character
    if not character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    -- –ò—â–µ–º Shovel –≤ —Ä—É–∫–∞—Ö
    local shovelTool = character:FindFirstChildOfClass("Tool")
    if not shovelTool or not shovelTool.Name:find("Shovel") then
        print("‚ùå –í–æ–∑—å–º–∏—Ç–µ Shovel –≤ —Ä—É–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–º–µ–Ω–æ–π!")
        return false
    end
    
    -- –°–æ–∑–¥–∞–µ–º —Ç–æ—á–Ω—É—é –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞
    local petTool = createExactPetTool()
    if not petTool then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞!")
        return false
    end
    
    -- –£–¥–∞–ª—è–µ–º Shovel
    shovelTool:Destroy()
    
    -- –î–æ–±–∞–≤–ª—è–µ–º Pet Tool –≤ Backpack –∏ —ç–∫–∏–ø–∏—Ä—É–µ–º
    petTool.Parent = player.Backpack
    wait(0.1)
    
    -- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —ç–∫–∏–ø–∏—Ä—É–µ–º Tool
    character.Humanoid:EquipTool(petTool)
    
    currentReplacedTool = petTool
    
    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é Weld
    if scannedPetData.weldData then
        spawn(function()
            wait(0.5) -- –ñ–¥–µ–º –ø–æ–∫–∞ Tool –ø–æ—è–≤–∏—Ç—Å—è –≤ —Ä—É–∫–∞—Ö
            
            local rightHand = character:FindFirstChild("Right Arm") or character:FindFirstChild("RightHand")
            if rightHand then
                local rightGrip = rightHand:FindFirstChild("RightGrip")
                if rightGrip then
                    rightGrip.C0 = scannedPetData.weldData.c0
                    rightGrip.C1 = scannedPetData.weldData.c1
                    print("‚úÖ –ü–æ–∑–∏—Ü–∏—è Weld –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
                end
            end
        end)
    end
    
    print("‚úÖ Shovel –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!")
    return true
end

-- === –°–ò–°–¢–ï–ú–ê LIVE –ê–ù–ò–ú–ê–¶–ò–ò ===

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ live –∞–Ω–∏–º–∞—Ü–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
local function startLiveAnimationFromScan()
    if animationConnection then
        animationConnection:Disconnect()
    end
    
    if not currentReplacedTool or not scannedPetData.allMotor6Ds then
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏!")
        return
    end
    
    print("\nüé¨ === –ó–ê–ü–£–°–ö LIVE –ê–ù–ò–ú–ê–¶–ò–ò –ò–ó –°–ö–ê–ù–ê ===")
    
    animationConnection = RunService.Heartbeat:Connect(function()
        if not currentReplacedTool or not currentReplacedTool.Parent then
            return
        end
        
        local petModel = currentReplacedTool:FindFirstChild("PetModel")
        if not petModel then
            return
        end
        
        -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è Motor6D
        for _, motorData in ipairs(scannedPetData.allMotor6Ds) do
            local motorName = motorData.properties.Name
            local motor6d = petModel:FindFirstChild(motorName, true)
            
            if motor6d and motor6d:IsA("Motor6D") then
                local success, err = pcall(function()
                    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É–≥–ª—ã —Å –Ω–µ–±–æ–ª—å—à–æ–π –∞–Ω–∏–º–∞—Ü–∏–µ–π
                    motor6d.DesiredAngle = motorData.desiredAngle + math.sin(tick() * 2) * 0.1
                    motor6d.C0 = motorData.c0
                    motor6d.C1 = motorData.c1
                end)
                
                if not success then
                    print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ Motor6D", motorName, ":", err)
                end
            end
        end
    end)
    
    print("‚úÖ Live –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
local function stopLiveAnimation()
    if animationConnection then
        animationConnection:Disconnect()
        animationConnection = nil
        print("‚èπÔ∏è Live –∞–Ω–∏–º–∞—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    end
end

-- === –ì–õ–ê–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
local function fullScanAndReplace()
    print("\nüöÄ === –ü–û–õ–ù–´–ô –ü–†–û–¶–ï–°–° –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø –ò –ó–ê–ú–ï–ù–´ ===")
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤ —Ä—É–∫–∞—Ö –ø–∏—Ç–æ–º–µ—Ü –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    local character = player.Character
    if not character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    local tool = character:FindFirstChildOfClass("Tool")
    if not tool then
        print("‚ùå –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏ –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!")
        return false
    end
    
    if not (tool.Name:find("Dragonfly") or tool.Name:find("KG]")) then
        print("‚ùå –í —Ä—É–∫–∞—Ö –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–∏—Ç–æ–º–µ—Ü –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!")
        return false
    end
    
    -- –®–∞–≥ 1: –°–∫–∞–Ω–∏—Ä—É–µ–º –ø–∏—Ç–æ–º—Ü–∞
    if not scanPetFromHand() then
        print("‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!")
        return false
    end
    
    print("‚úÖ –ü–∏—Ç–æ–º–µ—Ü –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω! –¢–µ–ø–µ—Ä—å –≤–æ–∑—å–º–∏—Ç–µ Shovel –¥–ª—è –∑–∞–º–µ–Ω—ã.")
    return true
end

-- === –°–û–ó–î–ê–ù–ò–ï GUI ===

local function createGUI()
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI
    local oldGui = playerGui:FindFirstChild("PerfectPetScannerGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PerfectPetScannerGUI"
    screenGui.Parent = playerGui
    
    local frame = Instance.new("Frame")
    frame.Name = "MainFrame"
    frame.Size = UDim2.new(0, 400, 0, 300)
    frame.Position = UDim2.new(0, 50, 0, 50)
    frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    frame.BorderSizePixel = 2
    frame.BorderColor3 = Color3.fromRGB(255, 0, 255)
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Name = "Title"
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = Color3.fromRGB(255, 0, 255)
    title.BorderSizePixel = 0
    title.Text = "üî• PERFECT PET SCANNER"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 18
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local instructions = Instance.new("TextLabel")
    instructions.Name = "Instructions"
    instructions.Size = UDim2.new(1, -20, 0, 120)
    instructions.Position = UDim2.new(0, 10, 0, 50)
    instructions.BackgroundTransparency = 1
    instructions.Text = "–ò–ù–°–¢–†–£–ö–¶–ò–Ø:\n\n1. –í–æ–∑—å–º–∏—Ç–µ –ü–ò–¢–û–ú–¶–ê –≤ —Ä—É–∫–∏\n2. –ù–∞–∂–º–∏—Ç–µ '–°–ö–ê–ù–ò–†–û–í–ê–¢–¨ –ü–ò–¢–û–ú–¶–ê'\n3. –í–æ–∑—å–º–∏—Ç–µ SHOVEL –≤ —Ä—É–∫–∏\n4. –ù–∞–∂–º–∏—Ç–µ '–ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –ü–ò–¢–û–ú–¶–ê'\n\n‚ú® –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ—á–Ω—É—é 1:1 –∫–æ–ø–∏—é!"
    instructions.TextColor3 = Color3.fromRGB(255, 255, 255)
    instructions.TextSize = 14
    instructions.Font = Enum.Font.SourceSans
    instructions.TextWrapped = true
    instructions.TextYAlignment = Enum.TextYAlignment.Top
    instructions.Parent = frame
    
    local scanBtn = Instance.new("TextButton")
    scanBtn.Name = "ScanButton"
    scanBtn.Size = UDim2.new(0, 380, 0, 40)
    scanBtn.Position = UDim2.new(0, 10, 0, 180)
    scanBtn.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
    scanBtn.BorderSizePixel = 0
    scanBtn.Text = "üîç –°–ö–ê–ù–ò–†–û–í–ê–¢–¨ –ü–ò–¢–û–ú–¶–ê"
    scanBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
    scanBtn.TextSize = 16
    scanBtn.Font = Enum.Font.SourceSansBold
    scanBtn.Parent = frame
    
    local replaceBtn = Instance.new("TextButton")
    replaceBtn.Name = "ReplaceButton"
    replaceBtn.Size = UDim2.new(0, 380, 0, 40)
    replaceBtn.Position = UDim2.new(0, 10, 0, 230)
    replaceBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    replaceBtn.BorderSizePixel = 0
    replaceBtn.Text = "üîÑ –ó–ê–ú–ï–ù–ò–¢–¨ SHOVEL –ù–ê –ü–ò–¢–û–ú–¶–ê"
    replaceBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
    replaceBtn.TextSize = 16
    replaceBtn.Font = Enum.Font.SourceSansBold
    replaceBtn.Parent = frame
    
    -- –°–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    scanBtn.MouseButton1Click:Connect(function()
        scanBtn.Text = "‚è≥ –°–∫–∞–Ω–∏—Ä—É—é..."
        scanBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
        
        spawn(function()
            local success = fullScanAndReplace()
            
            wait(1)
            if success then
                scanBtn.Text = "‚úÖ –ü–ò–¢–û–ú–ï–¶ –û–¢–°–ö–ê–ù–ò–†–û–í–ê–ù!"
                scanBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
            else
                scanBtn.Text = "‚ùå –û–®–ò–ë–ö–ê! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é"
                scanBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
            end
            
            wait(3)
            scanBtn.Text = "üîç –°–ö–ê–ù–ò–†–û–í–ê–¢–¨ –ü–ò–¢–û–ú–¶–ê"
            scanBtn.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        end)
    end)
    
    replaceBtn.MouseButton1Click:Connect(function()
        replaceBtn.Text = "‚è≥ –ó–∞–º–µ–Ω—è—é..."
        replaceBtn.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        spawn(function()
            local success = replaceShovelWithScannedPet()
            
            if success then
                wait(1)
                startLiveAnimationFromScan()
            end
            
            wait(1)
            if success then
                replaceBtn.Text = "‚úÖ –£–°–ü–ï–®–ù–û –ó–ê–ú–ï–ù–ï–ù–û!"
                replaceBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
            else
                replaceBtn.Text = "‚ùå –û–®–ò–ë–ö–ê! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é"
                replaceBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
            end
            
            wait(3)
            replaceBtn.Text = "üîÑ –ó–ê–ú–ï–ù–ò–¢–¨ SHOVEL –ù–ê –ü–ò–¢–û–ú–¶–ê"
            replaceBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        end)
    end)
    
    print("üñ•Ô∏è Perfect Pet Scanner GUI —Å–æ–∑–¥–∞–Ω!")
end

-- === –ó–ê–ü–£–°–ö ===

createGUI()
print("=" .. string.rep("=", 60))
print("üí° PERFECT PET SCANNER:")
print("   üîç –°–∫–∞–Ω–∏—Ä—É–µ—Ç –ø–∏—Ç–æ–º—Ü–∞ –ø—Ä—è–º–æ –∏–∑ —Ä—É–∫–∏")
print("   üíæ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –í–°–ï: —á–∞—Å—Ç–∏, Motor6D, CFrame, –∞–Ω–∏–º–∞—Ü–∏–∏")
print("   üîÑ –ó–∞–º–µ–Ω—è–µ—Ç Shovel –Ω–∞ —Ç–æ—á–Ω—É—é 1:1 –∫–æ–ø–∏—é")
print("   üé¨ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∂–∏–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é")
print("üéØ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤ GUI!")
print("=" .. string.rep("=", 60))
