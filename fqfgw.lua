-- SimpleCreationWatcher.lua
-- –ü–†–û–°–¢–û–ô –ù–ê–ë–õ–Æ–î–ê–¢–ï–õ–¨: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –í–°–ï –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ö—É–∫–æ–≤
-- –§–æ–∫—É—Å –Ω–∞ –¢–û–ß–ù–û–ú –º–æ–º–µ–Ω—Ç–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üëÅÔ∏è === SIMPLE CREATION WATCHER ===")
print("üéØ –¶–µ–ª—å: –û—Ç—Å–ª–µ–¥–∏—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ –ë–ï–ó —Ö—É–∫–æ–≤")
print("=" .. string.rep("=", 60))

-- üìä –î–ê–ù–ù–´–ï –ù–ê–ë–õ–Æ–î–ê–¢–ï–õ–Ø
local WatcherData = {
    targetModel = nil,
    allNewObjects = {},
    petModels = {},
    startTime = nil,
    isWatching = false
}

-- üñ•Ô∏è –ö–û–ù–°–û–õ–¨
local WatcherConsole = nil
local ConsoleLines = {}
local MaxLines = 150

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏
local function createWatcherConsole()
    if WatcherConsole then WatcherConsole:Destroy() end
    
    WatcherConsole = Instance.new("ScreenGui")
    WatcherConsole.Name = "SimpleCreationWatcherConsole"
    WatcherConsole.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 800, 0, 600)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.05, 0.05, 0.15)
    frame.BorderSizePixel = 3
    frame.BorderColor3 = Color3.new(0.3, 0.3, 1)
    frame.Parent = WatcherConsole
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 35)
    title.BackgroundColor3 = Color3.new(0.3, 0.3, 1)
    title.BorderSizePixel = 0
    title.Text = "üëÅÔ∏è SIMPLE CREATION WATCHER"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -10, 1, -45)
    scrollFrame.Position = UDim2.new(0, 5, 0, 40)
    scrollFrame.BackgroundColor3 = Color3.new(0.02, 0.02, 0.08)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 15
    scrollFrame.Parent = frame
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, -10, 1, 0)
    textLabel.Position = UDim2.new(0, 5, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "üëÅÔ∏è –ü—Ä–æ—Å—Ç–æ–π –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤..."
    textLabel.TextColor3 = Color3.new(0.9, 0.9, 1)
    textLabel.TextSize = 11
    textLabel.Font = Enum.Font.SourceSans
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.TextYAlignment = Enum.TextYAlignment.Top
    textLabel.TextWrapped = true
    textLabel.Parent = scrollFrame
    
    return textLabel
end

-- –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function watcherLog(category, message, data)
    local timestamp = os.date("%H:%M:%S.") .. string.format("%03d", (tick() % 1) * 1000)
    local relativeTime = WatcherData.startTime and string.format("+%.3f", tick() - WatcherData.startTime) or "0.000"
    
    local prefixes = {
        WATCHER = "üëÅÔ∏è", NEW = "üÜï", PET = "üêï", ANALYSIS = "üìä",
        FOUND = "üéØ", CRITICAL = "üî•", SUCCESS = "‚úÖ", ERROR = "‚ùå", 
        INFO = "‚ÑπÔ∏è", DETAIL = "üìù"
    }
    
    local logLine = string.format("[%s] (%s) %s %s", timestamp, relativeTime, prefixes[category] or "‚ÑπÔ∏è", message)
    
    if data and next(data) then
        for key, value in pairs(data) do
            logLine = logLine .. string.format("\n      %s: %s", key, tostring(value))
        end
    end
    
    table.insert(ConsoleLines, logLine)
    
    if #ConsoleLines > MaxLines then
        table.remove(ConsoleLines, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Å–æ–ª—å
    if WatcherConsole then
        local textLabel = WatcherConsole:FindFirstChild("Frame"):FindFirstChild("ScrollingFrame"):FindFirstChild("TextLabel")
        if textLabel then
            textLabel.Text = table.concat(ConsoleLines, "\n")
            local scrollFrame = textLabel.Parent
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, textLabel.TextBounds.Y + 10)
            scrollFrame.CanvasPosition = Vector2.new(0, scrollFrame.CanvasSize.Y.Offset)
        end
    end
    
    print(logLine)
end

-- üîç –ü–û–ò–°–ö –°–£–©–ï–°–¢–í–£–Æ–©–ò–• –ò–°–¢–û–ß–ù–ò–ö–û–í
local function findExistingSources()
    watcherLog("WATCHER", "üîç –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
    
    local sources = {}
    
    -- –ü–æ–∏—Å–∫ –≤ ReplicatedStorage
    local function searchInService(service, serviceName)
        local found = 0
        for _, obj in pairs(service:GetDescendants()) do
            if obj:IsA("Model") then
                local name = obj.Name:lower()
                if name == "dog" or name == "bunny" or name == "golden lab" or 
                   name == "cat" or name == "rabbit" or name == "puppy" then
                    
                    sources[obj:GetFullName()] = {
                        object = obj,
                        name = obj.Name,
                        location = serviceName,
                        children = #obj:GetChildren()
                    }
                    
                    found = found + 1
                    watcherLog("FOUND", string.format("üéØ –ò—Å—Ç–æ—á–Ω–∏–∫ –≤ %s: %s", serviceName, obj.Name), {
                        Path = obj:GetFullName(),
                        Children = #obj:GetChildren()
                    })
                end
            end
        end
        return found
    end
    
    local totalFound = 0
    totalFound = totalFound + searchInService(ReplicatedStorage, "ReplicatedStorage")
    totalFound = totalFound + searchInService(Workspace, "Workspace")
    
    watcherLog("WATCHER", string.format("üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: %d", totalFound))
    return sources
end

-- üÜï –ú–û–ù–ò–¢–û–†–ò–ù–ì –ù–û–í–´–• –û–ë–™–ï–ö–¢–û–í
local function monitorNewObjects()
    watcherLog("WATCHER", "üÜï –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤...")
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Workspace
    local workspaceConnection = Workspace.DescendantAdded:Connect(function(obj)
        local relativeTime = WatcherData.startTime and (tick() - WatcherData.startTime) or 0
        
        -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –í–°–ï –Ω–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã
        WatcherData.allNewObjects[obj] = {
            time = tick(),
            relativeTime = relativeTime,
            name = obj.Name,
            className = obj.ClassName,
            parent = obj.Parent and obj.Parent.Name or "NIL"
        }
        
        -- –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ Model
        if obj:IsA("Model") then
            watcherLog("NEW", "üÜï –ù–û–í–ê–Ø –ú–û–î–ï–õ–¨: " .. obj.Name, {
                ClassName = obj.ClassName,
                Parent = obj.Parent and obj.Parent.Name or "NIL",
                RelativeTime = string.format("%.3f —Å–µ–∫", relativeTime)
            })
            
            local name = obj.Name:lower()
            if name == "dog" or name == "bunny" or name == "golden lab" or 
               name == "cat" or name == "rabbit" or name == "puppy" then
                
                WatcherData.targetModel = obj
                
                watcherLog("CRITICAL", "üî• –ü–ò–¢–û–ú–ï–¶ –û–ë–ù–ê–†–£–ñ–ï–ù: " .. obj.Name, {
                    Parent = obj.Parent and obj.Parent.Name or "NIL",
                    ParentPath = obj.Parent and obj.Parent:GetFullName() or "NIL",
                    RelativeTime = string.format("%.3f —Å–µ–∫", relativeTime),
                    Children = #obj:GetChildren()
                })
                
                -- –ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–∏—Ç–æ–º—Ü–∞
                analyzePetModel(obj)
                
                -- –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
                findSimilarSources(obj)
            end
        end
        
        -- –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ Tool
        if obj:IsA("Tool") then
            local name = obj.Name:lower()
            if name:find("dog") or name:find("bunny") or name:find("lab") or 
               name:find("cat") or name:find("rabbit") or name:find("puppy") then
                
                watcherLog("PET", "üêï TOOL –ü–ò–¢–û–ú–¶–ê: " .. obj.Name, {
                    Parent = obj.Parent and obj.Parent.Name or "NIL",
                    RelativeTime = string.format("%.3f —Å–µ–∫", relativeTime)
                })
            end
        end
    end)
    
    return workspaceConnection
end

-- üìä –ê–ù–ê–õ–ò–ó –ú–û–î–ï–õ–ò –ü–ò–¢–û–ú–¶–ê
local function analyzePetModel(model)
    watcherLog("ANALYSIS", "üìä –ê–ù–ê–õ–ò–ó –ú–û–î–ï–õ–ò –ü–ò–¢–û–ú–¶–ê: " .. model.Name)
    
    -- –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    local info = {
        Name = model.Name,
        ClassName = model.ClassName,
        Parent = model.Parent and model.Parent.Name or "NIL",
        ParentPath = model.Parent and model.Parent:GetFullName() or "NIL",
        Children = #model:GetChildren(),
        Descendants = #model:GetDescendants()
    }
    
    watcherLog("DETAIL", "üìù –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", info)
    
    -- –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥–µ–ª–∏
    local structure = {}
    for _, obj in pairs(model:GetDescendants()) do
        structure[obj.ClassName] = (structure[obj.ClassName] or 0) + 1
    end
    
    watcherLog("DETAIL", "üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –º–æ–¥–µ–ª–∏:", structure)
    
    -- –ê–Ω–∞–ª–∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—è
    local parent = model.Parent
    if parent then
        watcherLog("DETAIL", "üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–¥–∏—Ç–µ–ª–µ:", {
            Name = parent.Name,
            ClassName = parent.ClassName,
            Path = parent:GetFullName(),
            Children = #parent:GetChildren()
        })
    end
end

-- üîç –ü–û–ò–°–ö –ü–û–•–û–ñ–ò–• –ò–°–¢–û–ß–ù–ò–ö–û–í
local function findSimilarSources(targetModel)
    watcherLog("ANALYSIS", "üîç –ü–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è: " .. targetModel.Name)
    
    -- –ü–æ–∏—Å–∫ –≤ ReplicatedStorage
    for _, obj in pairs(ReplicatedStorage:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:lower() == targetModel.Name:lower() then
            watcherLog("SUCCESS", "‚úÖ –ù–ê–ô–î–ï–ù –ü–û–•–û–ñ–ò–ô –ò–°–¢–û–ß–ù–ò–ö!", {
                Name = obj.Name,
                Path = obj:GetFullName(),
                Children = #obj:GetChildren(),
                TargetChildren = #targetModel:GetChildren(),
                Match = #obj:GetChildren() == #targetModel:GetChildren() and "–¢–û–ß–ù–û–ï" or "–ß–ê–°–¢–ò–ß–ù–û–ï"
            })
            
            -- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
            local sourceStructure = {}
            local targetStructure = {}
            
            for _, child in pairs(obj:GetDescendants()) do
                sourceStructure[child.ClassName] = (sourceStructure[child.ClassName] or 0) + 1
            end
            
            for _, child in pairs(targetModel:GetDescendants()) do
                targetStructure[child.ClassName] = (targetStructure[child.ClassName] or 0) + 1
            end
            
            local matches = 0
            local total = 0
            for className, count in pairs(targetStructure) do
                total = total + 1
                if sourceStructure[className] and sourceStructure[className] == count then
                    matches = matches + 1
                end
            end
            
            local similarity = total > 0 and (matches / total * 100) or 0
            
            watcherLog("SUCCESS", string.format("‚úÖ –°–•–û–î–°–¢–í–û –°–¢–†–£–ö–¢–£–†–´: %.1f%%", similarity), {
                Matches = matches,
                Total = total,
                Confidence = similarity > 90 and "–û–ß–ï–ù–¨ –í–´–°–û–ö–ê–Ø" or (similarity > 70 and "–í–´–°–û–ö–ê–Ø" or "–°–†–ï–î–ù–Ø–Ø")
            })
        end
    end
end

-- üöÄ –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ù–ê–ë–õ–Æ–î–ï–ù–ò–Ø
local function startSimpleWatching()
    watcherLog("WATCHER", "üöÄ –ó–ê–ü–£–°–ö –ü–†–û–°–¢–û–ì–û –ù–ê–ë–õ–Æ–î–ï–ù–ò–Ø")
    watcherLog("WATCHER", "üëÅÔ∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞")
    
    WatcherData.isWatching = true
    WatcherData.startTime = tick()
    
    -- –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    local sources = findExistingSources()
    
    -- –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    local workspaceConnection = monitorNewObjects()
    
    watcherLog("WATCHER", "‚úÖ –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ!")
    watcherLog("WATCHER", "ü•ö –û–¢–ö–†–û–ô–¢–ï –Ø–ô–¶–û –°–ï–ô–ß–ê–°!")
    
    -- –ê–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    spawn(function()
        wait(120)
        if workspaceConnection then
            workspaceConnection:Disconnect()
        end
        WatcherData.isWatching = false
        watcherLog("WATCHER", "‚è∞ –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ —Ç–∞–π–º–∞—É—Ç—É")
        
        -- –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        watcherLog("INFO", string.format("üìä –í—Å–µ–≥–æ –æ—Ç—Å–ª–µ–∂–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: %d", #WatcherData.allNewObjects))
    end)
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createWatcherGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SimpleCreationWatcherGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 120)
    frame.Position = UDim2.new(1, -320, 0, 10)
    frame.BackgroundColor3 = Color3.new(0.05, 0.05, 0.15)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundColor3 = Color3.new(0.3, 0.3, 1)
    title.BorderSizePixel = 0
    title.Text = "üëÅÔ∏è SIMPLE WATCHER"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local startBtn = Instance.new("TextButton")
    startBtn.Size = UDim2.new(1, -20, 0, 40)
    startBtn.Position = UDim2.new(0, 10, 0, 40)
    startBtn.BackgroundColor3 = Color3.new(0.3, 0.3, 1)
    startBtn.BorderSizePixel = 0
    startBtn.Text = "üëÅÔ∏è –ù–ê–ß–ê–¢–¨ –ù–ê–ë–õ–Æ–î–ï–ù–ò–ï"
    startBtn.TextColor3 = Color3.new(1, 1, 1)
    startBtn.TextScaled = true
    startBtn.Font = Enum.Font.SourceSansBold
    startBtn.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 30)
    status.Position = UDim2.new(0, 10, 0, 90)
    status.BackgroundTransparency = 1
    status.Text = "–ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å—Ç–æ–º—É –Ω–∞–±–ª—é–¥–µ–Ω–∏—é"
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.Parent = frame
    
    startBtn.MouseButton1Click:Connect(function()
        status.Text = "üëÅÔ∏è –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ!"
        status.TextColor3 = Color3.new(0.3, 0.3, 1)
        startBtn.Text = "‚úÖ –ù–ê–ë–õ–Æ–î–ï–ù–ò–ï –ê–ö–¢–ò–í–ù–û"
        startBtn.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)
        startBtn.Active = false
        
        startSimpleWatching()
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
local consoleTextLabel = createWatcherConsole()
createWatcherGUI()

watcherLog("WATCHER", "‚úÖ SimpleCreationWatcher –≥–æ—Ç–æ–≤!")
watcherLog("WATCHER", "üëÅÔ∏è –ü—Ä–æ—Å—Ç–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–∏ –ø–∏—Ç–æ–º—Ü–∞")
watcherLog("WATCHER", "üéØ –ë–ï–ó —Å–ª–æ–∂–Ω—ã—Ö —Ö—É–∫–æ–≤ - —Ç–æ–ª—å–∫–æ DescendantAdded")
watcherLog("WATCHER", "üöÄ –ù–∞–∂–º–∏—Ç–µ '–ù–ê–ß–ê–¢–¨ –ù–ê–ë–õ–Æ–î–ï–ù–ò–ï' –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —è–π—Ü–æ!")
