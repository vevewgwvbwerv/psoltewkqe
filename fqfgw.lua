-- üé≠ –ö–û–ù–¢–†–û–õ–õ–ï–† IDLE –ê–ù–ò–ú–ê–¶–ò–ò - –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–ô–î–ï–ù–ù–û–ô –ê–ù–ò–ú–ê–¶–ò–ï–ô
-- –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è idle –∞–Ω–∏–º–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ AnimationTrack

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

print("üé≠ === –ö–û–ù–¢–†–û–õ–õ–ï–† IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
print("üéØ –¶–µ–ª—å: –£–ü–†–ê–í–õ–Ø–¢–¨ –Ω–∞–π–¥–µ–Ω–Ω–æ–π idle –∞–Ω–∏–º–∞—Ü–∏–µ–π rbxassetid://1073293904134356")

-- –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞
local playerChar = player.Character
if not playerChar then
    print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –∏–≥—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local hrp = playerChar:FindFirstChild("HumanoidRootPart")
if not hrp then
    print("‚ùå HumanoidRootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local playerPos = hrp.Position

-- üêæ –†–ê–ë–û–ß–ê–Ø –§–£–ù–ö–¶–ò–Ø –ü–û–ò–°–ö–ê –ü–ò–¢–û–ú–¶–ê (–∏–∑ PetScaler_v2.2)

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–∏—Ç–æ–º—Ü–∞
local function hasPetVisuals(model)
    local meshCount = 0
    local petMeshes = {}
    
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("MeshPart") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or ""
            }
            if meshData.meshId ~= "" then
                table.insert(petMeshes, meshData)
            end
        elseif obj:IsA("SpecialMesh") then
            meshCount = meshCount + 1
            local meshData = {
                name = obj.Name,
                className = obj.ClassName,
                meshId = obj.MeshId or "",
                textureId = obj.TextureId or ""
            }
            if meshData.meshId ~= "" or meshData.textureId ~= "" then
                table.insert(petMeshes, meshData)
            end
        end
    end
    
    return meshCount > 0, petMeshes
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞
local function findPet()
    print("üîç –ü–æ–∏—Å–∫ UUID –º–æ–¥–µ–ª–µ–π –ø–∏—Ç–æ–º—Ü–µ–≤...")
    
    local foundPets = {}
    local SEARCH_RADIUS = 100
    
    for _, obj in pairs(Workspace:GetDescendants()) do
        if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
            local success, modelCFrame = pcall(function() return obj:GetModelCFrame() end)
            if success then
                local distance = (modelCFrame.Position - playerPos).Magnitude
                if distance <= SEARCH_RADIUS then
                    local hasVisuals, meshes = hasPetVisuals(obj)
                    if hasVisuals then
                        table.insert(foundPets, {
                            model = obj,
                            distance = distance,
                            meshes = meshes
                        })
                        print("üêæ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü:", obj.Name, "–Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏:", math.floor(distance))
                    end
                end
            end
        end
    end
    
    if #foundPets == 0 then
        print("‚ùå –ü–∏—Ç–æ–º—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return nil
    end
    
    table.sort(foundPets, function(a, b) return a.distance < b.distance end)
    
    local targetPet = foundPets[1]
    print("üéØ –í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü:", targetPet.model.Name)
    
    return targetPet.model
end

-- üé≠ –ü–û–ò–°–ö –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï IDLE –ê–ù–ò–ú–ê–¶–ò–ï–ô
local function findAndControlIdleAnimation(petModel)
    print("\nüé≠ === –ü–û–ò–°–ö IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    -- –ü–æ–∏—Å–∫ AnimationController
    local animationController = nil
    for _, obj in pairs(petModel:GetDescendants()) do
        if obj:IsA("AnimationController") then
            animationController = obj
            break
        end
    end
    
    if not animationController then
        print("‚ùå AnimationController –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return nil
    end
    
    print("‚úÖ AnimationController –Ω–∞–π–¥–µ–Ω:", animationController:GetFullName())
    
    -- –ü–æ–∏—Å–∫ Animator –≤–Ω—É—Ç—Ä–∏ AnimationController
    local animator = animationController:FindFirstChildOfClass("Animator")
    if not animator then
        print("‚ùå Animator –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ AnimationController!")
        return nil
    end
    
    print("‚úÖ Animator –Ω–∞–π–¥–µ–Ω:", animator:GetFullName())
    
    -- –ü–æ–∏—Å–∫ idle –∞–Ω–∏–º–∞—Ü–∏–∏
    local idleTrack = nil
    local tracks = animator:GetPlayingAnimationTracks()
    
    print("üìΩÔ∏è –í—Å–µ–≥–æ –∏–≥—Ä–∞—é—â–∏—Ö –∞–Ω–∏–º–∞—Ü–∏–π:", #tracks)
    
    for i, track in pairs(tracks) do
        print(string.format("üé¨ –ê–Ω–∏–º–∞—Ü–∏—è %d:", i))
        print("  üìõ –ù–∞–∑–≤–∞–Ω–∏–µ:", track.Animation.Name)
        print("  üÜî ID:", track.Animation.AnimationId)
        print("  ‚ñ∂Ô∏è Playing:", track.IsPlaying)
        print("  üîÑ Looped:", track.Looped)
        print("  ‚ö° Priority:", track.Priority.Name)
        print("  ‚è±Ô∏è Time:", track.TimePosition, "/", track.Length or 0)
        print("  üîä Weight:", track.WeightCurrent)
        print("  üìà Speed:", track.Speed)
        
        -- –ò—â–µ–º idle –∞–Ω–∏–º–∞—Ü–∏—é
        if track.Animation.Name:lower():find("idle") or 
           track.Animation.AnimationId:find("1073293904134356") then
            idleTrack = track
            print("üéØ –ù–ê–ô–î–ï–ù–ê IDLE –ê–ù–ò–ú–ê–¶–ò–Ø!")
        end
    end
    
    return idleTrack, animator
end

-- üîÑ –ü–û–ü–´–¢–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø IDLE –ê–ù–ò–ú–ê–¶–ò–ï–ô
local function attemptIdleControl(idleTrack, animator)
    if not idleTrack then
        print("‚ùå Idle –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è!")
        return
    end
    
    print("\nüé≠ === –ü–û–ü–´–¢–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø IDLE –ê–ù–ò–ú–ê–¶–ò–ï–ô ===")
    
    -- –ú–µ—Ç–æ–¥ 1: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ
    print("üîÑ –ú–µ—Ç–æ–¥ 1: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ...")
    local success1 = pcall(function()
        idleTrack.Looped = true
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Looped = true")
    end)
    if not success1 then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Looped = true")
    end
    
    -- –ú–µ—Ç–æ–¥ 2: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    print("‚ö° –ú–µ—Ç–æ–¥ 2: –ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞...")
    local success2 = pcall(function()
        idleTrack.Priority = Enum.AnimationPriority.Action
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç Action")
    end)
    if not success2 then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç")
    end
    
    -- –ú–µ—Ç–æ–¥ 3: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
    print("üìà –ú–µ—Ç–æ–¥ 3: –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏...")
    local success3 = pcall(function()
        idleTrack:AdjustSpeed(1.0)
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å 1.0")
    end)
    if not success3 then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å")
    end
    
    -- –ú–µ—Ç–æ–¥ 4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
    print("üîÑ –ú–µ—Ç–æ–¥ 4: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...")
    local success4 = pcall(function()
        idleTrack:Stop()
        wait(0.1)
        idleTrack:Play()
        print("‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞")
    end)
    if not success4 then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é")
    end
    
    -- –ú–µ—Ç–æ–¥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ idle —Ç—Ä–µ–∫–∞
    print("üé≠ –ú–µ—Ç–æ–¥ 5: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ idle —Ç—Ä–µ–∫–∞...")
    local success5 = pcall(function()
        local idleAnimation = Instance.new("Animation")
        idleAnimation.AnimationId = "rbxassetid://1073293904134356"
        
        local newIdleTrack = animator:LoadAnimation(idleAnimation)
        newIdleTrack.Looped = true
        newIdleTrack.Priority = Enum.AnimationPriority.Action
        newIdleTrack:Play()
        
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π idle —Ç—Ä–µ–∫")
        return newIdleTrack
    end)
    if not success5 then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π idle —Ç—Ä–µ–∫")
    end
    
    return success1 or success2 or success3 or success4 or success5
end

-- üîÑ –ú–û–ù–ò–¢–û–†–ò–ù–ì –ò –ü–û–î–î–ï–†–ñ–ê–ù–ò–ï IDLE
local function startIdleMaintenance(petModel)
    print("\nüîÑ === –ó–ê–ü–£–°–ö –ü–û–î–î–ï–†–ñ–ê–ù–ò–Ø IDLE ===")
    
    local rootPart = petModel:FindFirstChild("RootPart") or petModel:FindFirstChild("Torso") or petModel:FindFirstChild("HumanoidRootPart")
    if not rootPart then
        print("‚ùå RootPart –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    end
    
    local lastPosition = rootPart.Position
    local isMoving = false
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
        local currentPos = rootPart.Position
        local distance = (currentPos - lastPosition).Magnitude
        
        if distance > 0.1 then
            if not isMoving then
                print("\nüèÉ === –ü–ò–¢–û–ú–ï–¶ –ù–ê–ß–ê–õ –î–í–ò–ì–ê–¢–¨–°–Ø ===")
                isMoving = true
            end
        else
            if isMoving then
                print("\nüõë === –ü–ò–¢–û–ú–ï–¶ –û–°–¢–ê–ù–û–í–ò–õ–°–Ø ===")
                isMoving = false
                
                -- –ö–æ–≥–¥–∞ –ø–∏—Ç–æ–º–µ—Ü –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è - –ø—ã—Ç–∞–µ–º—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å idle
                spawn(function()
                    wait(1) -- –ñ–¥–µ–º —Å–µ–∫—É–Ω–¥—É –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏
                    print("üé≠ –ü–æ–ø—ã—Ç–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è idle –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                    
                    local idleTrack, animator = findAndControlIdleAnimation(petModel)
                    if idleTrack then
                        attemptIdleControl(idleTrack, animator)
                    end
                end)
            end
        end
        
        lastPosition = currentPos
        
        -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        if tick() % 5 < 0.02 and not isMoving then
            print("\nüîÑ === –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê IDLE ===")
            local idleTrack, animator = findAndControlIdleAnimation(petModel)
            if idleTrack then
                print("üé≠ Idle –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞, —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")
                print("  ‚ñ∂Ô∏è Playing:", idleTrack.IsPlaying)
                print("  üîÑ Looped:", idleTrack.Looped)
                print("  ‚è±Ô∏è Time:", idleTrack.TimePosition, "/", idleTrack.Length or 0)
                
                -- –ï—Å–ª–∏ –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –∑–∞—Ü–∏–∫–ª–µ–Ω–∞ - –ø—ã—Ç–∞–µ–º—Å—è –∑–∞—Ü–∏–∫–ª–∏—Ç—å
                if not idleTrack.Looped then
                    print("‚ö†Ô∏è –ê–Ω–∏–º–∞—Ü–∏—è –Ω–µ –∑–∞—Ü–∏–∫–ª–µ–Ω–∞! –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å...")
                    attemptIdleControl(idleTrack, animator)
                end
            end
        end
    end)
    
    print("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ idle –∑–∞–ø—É—â–µ–Ω!")
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 120 —Å–µ–∫—É–Ω–¥
    spawn(function()
        wait(120)
        connection:Disconnect()
        print("\n‚èπÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ idle –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    end)
    
    return connection
end

-- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
local function main()
    local petModel = findPet()
    if not petModel then
        return
    end
    
    print("\nüé≠ === –ù–ê–ß–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
    local idleTrack, animator = findAndControlIdleAnimation(petModel)
    
    if idleTrack then
        print("\nüéØ === –ü–û–ü–´–¢–ö–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===")
        local controlSuccess = attemptIdleControl(idleTrack, animator)
        
        if controlSuccess then
            print("‚úÖ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∏!")
        else
            print("‚ùå –í—Å–µ –º–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏")
        end
    else
        print("‚ùå Idle –∞–Ω–∏–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    end
    
    print("\nüîÑ === –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê ===")
    local connection = startIdleMaintenance(petModel)
end

-- üöÄ –ü–†–Ø–ú–û–ô –ó–ê–ü–£–°–ö
print("\nüöÄ === –ó–ê–ü–£–°–ö–ê–Æ –ö–û–ù–¢–†–û–õ–õ–ï–† IDLE –ê–ù–ò–ú–ê–¶–ò–ò ===")
print("üé≠ –ü–æ–ø—ã—Ç–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è rbxassetid://1073293904134356")
print("üî¨ –ê–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –∏–¥—Ç–∏ 120 —Å–µ–∫—É–Ω–¥...")

spawn(function()
    wait(2)
    main()
end)

print("\nüí° === –ú–ï–¢–û–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===")
print("üîÑ 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ (Looped = true)")
print("‚ö° 2. –ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –∞–Ω–∏–º–∞—Ü–∏–∏")
print("üìà 3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏")
print("üîÑ 4. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫")
print("üé≠ 5. –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ idle —Ç—Ä–µ–∫–∞")
print("\nüöÄ –ö–û–ù–¢–†–û–õ–õ–ï–† –ó–ê–ü–£–©–ï–ù!")
