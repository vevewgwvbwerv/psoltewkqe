-- AdvancedShovelReplacer.lua
-- –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –º–µ—Ç–æ–¥–∞—Ö –∏–∑ CFrameAnimationDiagnostic –∏ ComprehensiveEggPetAnimationAnalyzer
-- –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç CFrame –∞–Ω–∏–º–∞—Ü–∏—é –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

print("=== ADVANCED SHOVEL REPLACER ===")

-- –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
local scannedPetData = nil
local animationConnection = nil

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ Shovel –≤ —Ä—É–∫–∞—Ö
local function findShovelInHands()
    local character = player.Character
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and (string.find(tool.Name, "Shovel") or string.find(tool.Name, "Destroy")) then
            return tool
        end
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∞—Ö (–∏–∑ CFrameAnimationDiagnostic)
local function findHandHeldPet()
    local character = player.Character
    if not character then return nil end
    
    local handTool = character:FindFirstChildOfClass("Tool")
    if not handTool then return nil end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–∏—Ç–æ–º–µ—Ü (—Å–æ–¥–µ—Ä–∂–∏—Ç KG –∏ Age)
    if string.find(handTool.Name, "%[") and string.find(handTool.Name, "KG%]") then
        print("üéØ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ:", handTool.Name)
        return handTool
    end
    
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∞–Ω–∏–º–∏—Ä—É–µ–º—ã—Ö —á–∞—Å—Ç–µ–π –∏–∑ Tool (–∏–∑ CFrameAnimationDiagnostic)
local function getAnimatedPartsFromTool(tool)
    local parts = {}
    
    if not tool then return parts end
    
    for _, obj in pairs(tool:GetDescendants()) do
        if obj:IsA("BasePart") and obj.Name ~= "Handle" then
            table.insert(parts, obj)
        end
    end
    
    return parts
end

-- –§—É–Ω–∫—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —á–∞—Å—Ç–µ–π –º–æ–¥–µ–ª–∏ (–∏–∑ CFrameAnimationDiagnostic)
local function analyzeParts(model, modelName)
    print(string.format("\nüìä === –ê–ù–ê–õ–ò–ó –ß–ê–°–¢–ï–ô: %s ===", modelName))
    
    local parts = {}
    for _, obj in pairs(model:GetDescendants()) do
        if obj:IsA("BasePart") then
            table.insert(parts, obj)
        end
    end
    
    print(string.format("üì¶ –í—Å–µ–≥–æ BasePart: %d", #parts))
    
    -- –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —á–∞—Å—Ç–∏ –ø–æ —Ç–∏–ø–∞–º
    local partsByName = {}
    for _, part in ipairs(parts) do
        local name = part.Name
        if not partsByName[name] then
            partsByName[name] = 0
        end
        partsByName[name] = partsByName[name] + 1
    end
    
    print("üìã –ß–∞—Å—Ç–∏ –ø–æ –∏–º–µ–Ω–∞–º:")
    for name, count in pairs(partsByName) do
        print(string.format("  - %s: %d —à—Ç", name, count))
    end
    
    return parts, partsByName
end

-- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º CFrame –∞–Ω–∏–º–∞—Ü–∏–∏
local function scanPetWithAnimation()
    print("\nüîç === –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ü–ò–¢–û–ú–¶–ê –° –ê–ù–ò–ú–ê–¶–ò–ï–ô ===")
    
    local pet = findHandHeldPet()
    if not pet then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü: " .. pet.Name)
    
    -- –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–Ω–∏–º–∏—Ä—É–µ–º—ã–µ —á–∞—Å—Ç–∏
    local animatedParts = getAnimatedPartsFromTool(pet)
    print(string.format("üì¶ –ê–Ω–∏–º–∏—Ä—É–µ–º—ã—Ö —á–∞—Å—Ç–µ–π: %d", #animatedParts))
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    local allParts, partsByName = analyzeParts(pet, "–ü–ò–¢–û–ú–ï–¶ –í –†–£–ö–ï")
    
    -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü–∞
    scannedPetData = {
        name = pet.Name,
        className = pet.ClassName,
        properties = {},
        children = {},
        animatedParts = {},
        staticCFrames = {},
        motor6ds = {},
        welds = {},
        animations = {},
        partsByName = partsByName
    }
    
    -- –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ Tool
    local importantProps = {"RequiresHandle", "CanBeDropped", "Enabled", "ManualActivationOnly"}
    for _, prop in pairs(importantProps) do
        pcall(function()
            scannedPetData.properties[prop] = pet[prop]
        end)
    end
    
    -- –ì–ª—É–±–æ–∫–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–µ–π —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–≤—è–∑–µ–π
    for _, child in pairs(pet:GetChildren()) do
        local childData = {
            name = child.Name,
            className = child.ClassName,
            object = child:Clone()
        }
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ CFrame –¥–ª—è BasePart
        if child:IsA("BasePart") then
            scannedPetData.staticCFrames[child.Name] = child.CFrame
            print("   üìê –°–æ—Ö—Ä–∞–Ω–µ–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π CFrame: " .. child.Name)
        end
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º Motor6D —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if child:IsA("Motor6D") then
            local motor6dData = {
                name = child.Name,
                part0Name = child.Part0 and child.Part0.Name or nil,
                part1Name = child.Part1 and child.Part1.Name or nil,
                c0 = child.C0,
                c1 = child.C1,
                currentAngle = child.CurrentAngle,
                desiredAngle = child.DesiredAngle
            }
            scannedPetData.motor6ds[child.Name] = motor6dData
            print("   üîó –°–æ—Ö—Ä–∞–Ω–µ–Ω Motor6D: " .. child.Name)
        end
        
        -- –°–æ—Ö—Ä–∞–Ω—è–µ–º Weld —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if child:IsA("Weld") then
            local weldData = {
                name = child.Name,
                part0Name = child.Part0 and child.Part0.Name or nil,
                part1Name = child.Part1 and child.Part1.Name or nil,
                c0 = child.C0,
                c1 = child.C1
            }
            scannedPetData.welds[child.Name] = weldData
            print("   üîó –°–æ—Ö—Ä–∞–Ω–µ–Ω Weld: " .. child.Name)
        end
        
        table.insert(scannedPetData.children, childData)
    end
    
    -- –ö–õ–Æ–ß–ï–í–ê–Ø –ß–ê–°–¢–¨: –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ CFrame –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    print("\nüé¨ === –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï CFrame –ê–ù–ò–ú–ê–¶–ò–ò ===")
    print("–ó–∞–ø–∏—Å—ã–≤–∞—é –∞–Ω–∏–º–∞—Ü–∏—é –≤ —Ç–µ—á–µ–Ω–∏–µ 5 —Å–µ–∫—É–Ω–¥...")
    
    local previousStates = {}
    local animationFrames = {}
    local frameCount = 0
    
    -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for _, part in ipairs(animatedParts) do
        if part and part.Parent then
            previousStates[part.Name] = part.CFrame
            animationFrames[part.Name] = {}
        end
    end
    
    local startTime = tick()
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if animationConnection and animationConnection.Connected then
        animationConnection:Disconnect()
        animationConnection = nil
    end
    
    animationConnection = RunService.Heartbeat:Connect(function()
        local currentTime = tick()
        local elapsed = currentTime - startTime
        
        -- –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞–¥—Ä—ã –∫–∞–∂–¥—ã–µ 0.05 —Å–µ–∫—É–Ω–¥—ã
        if elapsed % 0.05 < 0.016 then
            frameCount = frameCount + 1
            
            for _, part in ipairs(animatedParts) do
                if part and part.Parent then
                    local partName = part.Name
                    local currentCFrame = part.CFrame
                    
                    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–¥—Ä –∞–Ω–∏–º–∞—Ü–∏–∏
                    if not animationFrames[partName] then
                        animationFrames[partName] = {}
                    end
                    
                    table.insert(animationFrames[partName], {
                        time = elapsed,
                        cframe = currentCFrame
                    })
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    if previousStates[partName] then
                        local prevCFrame = previousStates[partName]
                        local positionDiff = (currentCFrame.Position - prevCFrame.Position).Magnitude
                        local rotationDiff = math.abs(currentCFrame.LookVector:Dot(prevCFrame.LookVector) - 1)
                        
                        if positionDiff > 0.001 or rotationDiff > 0.001 then
                            print(string.format("üîÑ –ê–Ω–∏–º–∞—Ü–∏—è: %s (pos: %.3f, rot: %.3f)", partName, positionDiff, rotationDiff))
                        end
                    end
                    
                    previousStates[partName] = currentCFrame
                end
            end
        end
        
        -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        if elapsed > 5 then
            animationConnection:Disconnect()
            animationConnection = nil
            
            -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å–∞–Ω–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
            scannedPetData.animationFrames = animationFrames
            scannedPetData.totalFrames = frameCount
            
            print(string.format("\nüìä –ê–ù–ò–ú–ê–¶–ò–Ø –ó–ê–ü–ò–°–ê–ù–ê:"))
            print(string.format("üé¨ –í—Å–µ–≥–æ –∫–∞–¥—Ä–æ–≤: %d", frameCount))
            print(string.format("‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: %.1f —Å–µ–∫", elapsed))
            
            local animatedPartsCount = 0
            for partName, frames in pairs(animationFrames) do
                if #frames > 0 then
                    animatedPartsCount = animatedPartsCount + 1
                    print(string.format("  - %s: %d –∫–∞–¥—Ä–æ–≤", partName, #frames))
                end
            end
            
            print(string.format("üé≠ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π: %d", animatedPartsCount))
            print("‚úÖ –ü–∏—Ç–æ–º–µ—Ü –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω —Å –∑–∞–ø–∏—Å—å—é –∞–Ω–∏–º–∞—Ü–∏–∏!")
        end
    end)
    
    return true
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã Shovel —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
local function replaceShovelWithAnimation()
    print("\nüîÑ === –ó–ê–ú–ï–ù–ê SHOVEL –° –í–û–°–ü–†–û–ò–ó–í–ï–î–ï–ù–ò–ï–ú –ê–ù–ò–ú–ê–¶–ò–ò ===")
    
    if not scannedPetData then
        print("‚ùå –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω! –°–Ω–∞—á–∞–ª–∞ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –ø–∏—Ç–æ–º—Ü–∞.")
        return false
    end
    
    local shovel = findShovelInHands()
    if not shovel then
        print("‚ùå Shovel –≤ —Ä—É–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω Shovel: " .. shovel.Name)
    print("üîß –ó–∞–º–µ–Ω—è—é Shovel –Ω–∞ –ø–∏—Ç–æ–º—Ü–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π...")
    
    -- –®–∞–≥ 1: –ú–µ–Ω—è–µ–º –∏–º—è Shovel
    shovel.Name = "Dragonfly [6.36 KG] [Age 35]"
    print("‚úÖ –ò–º—è –∏–∑–º–µ–Ω–µ–Ω–æ: " .. shovel.Name)
    
    -- –®–∞–≥ 2: –£–¥–∞–ª—è–µ–º –≤—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Shovel
    print("üóëÔ∏è –û—á–∏—â–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Shovel...")
    for _, child in pairs(shovel:GetChildren()) do
        child:Destroy()
    end
    
    wait(0.1)
    
    -- –®–∞–≥ 3: –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Ç–æ–º—Ü–∞
    print("üìã –î–æ–±–∞–≤–ª—è—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Ç–æ–º—Ü–∞...")
    local addedParts = {}
    
    for _, childData in pairs(scannedPetData.children) do
        local newChild = childData.object:Clone()
        newChild.Parent = shovel
        
        if newChild:IsA("BasePart") then
            addedParts[newChild.Name] = newChild
            -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π CFrame
            if scannedPetData.staticCFrames[newChild.Name] then
                newChild.CFrame = scannedPetData.staticCFrames[newChild.Name]
            end
        end
        
        print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: " .. newChild.Name .. " (" .. newChild.ClassName .. ")")
    end
    
    -- –®–∞–≥ 4: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Motor6D –∏ Weld —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    print("üîó –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    
    -- Motor6D
    for motorName, motorData in pairs(scannedPetData.motor6ds) do
        local motor = shovel:FindFirstChild(motorName)
        if motor and motor:IsA("Motor6D") then
            if motorData.part0Name then
                motor.Part0 = addedParts[motorData.part0Name]
            end
            if motorData.part1Name then
                motor.Part1 = addedParts[motorData.part1Name]
            end
            motor.C0 = motorData.c0
            motor.C1 = motorData.c1
            motor.CurrentAngle = motorData.currentAngle
            motor.DesiredAngle = motorData.desiredAngle
            print("   üîó –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Motor6D: " .. motorName)
        end
    end
    
    -- Weld
    for weldName, weldData in pairs(scannedPetData.welds) do
        local weld = shovel:FindFirstChild(weldName)
        if weld and weld:IsA("Weld") then
            if weldData.part0Name then
                weld.Part0 = addedParts[weldData.part0Name]
            end
            if weldData.part1Name then
                weld.Part1 = addedParts[weldData.part1Name]
            end
            weld.C0 = weldData.c0
            weld.C1 = weldData.c1
            print("   üîó –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω Weld: " .. weldName)
        end
    end
    
    -- –®–∞–≥ 5: –ö–æ–ø–∏—Ä—É–µ–º —Å–≤–æ–π—Å—Ç–≤–∞
    for property, value in pairs(scannedPetData.properties) do
        pcall(function()
            if property ~= "Name" and property ~= "Parent" then
                shovel[property] = value
            end
        end)
    end
    
    -- –®–∞–≥ 6: –í–û–°–ü–†–û–ò–ó–í–û–î–ò–ú –ê–ù–ò–ú–ê–¶–ò–Æ
    if scannedPetData.animationFrames and next(scannedPetData.animationFrames) then
        print("üé¨ –ó–∞–ø—É—Å–∫–∞—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏...")
        
        local animStartTime = tick()
        local animConnection
        
        animConnection = RunService.Heartbeat:Connect(function()
            local elapsed = tick() - animStartTime
            
            -- –¶–∏–∫–ª–∏—á–µ—Å–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞–Ω–∏–º–∞—Ü–∏—é (5 —Å–µ–∫—É–Ω–¥ —Ü–∏–∫–ª)
            local cycleTime = elapsed % 5
            
            for partName, frames in pairs(scannedPetData.animationFrames) do
                local part = addedParts[partName]
                if part and #frames > 0 then
                    -- –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à–∏–π –∫–∞–¥—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏
                    local bestFrame = frames[1]
                    local bestTimeDiff = math.abs(cycleTime - bestFrame.time)
                    
                    for _, frame in ipairs(frames) do
                        local timeDiff = math.abs(cycleTime - frame.time)
                        if timeDiff < bestTimeDiff then
                            bestTimeDiff = timeDiff
                            bestFrame = frame
                        end
                    end
                    
                    -- –ü—Ä–∏–º–µ–Ω—è–µ–º CFrame –∏–∑ –∫–∞–¥—Ä–∞
                    part.CFrame = bestFrame.cframe
                end
            end
        end)
        
        print("‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ü–∏–∫–ª–µ!")
    end
    
    print("üéØ === –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
    print("‚úÖ Shovel –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –ø–∏—Ç–æ–º—Ü–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π!")
    print("üìù –ù–æ–≤–æ–µ –∏–º—è: " .. shovel.Name)
    print("üé¨ –ê–Ω–∏–º–∞—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏")
    print("üéÆ –ü–∏—Ç–æ–º–µ—Ü –¥–æ–ª–∂–µ–Ω –¥–≤–∏–≥–∞—Ç—å—Å—è –∫–∞–∫ –æ—Ä–∏–≥–∏–Ω–∞–ª!")
    
    return true
end

-- –°–æ–∑–¥–∞–µ–º GUI
local function createAdvancedReplacerGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AdvancedShovelReplacerGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 450, 0, 350)
    frame.Position = UDim2.new(0.5, -225, 0.5, -175)
    frame.BackgroundColor3 = Color3.new(0.1, 0.2, 0.3)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.BackgroundColor3 = Color3.new(0.2, 0.4, 0.6)
    title.BorderSizePixel = 0
    title.Text = "üé¨ ADVANCED SHOVEL REPLACER"
    title.TextColor3 = Color3.new(1, 1, 1)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = frame
    
    local status = Instance.new("TextLabel")
    status.Size = UDim2.new(1, -20, 0, 80)
    status.Position = UDim2.new(0, 10, 0, 50)
    status.BackgroundTransparency = 1
    status.Text = "1. –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏\n2. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ —Å –∑–∞–ø–∏—Å—å—é –∞–Ω–∏–º–∞—Ü–∏–∏ (5 —Å–µ–∫)\n3. –í–æ–∑—å–º–∏—Ç–µ Shovel\n4. –ó–∞–º–µ–Ω–∏—Ç–µ —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏"
    status.TextColor3 = Color3.new(1, 1, 1)
    status.TextScaled = true
    status.Font = Enum.Font.SourceSans
    status.TextWrapped = true
    status.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    local scanBtn = Instance.new("TextButton")
    scanBtn.Size = UDim2.new(1, -20, 0, 50)
    scanBtn.Position = UDim2.new(0, 10, 0, 140)
    scanBtn.BackgroundColor3 = Color3.new(0, 0.8, 0)
    scanBtn.BorderSizePixel = 0
    scanBtn.Text = "üé¨ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –∑–∞–ø–∏—Å—å—é –∞–Ω–∏–º–∞—Ü–∏–∏"
    scanBtn.TextColor3 = Color3.new(1, 1, 1)
    scanBtn.TextScaled = true
    scanBtn.Font = Enum.Font.SourceSansBold
    scanBtn.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–º–µ–Ω—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    local replaceBtn = Instance.new("TextButton")
    replaceBtn.Size = UDim2.new(1, -20, 0, 50)
    replaceBtn.Position = UDim2.new(0, 10, 0, 200)
    replaceBtn.BackgroundColor3 = Color3.new(0.8, 0.4, 0)
    replaceBtn.BorderSizePixel = 0
    replaceBtn.Text = "üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏"
    replaceBtn.TextColor3 = Color3.new(1, 1, 1)
    replaceBtn.TextScaled = true
    replaceBtn.Font = Enum.Font.SourceSansBold
    replaceBtn.Visible = false
    replaceBtn.Parent = frame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(1, -20, 0, 40)
    closeBtn.Position = UDim2.new(0, 10, 0, 260)
    closeBtn.BackgroundColor3 = Color3.new(0.6, 0.2, 0.2)
    closeBtn.BorderSizePixel = 0
    closeBtn.Text = "‚ùå –ó–∞–∫—Ä—ã—Ç—å"
    closeBtn.TextColor3 = Color3.new(1, 1, 1)
    closeBtn.TextScaled = true
    closeBtn.Font = Enum.Font.SourceSansBold
    closeBtn.Parent = frame
    
    -- –°–æ–±—ã—Ç–∏—è
    scanBtn.MouseButton1Click:Connect(function()
        status.Text = "üé¨ –°–∫–∞–Ω–∏—Ä—É—é –ø–∏—Ç–æ–º—Ü–∞ —Å –∑–∞–ø–∏—Å—å—é –∞–Ω–∏–º–∞—Ü–∏–∏...\n–î–µ—Ä–∂–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∞—Ö 5 —Å–µ–∫—É–Ω–¥!"
        status.TextColor3 = Color3.new(1, 1, 0)
        scanBtn.Enabled = false
        
        local success = scanPetWithAnimation()
        
        wait(6) -- –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
        
        if success and scannedPetData then
            status.Text = "‚úÖ –ü–∏—Ç–æ–º–µ—Ü –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π!\n–¢–µ–ø–µ—Ä—å –≤–æ–∑—å–º–∏—Ç–µ Shovel –∏ –∑–∞–º–µ–Ω–∏—Ç–µ."
            status.TextColor3 = Color3.new(0, 1, 0)
            replaceBtn.Visible = true
        else
            status.Text = "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è!\n–í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏."
            status.TextColor3 = Color3.new(1, 0, 0)
        end
        
        scanBtn.Enabled = true
    end)
    
    replaceBtn.MouseButton1Click:Connect(function()
        status.Text = "üîÑ –ó–∞–º–µ–Ω—è—é Shovel —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏..."
        status.TextColor3 = Color3.new(1, 1, 0)
        
        local success = replaceShovelWithAnimation()
        
        if success then
            status.Text = "‚úÖ Shovel –∑–∞–º–µ–Ω–µ–Ω —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π!\n–ü–∏—Ç–æ–º–µ—Ü –¥–æ–ª–∂–µ–Ω –¥–≤–∏–≥–∞—Ç—å—Å—è!"
            status.TextColor3 = Color3.new(0, 1, 0)
        else
            status.Text = "‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã!\n–í–æ–∑—å–º–∏—Ç–µ Shovel –≤ —Ä—É–∫–∏."
            status.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    closeBtn.MouseButton1Click:Connect(function()
        if animationConnection and animationConnection.Connected then
            animationConnection:Disconnect()
            animationConnection = nil
        end
        screenGui:Destroy()
    end)
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º
createAdvancedReplacerGUI()
print("‚úÖ AdvancedShovelReplacer –≥–æ—Ç–æ–≤!")
print("üé¨ –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –º–µ—Ç–æ–¥–∞—Ö –∏–∑ CFrameAnimationDiagnostic")
print("üîç 1. –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏")
print("üé¨ 2. –ù–∞–∂–º–∏—Ç–µ '–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –∑–∞–ø–∏—Å—å—é –∞–Ω–∏–º–∞—Ü–∏–∏'")
print("üîÑ 3. –í–æ–∑—å–º–∏—Ç–µ Shovel –∏ –Ω–∞–∂–º–∏—Ç–µ '–ó–∞–º–µ–Ω–∏—Ç—å —Å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏'")
