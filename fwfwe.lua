-- DetailedInventoryAnalyzer.lua
-- –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –í–°–ï–• —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ BackpackGui

local Players = game:GetService("Players")
local player = Players.LocalPlayer

print("üîç === –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ò–ù–í–ï–ù–¢–ê–†–Ø ===")

local playerGui = player:FindFirstChild("PlayerGui")
if not playerGui then
    print("‚ùå PlayerGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local backpackGui = playerGui:FindFirstChild("BackpackGui")
if not backpackGui then
    print("‚ùå BackpackGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

print("‚úÖ BackpackGui –Ω–∞–π–¥–µ–Ω!")
print("üìä –ö–ª–∞—Å—Å: " .. backpackGui.ClassName)
print("üëÅÔ∏è –í–∏–¥–∏–º—ã–π: " .. tostring(backpackGui.Visible))
print("")

-- –§—É–Ω–∫—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
local function analyzeDetailed(element, depth, path)
    depth = depth or 0
    path = path or ""
    
    if depth > 5 then return end -- –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥–ª—É–±–∏–Ω—É
    
    local indent = string.rep("  ", depth)
    local fullPath = path .. "/" .. element.Name
    
    -- –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–ª–µ–º–µ–Ω—Ç–µ
    local info = indent .. "üìÅ " .. element.Name .. " (" .. element.ClassName .. ")"
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if element:IsA("GuiObject") then
        info = info .. " [–í–∏–¥–∏–º—ã–π: " .. tostring(element.Visible) .. "]"
        
        if element:IsA("Frame") or element:IsA("ScrollingFrame") then
            local children = element:GetChildren()
            local visibleChildren = 0
            
            for _, child in pairs(children) do
                if child:IsA("GuiObject") and child.Visible then
                    visibleChildren = visibleChildren + 1
                end
            end
            
            info = info .. " [–î–µ—Ç–µ–π: " .. #children .. ", –í–∏–¥–∏–º—ã—Ö: " .. visibleChildren .. "]"
        end
    end
    
    print(info)
    
    -- –ï—Å–ª–∏ —ç—Ç–æ TextButton, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    if element:IsA("TextButton") then
        for _, desc in pairs(element:GetDescendants()) do
            if desc:IsA("TextLabel") and desc.Text ~= "" then
                print(indent .. "   üìù –¢–µ–∫—Å—Ç: \"" .. desc.Text .. "\"")
                break
            end
        end
    end
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    local children = element:GetChildren()
    if #children > 0 then
        -- –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        local frameCount = 0
        local buttonCount = 0
        local labelCount = 0
        local otherCount = 0
        
        for _, child in pairs(children) do
            if child:IsA("Frame") or child:IsA("ScrollingFrame") then
                frameCount = frameCount + 1
            elseif child:IsA("TextButton") or child:IsA("ImageButton") then
                buttonCount = buttonCount + 1
            elseif child:IsA("TextLabel") or child:IsA("ImageLabel") then
                labelCount = labelCount + 1
            else
                otherCount = otherCount + 1
            end
        end
        
        if frameCount > 0 or buttonCount > 0 or labelCount > 0 or otherCount > 0 then
            print(indent .. "   üìä –°–æ–¥–µ—Ä–∂–∏—Ç: –§—Ä–µ–π–º–æ–≤=" .. frameCount .. ", –ö–Ω–æ–ø–æ–∫=" .. buttonCount .. ", –õ–µ–π–±–ª–æ–≤=" .. labelCount .. ", –î—Ä—É–≥–∏—Ö=" .. otherCount)
        end
        
        -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞
        for _, child in pairs(children) do
            analyzeDetailed(child, depth + 1, fullPath)
        end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —ç—Ç–æ –±—ã—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º
    if element:IsA("Frame") or element:IsA("ScrollingFrame") then
        local childButtons = 0
        local childPets = 0
        local childItems = 0
        
        for _, child in pairs(element:GetChildren()) do
            if child:IsA("TextButton") and child.Visible then
                childButtons = childButtons + 1
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                for _, desc in pairs(child:GetDescendants()) do
                    if desc:IsA("TextLabel") and desc.Text ~= "" then
                        if desc.Text:lower():find("kg") and desc.Text:lower():find("age") then
                            childPets = childPets + 1
                        else
                            childItems = childItems + 1
                        end
                        break
                    end
                end
            end
        end
        
        if childButtons >= 5 and childButtons <= 15 and (childPets > 0 or childItems > 0) then
            print(indent .. "   ‚≠ê –í–û–ó–ú–û–ñ–ù–´–ô –û–°–ù–û–í–ù–û–ô –ò–ù–í–ï–ù–¢–ê–†–¨!")
            print(indent .. "   üéØ –ü—É—Ç—å: " .. fullPath)
            print(indent .. "   üìà –ö–Ω–æ–ø–æ–∫: " .. childButtons .. ", –ü–∏—Ç–æ–º—Ü–µ–≤: " .. childPets .. ", –ü—Ä–µ–¥–º–µ—Ç–æ–≤: " .. childItems)
        end
    end
end

-- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º BackpackGui
print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é BackpackGui:")
analyzeDetailed(backpackGui, 0, "PlayerGui")

print("")
print("üéØ === –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù ===")
print("üí° –ò—â–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø–æ–º–µ—Ç–∫–æ–π ‚≠ê –í–û–ó–ú–û–ñ–ù–´–ô –û–°–ù–û–í–ù–û–ô –ò–ù–í–ï–ù–¢–ê–†–¨!")
print("üìã –ï—Å–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω —Å–∫—Ä—ã—Ç –∏–ª–∏ –∏–º–µ–µ—Ç –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É")
