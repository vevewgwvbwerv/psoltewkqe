-- Pet Creation Analyzer v3.0 - –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
-- –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –≤—ã–∑—ã–≤–∞—é—â–∏—Ö –æ—à–∏–±–∫–∏

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local gui = nil
local consoleOutput = {}
local petEvents = {}
local scriptRunning = true
local connections = {} -- –•—Ä–∞–Ω–∏–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è

print("üöÄ Pet Creation Analyzer v3.0 - –ó–∞–ø—É—Å–∫...")

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∏—Ç–æ–º—Ü–∞ (–ö–ê–ö –í FutureBestVisual.lua)
local function isPetTool(name)
    if not name then return false end
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑ FutureBestVisual.lua:
    return name:find("KG") or name:find("Dragonfly") or 
           (name:find("%{") and name:find("%}")) or
           (name:find("%[") and name:find("%]") and name:find("Age"))
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UUID –∏–º–µ–Ω–∏ (–¢–û–ß–ù–ê–Ø –ö–ê–ö –í FutureBestVisual)
local function isUUIDName(name)
    if not name then return false end
    -- UUID —Ñ–æ—Ä–º–∞—Ç: {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}
    return name:find("%{") and name:find("%}") and name:find("%-")
end

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª—é–±—ã—Ö —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫
local function hasCurlyBraces(name)
    if not name then return false end
    return name:find("{") and name:find("}")
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function logEvent(eventType, petName, details)
    local timestamp = os.date("%H:%M:%S")
    local logMessage = string.format("[%s] %s: %s", timestamp, eventType, petName or "Unknown")
    
    print(logMessage)
    table.insert(consoleOutput, logMessage)
    
    if details then
        for key, value in pairs(details) do
            local detailMsg = string.format("  %s: %s", key, tostring(value))
            print(detailMsg)
            table.insert(consoleOutput, detailMsg)
        end
    end
    
    -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞
    if #consoleOutput > 50 then
        table.remove(consoleOutput, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º GUI –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if gui and gui.Parent then
        local success = pcall(function()
            local consoleFrame = gui:FindFirstChild("ConsoleFrame", true)
            local consoleText = gui:FindFirstChild("ConsoleText", true)
            if consoleText and consoleFrame then
                -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º)
                local displayText = ""
                for i = 1, #consoleOutput do
                    displayText = displayText .. consoleOutput[i] .. "\n"
                end
                consoleText.Text = displayText
                
                -- –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä canvas –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
                local textHeight = consoleText.TextBounds.Y
                consoleFrame.CanvasSize = UDim2.new(0, 0, 0, math.max(textHeight + 50, 1000))
                
                -- –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                consoleFrame.CanvasPosition = Vector2.new(0, math.max(0, textHeight - consoleFrame.AbsoluteSize.Y + 50))
            end
        end)
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ GUI
local function createSimpleGUI()
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ GUI...")
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI
    local oldGui = playerGui:FindFirstChild("PetAnalyzerGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetAnalyzerGUI"
    screenGui.ResetOnSpawn = false
    
    -- –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.2)
    mainFrame.BorderSizePixel = 3
    mainFrame.BorderColor3 = Color3.new(0, 0.5, 1)
    mainFrame.Parent = screenGui
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundColor3 = Color3.new(0, 0.3, 0.8)
    titleLabel.BorderSizePixel = 0
    titleLabel.Text = "Pet Creation Analyzer v3.0 - WORKING"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = mainFrame
    
    -- –ö–æ–Ω—Å–æ–ª—å —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
    local consoleFrame = Instance.new("ScrollingFrame")
    consoleFrame.Name = "ConsoleFrame"
    consoleFrame.Size = UDim2.new(1, -10, 1, -80)
    consoleFrame.Position = UDim2.new(0, 5, 0, 35)
    consoleFrame.BackgroundColor3 = Color3.new(0, 0, 0)
    consoleFrame.BorderSizePixel = 2
    consoleFrame.BorderColor3 = Color3.new(0.3, 0.3, 0.3)
    consoleFrame.ScrollBarThickness = 10
    consoleFrame.ScrollBarImageColor3 = Color3.new(0, 1, 0)
    consoleFrame.CanvasSize = UDim2.new(0, 0, 0, 1000)
    consoleFrame.Parent = mainFrame
    
    local consoleText = Instance.new("TextLabel")
    consoleText.Name = "ConsoleText"
    consoleText.Size = UDim2.new(1, -15, 0, 1000)
    consoleText.Position = UDim2.new(0, 0, 0, 0)
    consoleText.BackgroundTransparency = 1
    consoleText.Text = "Pet Analyzer Console Ready...\nWaiting for pet events..."
    consoleText.TextColor3 = Color3.new(0, 1, 0)
    consoleText.TextScaled = false
    consoleText.TextSize = 12
    consoleText.Font = Enum.Font.Code
    consoleText.TextXAlignment = Enum.TextXAlignment.Left
    consoleText.TextYAlignment = Enum.TextYAlignment.Top
    consoleText.TextWrapped = true
    consoleText.Parent = consoleFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –æ—Ç—á–µ—Ç–∞
    local reportButton = Instance.new("TextButton")
    reportButton.Name = "ReportButton"
    reportButton.Size = UDim2.new(0.3, 0, 0, 30)
    reportButton.Position = UDim2.new(0.05, 0, 1, -40)
    reportButton.BackgroundColor3 = Color3.new(0, 0.7, 0)
    reportButton.BorderSizePixel = 2
    reportButton.BorderColor3 = Color3.new(0, 0, 0)
    reportButton.Text = "REPORT"
    reportButton.TextColor3 = Color3.new(1, 1, 1)
    reportButton.TextScaled = true
    reportButton.Font = Enum.Font.SourceSansBold
    reportButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
    local clearButton = Instance.new("TextButton")
    clearButton.Name = "ClearButton"
    clearButton.Size = UDim2.new(0.3, 0, 0, 30)
    clearButton.Position = UDim2.new(0.375, 0, 1, -40)
    clearButton.BackgroundColor3 = Color3.new(0.8, 0.4, 0)
    clearButton.BorderSizePixel = 2
    clearButton.BorderColor3 = Color3.new(0, 0, 0)
    clearButton.Text = "CLEAR"
    clearButton.TextColor3 = Color3.new(1, 1, 1)
    clearButton.TextScaled = true
    clearButton.Font = Enum.Font.SourceSansBold
    clearButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0.25, 0, 0, 30)
    closeButton.Position = UDim2.new(0.7, 0, 1, -40)
    closeButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
    closeButton.BorderSizePixel = 2
    closeButton.BorderColor3 = Color3.new(0, 0, 0)
    closeButton.Text = "CLOSE"
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.Parent = mainFrame
    
    -- –°–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    reportButton.MouseButton1Click:Connect(function()
        reportButton.Text = "GENERATING..."
        reportButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0)
        
        spawn(function()
            wait(0.5)
            
            -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø—Ä—è–º–æ –≤ GUI –∫–æ–Ω—Å–æ–ª—å
            logEvent("üìä DETAILED REPORT", "=== STARTING REPORT ===")
            logEvent("üìä STATS", "Events logged: " .. #petEvents)
            logEvent("üìä STATS", "Console lines: " .. #consoleOutput)
            
            -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            logEvent("üìä RECENT EVENTS", "Last 5 events:")
            local startIndex = math.max(1, #petEvents - 4)
            for i = startIndex, #petEvents do
                if petEvents[i] then
                    logEvent("üìä EVENT", petEvents[i].type .. ": " .. (petEvents[i].pet or "Unknown"))
                end
            end
            
            -- –ò—â–µ–º —Ç–µ–∫—É—â–∏–µ UUID –º–æ–¥–µ–ª–∏ –≤ workspace
            logEvent("üìä WORKSPACE SCAN", "Current UUID pets in workspace:")
            local foundUUIDPets = 0
            for _, child in pairs(Workspace:GetChildren()) do
                if child:IsA("Model") and isUUIDName(child.Name) then
                    foundUUIDPets = foundUUIDPets + 1
                    logEvent("üìä UUID PET", child.Name, {
                        Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                    })
                end
            end
            
            if foundUUIDPets == 0 then
                logEvent("üìä UUID PET", "No UUID pets found in workspace")
            end
            
            logEvent("üìä DETAILED REPORT", "=== REPORT COMPLETE ===")
            
            -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            reportButton.Text = "REPORT"
            reportButton.BackgroundColor3 = Color3.new(0, 0.7, 0)
        end)
    end)
    
    clearButton.MouseButton1Click:Connect(function()
        consoleOutput = {}
        petEvents = {}
        consoleText.Text = "Console cleared!\nWaiting for new events..."
        logEvent("SYSTEM", "Console cleared")
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        logEvent("SYSTEM", "COMPLETE SHUTDOWN - Pet Creation Analyzer terminating...")
        
        -- –û—Ç–∫–ª—é—á–∞–µ–º —Å–∫—Ä–∏–ø—Ç
        scriptRunning = false
        
        -- –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        for i, connection in ipairs(connections) do
            if connection then
                pcall(function() connection:Disconnect() end)
            end
        end
        connections = {}
        
        -- –ó–∞–∫—Ä—ã–≤–∞–µ–º GUI
        pcall(function() screenGui:Destroy() end)
        gui = nil
        
        print("üî¥ Pet Creation Analyzer –ü–û–õ–ù–û–°–¢–¨–Æ –í–´–ö–õ–Æ–ß–ï–ù!")
        print("üîå –í—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        print("üíÄ –°–∫—Ä–∏–ø—Ç –£–ë–ò–¢ –Ω–∞–≤—Å–µ–≥–¥–∞")
        print("‚ö∞Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ error()")
        
        -- –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–°–¢–ê–ù–û–í–ö–ê –°–ö–†–ò–ü–¢–ê –ß–ï–†–ï–ó ERROR
        spawn(function()
            wait(0.1)
            error("üî¥ PET ANALYZER SCRIPT TERMINATED BY USER - COMPLETE SHUTDOWN üíÄ")
        end)
    end)
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ PlayerGui
    screenGui.Parent = playerGui
    gui = screenGui
    
    print("‚úÖ GUI —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    logEvent("SYSTEM", "GUI created successfully")
    
    return screenGui
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Backpack
local function monitorBackpack()
    if not scriptRunning then return end
    logEvent("SYSTEM", "Starting backpack monitoring")
    
    local function onToolAdded(tool)
        if not scriptRunning then return end
        if tool:IsA("Tool") then
            local isPet = isPetTool(tool.Name)
            logEvent("üéí BACKPACK_ADDED", tool.Name, {
                ClassName = tool.ClassName,
                Handle = tool:FindFirstChild("Handle") and "Yes" or "No",
                IsPet = isPet and "YES" or "NO"
            })
        end
    end
    
    local function onToolRemoved(tool)
        if not scriptRunning then return end
        if tool:IsA("Tool") then
            logEvent("üéí BACKPACK_REMOVED", tool.Name, {
                IsPet = isPetTool(tool.Name) and "YES" or "NO"
            })
        end
    end
    
    -- –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Ç–µ–∫—É—â–µ–º—É backpack –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if player.Backpack then
        local conn1 = player.Backpack.ChildAdded:Connect(onToolAdded)
        local conn2 = player.Backpack.ChildRemoved:Connect(onToolRemoved)
        table.insert(connections, conn1)
        table.insert(connections, conn2)
    end
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä—É–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–° –ü–û–õ–ù–û–ô –ü–†–û–í–ï–†–ö–û–ô scriptRunning)
local function monitorCharacterTools()
    if not scriptRunning then return end
    logEvent("SYSTEM", "Starting character tools monitoring with scriptRunning checks")
    
    local function monitorCharacter(character)
        if not character or not scriptRunning then return end
        
        local success1 = pcall(function()
            local conn1 = character.ChildAdded:Connect(function(child)
                if not scriptRunning then return end
                if child and child:IsA("Tool") then
                    local hasHandle = child:FindFirstChild("Handle") and "Yes" or "No"
                    local isPet = isPetTool(child.Name)
                    logEvent("ü§≤ HAND_EQUIPPED", child.Name, {
                        Handle = hasHandle,
                        ClassName = child.ClassName,
                        IsPet = isPet and "YES" or "NO"
                    })
                end
            end)
            table.insert(connections, conn1)
        end)
        
        local success2 = pcall(function()
            local conn2 = character.ChildRemoved:Connect(function(child)
                if not scriptRunning then return end
                if child and child:IsA("Tool") then
                    local isPet = isPetTool(child.Name)
                    logEvent("ü§≤ HAND_REMOVED", child.Name, {
                        ClassName = child.ClassName,
                        IsPet = isPet and "YES" or "NO"
                    })
                    
                    -- –ü–û–ò–°–ö UUID –ü–ò–¢–û–ú–¶–ï–í –ö–ê–ö –í FutureBestVisual.lua (–¢–û–õ–¨–ö–û –î–õ–Ø –ü–ò–¢–û–ú–¶–ï–í)
                    if isPet then
                        logEvent("üîç SEARCH_START", "Searching UUID pets like FutureBestVisual.lua")
                        
                        spawn(function()
                            local searchAttempts = 0
                            local maxAttempts = 20 -- 20 –ø–æ–ø—ã—Ç–æ–∫ –ø–æ 0.5 —Å–µ–∫—É–Ω–¥—ã = 10 —Å–µ–∫—É–Ω–¥
                            
                            while searchAttempts < maxAttempts and scriptRunning do
                                searchAttempts = searchAttempts + 1
                                wait(0.5)
                                
                                if not scriptRunning then break end
                            
                            -- –¢–û–ß–ù–ê–Ø –ö–û–ü–ò–Ø –õ–û–ì–ò–ö–ò –ò–ó FutureBestVisual.lua
                            local foundUUIDPets = {}
                            
                            for _, obj in pairs(Workspace:GetDescendants()) do
                                if not scriptRunning then break end
                                
                                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏ (–ö–ê–ö –í FutureBestVisual.lua)
                                if obj:IsA("Model") and obj.Name:find("%{") and obj.Name:find("%}") then
                                    local success, modelCFrame = pcall(function() 
                                        return obj:GetModelCFrame() 
                                    end)
                                    
                                    if success then
                                        local playerChar = player.Character
                                        if playerChar and playerChar:FindFirstChild("HumanoidRootPart") then
                                            local distance = (modelCFrame.Position - playerChar.HumanoidRootPart.Position).Magnitude
                                            
                                            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–∫–∞–∫ –≤ FutureBestVisual.lua)
                                            if distance <= 100 then -- SEARCH_RADIUS –∏–∑ FutureBestVisual.lua
                                                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—à–∏ (–∫–∞–∫ –≤ FutureBestVisual.lua)
                                                local meshes = 0
                                                for _, part in pairs(obj:GetDescendants()) do
                                                    if part:IsA("MeshPart") or part:IsA("SpecialMesh") then
                                                        meshes = meshes + 1
                                                    end
                                                end
                                                
                                                table.insert(foundUUIDPets, {
                                                    model = obj,
                                                    name = obj.Name,
                                                    distance = distance,
                                                    meshes = meshes,
                                                    position = modelCFrame.Position
                                                })
                                            end
                                        end
                                    end
                                end
                            end
                            
                            -- –ï—Å–ª–∏ –Ω–∞—à–ª–∏ UUID –ø–∏—Ç–æ–º—Ü–µ–≤, –≤—ã–±–∏—Ä–∞–µ–º –ë–õ–ò–ñ–ê–ô–®–ï–ì–û
                            if #foundUUIDPets > 0 then
                                -- –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é –∏ –±–µ—Ä–µ–º —Å–∞–º–æ–≥–æ –±–ª–∏–∑–∫–æ–≥–æ
                                table.sort(foundUUIDPets, function(a, b) return a.distance < b.distance end)
                                local closestPet = foundUUIDPets[1]
                                
                                logEvent("üéØ CLOSEST_UUID_PET_FOUND", closestPet.name, {
                                    SearchAttempt = tostring(searchAttempts),
                                    Distance = string.format("%.1f studs", closestPet.distance),
                                    Meshes = tostring(closestPet.meshes),
                                    Position = tostring(closestPet.position),
                                    SearchTime = string.format("%.1f seconds", searchAttempts * 0.5),
                                    TotalFound = tostring(#foundUUIDPets)
                                })
                                break -- –ù–∞–π–¥–µ–Ω –±–ª–∏–∂–∞–π—à–∏–π –ø–∏—Ç–æ–º–µ—Ü, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø–æ–∏—Å–∫
                            end
                        end
                        
                        if searchAttempts >= maxAttempts and scriptRunning then
                            logEvent("‚è∞ SEARCH_COMPLETE", "UUID search completed after " .. (maxAttempts * 0.5) .. " seconds")
                        end
                        
                        if not scriptRunning then
                            print("üî¥ UUID search stopped due to script shutdown")
                        end
                    end)
                    end
                end
            end)
            table.insert(connections, conn2)
        end)
        
        if not success1 then
            logEvent("‚ö†Ô∏è ERROR", "Failed to connect ChildAdded for character")
        end
        if not success2 then
            logEvent("‚ö†Ô∏è ERROR", "Failed to connect ChildRemoved for character")
        end
    end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if player.Character then
        monitorCharacter(player.Character)
    end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –Ω–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    player.CharacterAdded:Connect(monitorCharacter)
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Workspace –¥–ª—è UUID –ø–∏—Ç–æ–º—Ü–µ–≤ (–ö–ê–ö –í FutureBestVisual.lua)
local function monitorWorkspacePets()
    logEvent("SYSTEM", "Starting workspace monitoring like FutureBestVisual.lua")
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∫–æ—Ä–Ω–µ–≤–æ–π Workspace
    Workspace.ChildAdded:Connect(function(child)
        if child:IsA("Model") then
            local hasUUID = isUUIDName(child.Name)
            local hasBraces = hasCurlyBraces(child.Name)
            
            if hasUUID or hasBraces then
                logEvent("üåç WORKSPACE_ROOT_ADDED", child.Name, {
                    HasUUID = hasUUID and "YES" or "NO",
                    HasBraces = hasBraces and "YES" or "NO",
                    Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                })
            end
            
            if hasUUID then
                logEvent("üéØ UUID_PET_IN_ROOT", child.Name, {
                    Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                })
            end
        end
    end)
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º Workspace.Visuals (–ö–ê–ö –í FutureBestVisual.lua)
    local visualsFolder = Workspace:FindFirstChild("Visuals")
    if visualsFolder then
        logEvent("SYSTEM", "Found Workspace.Visuals folder - monitoring it")
        
        visualsFolder.ChildAdded:Connect(function(child)
            if child:IsA("Model") then
                local hasUUID = isUUIDName(child.Name)
                local hasBraces = hasCurlyBraces(child.Name)
                
                if hasUUID or hasBraces then
                    logEvent("üé® VISUALS_FOLDER_ADDED", child.Name, {
                        HasUUID = hasUUID and "YES" or "NO",
                        HasBraces = hasBraces and "YES" or "NO",
                        Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                    })
                end
                
                if hasUUID then
                    logEvent("üéØ UUID_PET_IN_VISUALS", child.Name, {
                        Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                    })
                end
            end
        end)
    else
        logEvent("SYSTEM", "No Workspace.Visuals folder found")
        
        -- –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –ø–æ—è–≤–ª–µ–Ω–∏—è Visuals –ø–∞–ø–∫–∏
        Workspace.ChildAdded:Connect(function(child)
            if child.Name == "Visuals" and child:IsA("Folder") then
                logEvent("SYSTEM", "Workspace.Visuals folder appeared - setting up monitoring")
                
                child.ChildAdded:Connect(function(visualChild)
                    if visualChild:IsA("Model") and isUUIDName(visualChild.Name) then
                        logEvent("üéØ UUID_PET_IN_NEW_VISUALS", visualChild.Name, {
                            Position = visualChild.PrimaryPart and tostring(visualChild.PrimaryPart.Position) or "Unknown"
                        })
                    end
                end)
            end
        end)
    end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —É–¥–∞–ª–µ–Ω–∏—è
    Workspace.ChildRemoved:Connect(function(child)
        if child:IsA("Model") and (isUUIDName(child.Name) or hasCurlyBraces(child.Name)) then
            logEvent("üåç WORKSPACE_MODEL_REMOVED", child.Name)
        end
    end)
    
    -- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ workspace –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ (–° –ü–†–û–í–ï–†–ö–û–ô scriptRunning)
    spawn(function()
        while scriptRunning do
            wait(5)
            if not scriptRunning then break end
            
            local success = pcall(function()
                if not scriptRunning then return end
                
                local foundModels = 0
                for _, child in pairs(Workspace:GetChildren()) do
                    if not scriptRunning then break end
                    if child:IsA("Model") and (isUUIDName(child.Name) or hasCurlyBraces(child.Name)) then
                        foundModels = foundModels + 1
                    end
                end
                
                if foundModels > 0 and scriptRunning then
                    logEvent("üîç PERIODIC_SCAN", "Found " .. foundModels .. " models with braces/UUID")
                    
                    -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2 –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
                    local count = 0
                    for _, child in pairs(Workspace:GetChildren()) do
                        if not scriptRunning then break end
                        if child:IsA("Model") and (isUUIDName(child.Name) or hasCurlyBraces(child.Name)) then
                            count = count + 1
                            if count <= 2 then
                                logEvent("üîç FOUND_MODEL", child.Name, {
                                    IsUUID = isUUIDName(child.Name) and "YES" or "NO",
                                    Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                                })
                            end
                        end
                    end
                end
            end)
            
            if not success and scriptRunning then
                logEvent("‚ö†Ô∏è ERROR", "Failed periodic workspace scan")
            end
        end
        
        if not scriptRunning then
            print("üî¥ Periodic scanning stopped")
        end
    end)
end

-- –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
local function startSystem()
    print("üöÄ –ó–∞–ø—É—Å–∫ Pet Creation Analyzer v3.0...")
    
    -- –°–æ–∑–¥–∞–µ–º GUI
    local success, error = pcall(createSimpleGUI)
    if not success then
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GUI:", error)
        return
    end
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    pcall(monitorBackpack)
    pcall(monitorCharacterTools)
    pcall(monitorWorkspacePets)
    
    print("‚úÖ Pet Creation Analyzer v3.0 –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("üìä GUI –∞–∫—Ç–∏–≤–µ–Ω, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω")
    print("üîç –ì–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É –ø–∏—Ç–æ–º—Ü–µ–≤!")
    
    logEvent("SYSTEM", "Pet Creation Analyzer v3.0 started successfully")
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É
startSystem()
