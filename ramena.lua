-- SimpleInventoryAnalyzer.lua
-- –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –±–µ–∑ GUI

local Players = game:GetService("Players")
local player = Players.LocalPlayer

print("üîç === –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –ò–ù–í–ï–ù–¢–ê–†–Ø ===")

local playerGui = player:FindFirstChild("PlayerGui")
if not playerGui then
    print("‚ùå PlayerGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

local backpackGui = playerGui:FindFirstChild("BackpackGui")
if not backpackGui then
    print("‚ùå BackpackGui –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    return
end

print("‚úÖ BackpackGui –Ω–∞–π–¥–µ–Ω, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
print("")

-- –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
local function analyzeElement(element, depth, path)
    depth = depth or 0
    path = path or ""
    
    if depth > 3 then return end -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≥–ª—É–±–∏–Ω—É
    
    local indent = string.rep("  ", depth)
    local fullPath = path .. "/" .. element.Name
    
    print(indent .. "üìÅ " .. element.Name .. " (" .. element.ClassName .. ")")
    
    if element:IsA("Frame") or element:IsA("ScrollingFrame") then
        local childCount = 0
        local buttonCount = 0
        local petCount = 0
        local itemCount = 0
        
        for _, child in pairs(element:GetChildren()) do
            if child:IsA("GuiObject") and child.Visible then
                childCount = childCount + 1
                
                if child:IsA("TextButton") then
                    buttonCount = buttonCount + 1
                    
                    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–Ω–æ–ø–∫–∏
                    for _, desc in pairs(child:GetDescendants()) do
                        if desc:IsA("TextLabel") and desc.Text ~= "" then
                            if desc.Text:lower():find("kg") and desc.Text:lower():find("age") then
                                petCount = petCount + 1
                            else
                                itemCount = itemCount + 1
                            end
                            break
                        end
                    end
                end
            end
        end
        
        if childCount > 0 then
            print(indent .. "   üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤: " .. childCount .. " | –ö–Ω–æ–ø–æ–∫: " .. buttonCount .. " | –ü–∏—Ç–æ–º—Ü–µ–≤: " .. petCount .. " | –ü—Ä–µ–¥–º–µ—Ç–æ–≤: " .. itemCount)
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ —ç—Ç–æ –±—ã—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ–º
            if childCount >= 8 and childCount <= 15 and buttonCount >= 5 then
                print(indent .. "   ‚≠ê –í–û–ó–ú–û–ñ–ù–´–ô –û–°–ù–û–í–ù–û–ô –ò–ù–í–ï–ù–¢–ê–†–¨!")
                print(indent .. "   üéØ –ü—É—Ç—å: " .. fullPath)
            end
        end
        
        -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        for _, child in pairs(element:GetChildren()) do
            if child:IsA("GuiObject") then
                analyzeElement(child, depth + 1, fullPath)
            end
        end
        
    elseif element:IsA("TextButton") then
        -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–Ω–æ–ø–∫–∏
        for _, desc in pairs(element:GetDescendants()) do
            if desc:IsA("TextLabel") and desc.Text ~= "" then
                if desc.Text:lower():find("kg") and desc.Text:lower():find("age") then
                    print(indent .. "   üêæ –ü–ò–¢–û–ú–ï–¶: " .. desc.Text)
                else
                    print(indent .. "   üì¶ –ü–†–ï–î–ú–ï–¢: " .. desc.Text)
                end
                break
            end
        end
    end
end

-- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º BackpackGui
analyzeElement(backpackGui, 0, "PlayerGui")

print("")
print("üéØ === –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù ===")
print("üí° –ò—â–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø–æ–º–µ—Ç–∫–æ–π ‚≠ê –í–û–ó–ú–û–ñ–ù–´–ô –û–°–ù–û–í–ù–û–ô –ò–ù–í–ï–ù–¢–ê–†–¨!")
print("üìù –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 8-15 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–Ω–æ–ø–æ–∫")
