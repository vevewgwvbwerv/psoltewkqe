-- Pet Creation Analyzer v3.0 - –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
-- –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π, –≤—ã–∑—ã–≤–∞—é—â–∏—Ö –æ—à–∏–±–∫–∏

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã
local gui = nil
local consoleOutput = {}
local petEvents = {}

print("üöÄ Pet Creation Analyzer v3.0 - –ó–∞–ø—É—Å–∫...")

-- –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ UUID –∏–º–µ–Ω–∏ (–ü–ï–†–ï–ú–ï–©–ï–ù–ê –í–´–®–ï)
local function isUUIDName(name)
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –∏ UUID —Ñ–æ—Ä–º–∞—Ç
    return name:find("{") and name:find("}") and name:find("%-") and #name > 30
end

-- –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
local function logEvent(eventType, petName, details)
    local timestamp = os.date("%H:%M:%S")
    local logMessage = string.format("[%s] %s: %s", timestamp, eventType, petName or "Unknown")
    
    print(logMessage)
    table.insert(consoleOutput, logMessage)
    
    if details then
        for key, value in pairs(details) do
            local detailMsg = string.format("  %s: %s", key, tostring(value))
            print(detailMsg)
            table.insert(consoleOutput, detailMsg)
        end
    end
    
    -- –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞
    if #consoleOutput > 50 then
        table.remove(consoleOutput, 1)
    end
    
    -- –û–±–Ω–æ–≤–ª—è–µ–º GUI –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if gui and gui.Parent then
        local success = pcall(function()
            local consoleText = gui:FindFirstChild("ConsoleText", true)
            if consoleText then
                local displayText = ""
                for i = math.max(1, #consoleOutput - 10), #consoleOutput do
                    displayText = displayText .. consoleOutput[i] .. "\n"
                end
                consoleText.Text = displayText
            end
        end)
    end
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ GUI
local function createSimpleGUI()
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ GUI...")
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π GUI
    local oldGui = playerGui:FindFirstChild("PetAnalyzerGUI")
    if oldGui then
        oldGui:Destroy()
    end
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetAnalyzerGUI"
    screenGui.ResetOnSpawn = false
    
    -- –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 400, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.2)
    mainFrame.BorderSizePixel = 3
    mainFrame.BorderColor3 = Color3.new(0, 0.5, 1)
    mainFrame.Parent = screenGui
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundColor3 = Color3.new(0, 0.3, 0.8)
    titleLabel.BorderSizePixel = 0
    titleLabel.Text = "Pet Creation Analyzer v3.0 - WORKING"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = mainFrame
    
    -- –ö–æ–Ω—Å–æ–ª—å
    local consoleText = Instance.new("TextLabel")
    consoleText.Name = "ConsoleText"
    consoleText.Size = UDim2.new(1, -10, 1, -80)
    consoleText.Position = UDim2.new(0, 5, 0, 35)
    consoleText.BackgroundColor3 = Color3.new(0, 0, 0)
    consoleText.BorderSizePixel = 2
    consoleText.BorderColor3 = Color3.new(0.3, 0.3, 0.3)
    consoleText.Text = "Pet Analyzer Console Ready...\nWaiting for pet events..."
    consoleText.TextColor3 = Color3.new(0, 1, 0)
    consoleText.TextScaled = false
    consoleText.TextSize = 12
    consoleText.Font = Enum.Font.Code
    consoleText.TextXAlignment = Enum.TextXAlignment.Left
    consoleText.TextYAlignment = Enum.TextYAlignment.Top
    consoleText.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –æ—Ç—á–µ—Ç–∞
    local reportButton = Instance.new("TextButton")
    reportButton.Name = "ReportButton"
    reportButton.Size = UDim2.new(0.3, 0, 0, 30)
    reportButton.Position = UDim2.new(0.05, 0, 1, -40)
    reportButton.BackgroundColor3 = Color3.new(0, 0.7, 0)
    reportButton.BorderSizePixel = 2
    reportButton.BorderColor3 = Color3.new(0, 0, 0)
    reportButton.Text = "REPORT"
    reportButton.TextColor3 = Color3.new(1, 1, 1)
    reportButton.TextScaled = true
    reportButton.Font = Enum.Font.SourceSansBold
    reportButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
    local clearButton = Instance.new("TextButton")
    clearButton.Name = "ClearButton"
    clearButton.Size = UDim2.new(0.3, 0, 0, 30)
    clearButton.Position = UDim2.new(0.375, 0, 1, -40)
    clearButton.BackgroundColor3 = Color3.new(0.8, 0.4, 0)
    clearButton.BorderSizePixel = 2
    clearButton.BorderColor3 = Color3.new(0, 0, 0)
    clearButton.Text = "CLEAR"
    clearButton.TextColor3 = Color3.new(1, 1, 1)
    clearButton.TextScaled = true
    clearButton.Font = Enum.Font.SourceSansBold
    clearButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0.25, 0, 0, 30)
    closeButton.Position = UDim2.new(0.7, 0, 1, -40)
    closeButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
    closeButton.BorderSizePixel = 2
    closeButton.BorderColor3 = Color3.new(0, 0, 0)
    closeButton.Text = "CLOSE"
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.Parent = mainFrame
    
    -- –°–æ–±—ã—Ç–∏—è –∫–Ω–æ–ø–æ–∫
    reportButton.MouseButton1Click:Connect(function()
        reportButton.Text = "GENERATING..."
        reportButton.BackgroundColor3 = Color3.new(0.5, 0.5, 0)
        
        spawn(function()
            wait(0.5)
            
            -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø—Ä—è–º–æ –≤ GUI –∫–æ–Ω—Å–æ–ª—å
            logEvent("üìä DETAILED REPORT", "=== STARTING REPORT ===")
            logEvent("üìä STATS", "Events logged: " .. #petEvents)
            logEvent("üìä STATS", "Console lines: " .. #consoleOutput)
            
            -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
            logEvent("üìä RECENT EVENTS", "Last 5 events:")
            local startIndex = math.max(1, #petEvents - 4)
            for i = startIndex, #petEvents do
                if petEvents[i] then
                    logEvent("üìä EVENT", petEvents[i].type .. ": " .. (petEvents[i].pet or "Unknown"))
                end
            end
            
            -- –ò—â–µ–º —Ç–µ–∫—É—â–∏–µ UUID –º–æ–¥–µ–ª–∏ –≤ workspace
            logEvent("üìä WORKSPACE SCAN", "Current UUID pets in workspace:")
            local foundUUIDPets = 0
            for _, child in pairs(Workspace:GetChildren()) do
                if child:IsA("Model") and isUUIDName(child.Name) then
                    foundUUIDPets = foundUUIDPets + 1
                    logEvent("üìä UUID PET", child.Name, {
                        Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                    })
                end
            end
            
            if foundUUIDPets == 0 then
                logEvent("üìä UUID PET", "No UUID pets found in workspace")
            end
            
            logEvent("üìä DETAILED REPORT", "=== REPORT COMPLETE ===")
            
            -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            reportButton.Text = "REPORT"
            reportButton.BackgroundColor3 = Color3.new(0, 0.7, 0)
        end)
    end)
    
    clearButton.MouseButton1Click:Connect(function()
        consoleOutput = {}
        petEvents = {}
        consoleText.Text = "Console cleared!\nWaiting for new events..."
        logEvent("SYSTEM", "Console cleared")
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
        gui = nil
        print("GUI closed")
    end)
    
    -- –î–æ–±–∞–≤–ª—è–µ–º –≤ PlayerGui
    screenGui.Parent = playerGui
    gui = screenGui
    
    print("‚úÖ GUI —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
    logEvent("SYSTEM", "GUI created successfully")
    
    return screenGui
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Backpack
local function monitorBackpack()
    logEvent("SYSTEM", "Starting backpack monitoring")
    
    local function onToolAdded(tool)
        if tool:IsA("Tool") then
            logEvent("BACKPACK_ADDED", tool.Name, {
                ClassName = tool.ClassName,
                Handle = tool:FindFirstChild("Handle") and "Yes" or "No"
            })
        end
    end
    
    local function onToolRemoved(tool)
        if tool:IsA("Tool") then
            logEvent("BACKPACK_REMOVED", tool.Name)
        end
    end
    
    -- –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫ —Ç–µ–∫—É—â–µ–º—É backpack
    if player.Backpack then
        player.Backpack.ChildAdded:Connect(onToolAdded)
        player.Backpack.ChildRemoved:Connect(onToolRemoved)
    end
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä—É–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–£–ü–†–û–©–ï–ù–ù–´–ô –ë–ï–ó –û–®–ò–ë–û–ö)
local function monitorCharacterTools()
    logEvent("SYSTEM", "Starting character tools monitoring (simplified)")
    
    local function monitorCharacter(character)
        if not character then return end
        
        local success1 = pcall(function()
            character.ChildAdded:Connect(function(child)
                if child and child:IsA("Tool") then
                    local hasHandle = child:FindFirstChild("Handle") and "Yes" or "No"
                    logEvent("ü§≤ HAND_EQUIPPED", child.Name, {
                        Handle = hasHandle,
                        ClassName = child.ClassName
                    })
                end
            end)
        end)
        
        local success2 = pcall(function()
            character.ChildRemoved:Connect(function(child)
                if child and child:IsA("Tool") then
                    logEvent("ü§≤ HAND_REMOVED", child.Name, {
                        ClassName = child.ClassName
                    })
                    
                    -- –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ workspace —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                    spawn(function()
                        wait(2)
                        local success = pcall(function()
                            for _, workspaceChild in pairs(Workspace:GetChildren()) do
                                if workspaceChild:IsA("Model") and isUUIDName(workspaceChild.Name) then
                                    logEvent("üîó POSSIBLE_PET_ON_GROUND", workspaceChild.Name, {
                                        Position = workspaceChild.PrimaryPart and tostring(workspaceChild.PrimaryPart.Position) or "Unknown"
                                    })
                                    break -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π
                                end
                            end
                        end)
                        if not success then
                            logEvent("‚ö†Ô∏è ERROR", "Failed to scan workspace for UUID pets")
                        end
                    end)
                end
            end)
        end)
        
        if not success1 then
            logEvent("‚ö†Ô∏è ERROR", "Failed to connect ChildAdded for character")
        end
        if not success2 then
            logEvent("‚ö†Ô∏è ERROR", "Failed to connect ChildRemoved for character")
        end
    end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    if player.Character then
        monitorCharacter(player.Character)
    end
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –Ω–æ–≤—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    player.CharacterAdded:Connect(monitorCharacter)
end

-- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Workspace –¥–ª—è UUID –ø–∏—Ç–æ–º—Ü–µ–≤ (–£–õ–£–ß–®–ï–ù–ù–´–ô)
local function monitorWorkspacePets()
    logEvent("SYSTEM", "Starting workspace pets monitoring (UUID detection)")
    
    -- –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Workspace
    Workspace.ChildAdded:Connect(function(child)
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏ —Å UUID –∏–º–µ–Ω–∞–º–∏
        if child:IsA("Model") and isUUIDName(child.Name) then
            logEvent("üåç WORKSPACE_UUID_PET_ADDED", child.Name, {
                ClassName = child.ClassName,
                PrimaryPart = child.PrimaryPart and child.PrimaryPart.Name or "None",
                Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
            })
        end
        
        -- –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω—ã–µ –º–æ–¥–µ–ª–∏ —Å —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏
        if child:IsA("Model") and child.Name:find("{") then
            logEvent("üåç WORKSPACE_MODEL_ADDED", child.Name, {
                ClassName = child.ClassName,
                HasUUID = isUUIDName(child.Name) and "Yes" or "No"
            })
        end
    end)
    
    Workspace.ChildRemoved:Connect(function(child)
        if child:IsA("Model") and (child.Name:find("{") or isUUIDName(child.Name)) then
            logEvent("üåç WORKSPACE_PET_REMOVED", child.Name)
        end
    end)
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–æ–¥–µ–ª—è—Ö
    local function monitorExistingModels()
        for _, child in pairs(Workspace:GetChildren()) do
            if child:IsA("Model") and isUUIDName(child.Name) then
                logEvent("üîç EXISTING_UUID_PET_FOUND", child.Name, {
                    Position = child.PrimaryPart and tostring(child.PrimaryPart.Position) or "Unknown"
                })
            end
        end
    end
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    spawn(function()
        wait(2)
        monitorExistingModels()
    end)
end

-- –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
local function startSystem()
    print("üöÄ –ó–∞–ø—É—Å–∫ Pet Creation Analyzer v3.0...")
    
    -- –°–æ–∑–¥–∞–µ–º GUI
    local success, error = pcall(createSimpleGUI)
    if not success then
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GUI:", error)
        return
    end
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    pcall(monitorBackpack)
    pcall(monitorCharacterTools)
    pcall(monitorWorkspacePets)
    
    print("‚úÖ Pet Creation Analyzer v3.0 –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("üìä GUI –∞–∫—Ç–∏–≤–µ–Ω, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤–∫–ª—é—á–µ–Ω")
    print("üîç –ì–æ—Ç–æ–≤ –∫ –∞–Ω–∞–ª–∏–∑—É –ø–∏—Ç–æ–º—Ü–µ–≤!")
    
    logEvent("SYSTEM", "Pet Creation Analyzer v3.0 started successfully")
end

-- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É
startSystem()
