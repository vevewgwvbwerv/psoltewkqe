-- AdvancedTextReplacer.lua
-- –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—Å—Ç–∞ + –∞–Ω–∞–ª–∏–∑ –∏ –∑–∞–º–µ–Ω–∞ –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Tool –≤ —Ä—É–∫–µ

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

print("=== ADVANCED TEXT REPLACER ===")

-- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local currentHandTool = nil
local analyzedToolData = nil
local diagnosticConnection = nil

-- –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
local animationData = {
    animators = {},
    animationTracks = {},
    scripts = {},
    motor6ds = {},
    cframes = {},
    lastUpdate = 0
}

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ
local function findHandPetTool()
    local character = player.Character
    if not character then return nil end
    
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and string.find(tool.Name, "%[") and string.find(tool.Name, "KG%]") then
            return tool
        end
    end
    return nil
end

-- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞ –≤ Hotbar
local function replaceTextInHotbar(slotNumber, newText)
    local playerGui = player:FindFirstChild("PlayerGui")
    if not playerGui then return false end
    
    local backpackGui = playerGui:FindFirstChild("BackpackGui")
    if not backpackGui then return false end
    
    local backpack = backpackGui:FindFirstChild("Backpack")
    if not backpack then return false end
    
    local hotbar = backpack:FindFirstChild("Hotbar")
    if not hotbar then return false end
    
    local targetSlot = hotbar:FindFirstChild(tostring(slotNumber))
    if not targetSlot then return false end
    
    -- –ò—â–µ–º TextLabel –≤ —Å–ª–æ—Ç–µ
    for _, desc in pairs(targetSlot:GetDescendants()) do
        if desc:IsA("TextLabel") and desc.Text ~= "" then
            local oldText = desc.Text
            desc.Text = newText
            print("‚úÖ –¢–µ–∫—Å—Ç –∑–∞–º–µ–Ω–µ–Ω: " .. oldText .. " ‚Üí " .. newText)
            return true
        end
    end
    
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è Tool
local function deepCopyTool(originalTool)
    if not originalTool then return nil end
    
    print("üîÑ –°–æ–∑–¥–∞—é –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é Tool: " .. originalTool.Name)
    
    local function copyInstance(instance)
        local copy = Instance.new(instance.ClassName)
        
        -- –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        local basicProperties = {"Name", "Archivable"}
        for _, property in pairs(basicProperties) do
            local success, value = pcall(function()
                return instance[property]
            end)
            if success then
                pcall(function()
                    copy[property] = value
                end)
            end
        end
        
        -- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Tool
        if instance:IsA("Tool") then
            pcall(function() copy.RequiresHandle = instance.RequiresHandle end)
            pcall(function() copy.ManualActivationOnly = instance.ManualActivationOnly end)
            pcall(function() copy.CanBeDropped = instance.CanBeDropped end)
            pcall(function() copy.Enabled = instance.Enabled end)
            pcall(function() copy.ToolTip = instance.ToolTip end)
            print("üîß Tool —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã")
            
        -- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è BasePart
        elseif instance:IsA("BasePart") then
            pcall(function() copy.Size = instance.Size end)
            pcall(function() copy.CFrame = instance.CFrame end)
            pcall(function() copy.Material = instance.Material end)
            pcall(function() copy.BrickColor = instance.BrickColor end)
            pcall(function() copy.Color = instance.Color end)
            pcall(function() copy.Transparency = instance.Transparency end)
            pcall(function() copy.Reflectance = instance.Reflectance end)
            pcall(function() copy.CanCollide = instance.CanCollide end)
            pcall(function() copy.Anchored = instance.Anchored end)
            pcall(function() copy.Shape = instance.Shape end)
            pcall(function() copy.TopSurface = instance.TopSurface end)
            pcall(function() copy.BottomSurface = instance.BottomSurface end)
            print("üß± Part —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã: " .. instance.Name)
            
        -- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è SpecialMesh
        elseif instance:IsA("SpecialMesh") then
            pcall(function() copy.MeshType = instance.MeshType end)
            pcall(function() copy.MeshId = instance.MeshId end)
            pcall(function() copy.TextureId = instance.TextureId end)
            pcall(function() copy.Scale = instance.Scale end)
            pcall(function() copy.Offset = instance.Offset end)
            pcall(function() copy.VertexColor = instance.VertexColor end)
            print("üé® Mesh —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã")
            
        -- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Motor6D
        elseif instance:IsA("Motor6D") then
            pcall(function() copy.C0 = instance.C0 end)
            pcall(function() copy.C1 = instance.C1 end)
            -- Part0 –∏ Part1 —É—Å—Ç–∞–Ω–æ–≤–∏–º –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π
            print("‚öôÔ∏è Motor6D —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã: " .. instance.Name)
            
        -- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è Weld
        elseif instance:IsA("Weld") then
            pcall(function() copy.C0 = instance.C0 end)
            pcall(function() copy.C1 = instance.C1 end)
            print("üîó Weld —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã: " .. instance.Name)
            
        -- –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è LocalScript/Script
        elseif instance:IsA("LocalScript") or instance:IsA("Script") then
            pcall(function() copy.Enabled = instance.Enabled end)
            pcall(function() copy.Source = instance.Source end)
            print("üìú Script —Å–≤–æ–π—Å—Ç–≤–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã: " .. instance.Name)
        end
        
        return copy
    end
    
    -- –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å –¥–µ—Ç—å–º–∏
    local toolCopy = copyInstance(originalTool)
    
    -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º –≤—Å–µ—Ö –¥–µ—Ç–µ–π
    local function copyChildren(original, copy)
        for _, child in pairs(original:GetChildren()) do
            local childCopy = copyInstance(child)
            childCopy.Parent = copy
            copyChildren(child, childCopy) -- –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–æ–ø–∏—Ä—É–µ–º –¥–µ—Ç–µ–π –¥–µ—Ç–µ–π
        end
    end
    
    copyChildren(originalTool, toolCopy)
    
    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑–∏ Motor6D –∏ Weld
    local function restoreConnections(original, copy)
        for _, originalChild in pairs(original:GetDescendants()) do
            if originalChild:IsA("Motor6D") or originalChild:IsA("Weld") then
                -- –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–ø–∏—é
                local copyChild = copy:FindFirstChild(originalChild.Name, true)
                if copyChild and (copyChild:IsA("Motor6D") or copyChild:IsA("Weld")) then
                    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Part0 –∏ Part1 —Ç–æ–ª—å–∫–æ –¥–ª—è BasePart
                    if originalChild.Part0 and originalChild.Part0:IsA("BasePart") then
                        local part0Copy = copy:FindFirstChild(originalChild.Part0.Name, true)
                        if part0Copy and part0Copy:IsA("BasePart") then
                            pcall(function()
                                copyChild.Part0 = part0Copy
                                print("üîó Part0 –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: " .. originalChild.Name .. " -> " .. part0Copy.Name)
                            end)
                        else
                            print("‚ö†Ô∏è Part0 –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ BasePart: " .. originalChild.Name)
                        end
                    end
                    if originalChild.Part1 and originalChild.Part1:IsA("BasePart") then
                        local part1Copy = copy:FindFirstChild(originalChild.Part1.Name, true)
                        if part1Copy and part1Copy:IsA("BasePart") then
                            pcall(function()
                                copyChild.Part1 = part1Copy
                                print("üîó Part1 –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: " .. originalChild.Name .. " -> " .. part1Copy.Name)
                            end)
                        else
                            print("‚ö†Ô∏è Part1 –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ BasePart: " .. originalChild.Name)
                        end
                    end
                else
                    print("‚ö†Ô∏è –ö–æ–ø–∏—è Motor6D/Weld –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: " .. originalChild.Name)
                end
            end
        end
    end
    
    restoreConnections(originalTool, toolCopy)
    
    print("‚úÖ –ì–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è Tool —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    return toolCopy
end

-- –§—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ Tool
local function analyzeTool(tool)
    if not tool then return nil end
    
    print("\nüîç === –ê–ù–ê–õ–ò–ó TOOL: " .. tool.Name .. " ===")
    
    local toolData = {
        name = tool.Name,
        className = tool.ClassName,
        parts = {},
        motor6ds = {},
        welds = {},
        meshes = {},
        scripts = {},
        animators = {},
        totalChildren = 0
    }
    
    -- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    for _, obj in pairs(tool:GetDescendants()) do
        toolData.totalChildren = toolData.totalChildren + 1
        
        if obj:IsA("BasePart") then
            table.insert(toolData.parts, {
                name = obj.Name,
                size = obj.Size,
                cframe = obj.CFrame,
                material = obj.Material.Name,
                transparency = obj.Transparency
            })
            print("üß± Part: " .. obj.Name .. " | Size: " .. tostring(obj.Size))
            
        elseif obj:IsA("Motor6D") then
            table.insert(toolData.motor6ds, {
                name = obj.Name,
                part0 = obj.Part0 and obj.Part0.Name or "NIL",
                part1 = obj.Part1 and obj.Part1.Name or "NIL",
                c0 = obj.C0,
                c1 = obj.C1
            })
            print("‚öôÔ∏è Motor6D: " .. obj.Name .. " | " .. (obj.Part0 and obj.Part0.Name or "NIL") .. " ‚Üí " .. (obj.Part1 and obj.Part1.Name or "NIL"))
            
        elseif obj:IsA("Weld") then
            table.insert(toolData.welds, {
                name = obj.Name,
                part0 = obj.Part0 and obj.Part0.Name or "NIL",
                part1 = obj.Part1 and obj.Part1.Name or "NIL",
                c0 = obj.C0,
                c1 = obj.C1
            })
            print("üîó Weld: " .. obj.Name)
            
        elseif obj:IsA("SpecialMesh") then
            table.insert(toolData.meshes, {
                name = obj.Name,
                meshType = obj.MeshType.Name,
                meshId = obj.MeshId,
                textureId = obj.TextureId,
                scale = obj.Scale
            })
            print("üé® Mesh: " .. obj.Name .. " | Type: " .. obj.MeshType.Name)
            
        elseif obj:IsA("LocalScript") or obj:IsA("Script") then
            table.insert(toolData.scripts, {
                name = obj.Name,
                className = obj.ClassName,
                enabled = obj.Enabled
            })
            print("üìú Script: " .. obj.Name .. " (" .. obj.ClassName .. ")")
            
        elseif obj:IsA("Animator") then
            table.insert(toolData.animators, {
                name = obj.Name,
                parent = obj.Parent.Name
            })
            print("üé≠ Animator: " .. obj.Name .. " –≤ " .. obj.Parent.Name)
        end
    end
    
    print("üìä –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω:")
    print("   üß± –ß–∞—Å—Ç–µ–π: " .. #toolData.parts)
    print("   ‚öôÔ∏è Motor6D: " .. #toolData.motor6ds)
    print("   üîó Weld: " .. #toolData.welds)
    print("   üé® –ú–µ—à–µ–π: " .. #toolData.meshes)
    print("   üìú –°–∫—Ä–∏–ø—Ç–æ–≤: " .. #toolData.scripts)
    print("   üé≠ –ê–Ω–∏–º–∞—Ç–æ—Ä–æ–≤: " .. #toolData.animators)
    print("   üì¶ –í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤: " .. toolData.totalChildren)
    
    return toolData
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã Shovel –Ω–∞ –∫–æ–ø–∏—é –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
local function replaceToolInHand(analyzedToolData)
    local character = player.Character
    if not character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    -- –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ
    local sourceTool = findHandPetTool()
    if not sourceTool then
        print("‚ùå –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    print("üîÑ –ó–∞–º–µ–Ω—è—é Shovel –≤ —Å–ª–æ—Ç–µ 1 –Ω–∞ –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞: " .. sourceTool.Name)
    
    -- –ù–û–í–´–ô –ü–û–î–•–û–î: –ó–∞–º–µ–Ω—è–µ–º Tool, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –≤ —Ä—É–∫–µ (–µ—Å–ª–∏ —ç—Ç–æ Shovel)
    local currentToolInHand = nil
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") then
            currentToolInHand = tool
            break
        end
    end
    
    if currentToolInHand and not (string.find(currentToolInHand.Name, "KG%]") and string.find(currentToolInHand.Name, "%[")) then
        -- –≠—Ç–æ –Ω–µ –ø–∏—Ç–æ–º–µ—Ü (–≤–µ—Ä–æ—è—Ç–Ω–æ Shovel), –∑–∞–º–µ–Ω—è–µ–º –µ–≥–æ
        print("üéØ –ó–∞–º–µ–Ω—è—é Tool –≤ —Ä—É–∫–µ: " .. currentToolInHand.Name)
        
        -- –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞
        local petCopy = sourceTool:Clone()
        petCopy.Name = "Dragonfly [6.36 KG] [Age 35]"
        
        -- –£–¥–∞–ª—è–µ–º Tool –∏–∑ —Ä—É–∫–∏ –∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –∫–æ–ø–∏—é
        currentToolInHand:Destroy()
        wait(0.1)
        petCopy.Parent = character
        
        -- –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1
        replaceTextInHotbar(1, "Dragonfly [6.36 KG] [Age 35]")
        
        print("‚úÖ Tool –≤ —Ä—É–∫–µ –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ Dragonfly!")
        print("‚úÖ –¢–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1 –∑–∞–º–µ–Ω–µ–Ω!")
        return true
    end
    
    -- –ù–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥: –∏—â–µ–º Tool, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–æ—Ç—É 1 –≤ Hotbar
    local function findToolInSlot1()
        -- –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ —Å–ª–æ—Ç–µ 1 (–º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ä—É–∫–µ)
        for _, tool in pairs(character:GetChildren()) do
            if tool:IsA("Tool") then
                print("üîç Tool –≤ —Ä—É–∫–µ: " .. tool.Name)
                -- –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–∏—Ç–æ–º–µ—Ü, —Ç–æ —ç—Ç–æ –Ω–∞—à –∫–∞–Ω–¥–∏–¥–∞—Ç
                if not (string.find(tool.Name, "KG%]") and string.find(tool.Name, "%[")) then
                    return tool
                end
            end
        end
        
        -- –ò—â–µ–º –≤ Backpack
        local backpack = character:FindFirstChild("Backpack")
        if backpack then
            for _, tool in pairs(backpack:GetChildren()) do
                if tool:IsA("Tool") then
                    print("üîç Tool –≤ Backpack: " .. tool.Name)
                    -- –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–∏—Ç–æ–º–µ—Ü, —Ç–æ —ç—Ç–æ –Ω–∞—à –∫–∞–Ω–¥–∏–¥–∞—Ç
                    if not (string.find(tool.Name, "KG%]") and string.find(tool.Name, "%[")) then
                        return tool
                    end
                end
            end
        end
        
        return nil
    end
    
    local shovelTool = findToolInSlot1()
    
    if shovelTool then
        print("‚úÖ –ù–∞–π–¥–µ–Ω Tool –¥–ª—è –∑–∞–º–µ–Ω—ã: " .. shovelTool.Name)
    else
        print("üîç –ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π Tool, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π...")
        -- –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ Tool, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π Tool –¥–ª—è –∑–∞–º–µ–Ω—ã
        shovelTool = Instance.new("Tool")
        shovelTool.Name = "Shovel [Destroy Plants]"
        shovelTool.RequiresHandle = true
        
        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 1, 1)
        handle.Material = Enum.Material.Wood
        handle.BrickColor = BrickColor.new("Brown")
        handle.CanCollide = false
        handle.Parent = shovelTool
        
        shovelTool.Parent = character:FindFirstChild("Backpack") or character
        print("‚úÖ –°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π Tool –¥–ª—è –∑–∞–º–µ–Ω—ã")
    end
    
    if not shovelTool then
        print("‚ùå Shovel –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
        return false
    end
    
    print("‚úÖ –ù–∞–π–¥–µ–Ω Shovel: " .. shovelTool.Name)
    print("üîÑ –°–æ–∑–¥–∞—é –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞ –¥–ª—è –∑–∞–º–µ–Ω—ã Shovel...")
    
    -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Å–≤—è–∑–µ–π
    print("üîÑ –°–æ–∑–¥–∞—é —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞...")
    local petCopy = sourceTool:Clone()
    if not petCopy then
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞")
        return false
    end
    print("‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
    -- –ú–µ–Ω—è–µ–º –∏–º—è –∫–æ–ø–∏–∏ –Ω–∞ Dragonfly
    petCopy.Name = "Dragonfly [6.36 KG] [Age 35]"
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Shovel
    local shovelParent = shovelTool.Parent
    local shovelName = shovelTool.Name
    
    print("üîÑ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–π Tool: " .. shovelName)
    print("üîÑ –†–æ–¥–∏—Ç–µ–ª—å Tool: " .. (shovelParent and shovelParent.Name or "NIL"))
    
    -- –£–¥–∞–ª—è–µ–º Shovel
    shovelTool:Destroy()
    wait(0.2) -- –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    
    -- –ü–æ–º–µ—â–∞–µ–º –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞ –Ω–∞ –º–µ—Å—Ç–æ Shovel
    print("üîÑ –†–∞–∑–º–µ—â–∞—é –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞ –≤: " .. (shovelParent and shovelParent.Name or "Character"))
    petCopy.Parent = shovelParent or character
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
    wait(0.1)
    if petCopy.Parent then
        print("‚úÖ –ö–æ–ø–∏—è —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–∞ –≤: " .. petCopy.Parent.Name)
    else
        print("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–æ–ø–∏–∏!")
        petCopy.Parent = character -- Fallback –≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    end
    
    print("üìù –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–º–µ–Ω–µ–Ω–Ω–æ–≥–æ Tool:")
    print("   üß± –ß–∞—Å—Ç–µ–π: " .. #analyzedToolData.parts)
    print("   ‚öôÔ∏è Motor6D: " .. #analyzedToolData.motor6ds)
    print("   üîó Weld: " .. #analyzedToolData.welds)
    print("   üé® –ú–µ—à–µ–π: " .. #analyzedToolData.meshes)
    print("   üìú –°–∫—Ä–∏–ø—Ç–æ–≤: " .. #analyzedToolData.scripts)
    
    print("‚úÖ Shovel —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ –∫–æ–ø–∏—é –ø–∏—Ç–æ–º—Ü–∞ Dragonfly!")
    print("‚úÖ –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å Dragonfly –≤–º–µ—Å—Ç–æ Shovel!")
    return true
end

-- –ù–û–í–´–ô –ü–û–î–•–û–î: –°–æ–∑–¥–∞–µ–º Tool –ø—Ä—è–º–æ –≤ —Å–ª–æ—Ç–µ 1 —á–µ—Ä–µ–∑ –∑–∞–º–µ–Ω—É —Ç–µ–∫—Å—Ç–∞ + —Å–æ–∑–¥–∞–Ω–∏–µ Tool
local function replaceToolStructure(analyzedToolData)
    local character = player.Character
    if not character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    -- –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ
    local sourceTool = findHandPetTool()
    if not sourceTool then
        print("‚ùå –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    print("üîÑ === –ù–û–í–´–ô –ü–û–î–•–û–î: –ü–†–Ø–ú–ê–Ø –ó–ê–ú–ï–ù–ê –°–õ–û–¢–ê 1 ===")
    
    -- –®–∞–≥ 1: –ó–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1
    print("üìù –®–∞–≥ 1: –ó–∞–º–µ–Ω—è—é —Ç–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1...")
    local textSuccess = replaceTextInHotbar(1, "Dragonfly [6.36 KG] [Age 35]")
    if textSuccess then
        print("‚úÖ –¢–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1 –∑–∞–º–µ–Ω–µ–Ω!")
    else
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1")
    end
    
    -- –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π Tool —Å –∏–º–µ–Ω–µ–º Dragonfly
    print("üîß –®–∞–≥ 2: –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π Tool Dragonfly...")
    local newTool = sourceTool:Clone()
    newTool.Name = "Dragonfly [6.36 KG] [Age 35]"
    
    -- –®–∞–≥ 3: –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ Tool (–∫—Ä–æ–º–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ)
    print("üóëÔ∏è –®–∞–≥ 3: –û—á–∏—â–∞—é –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –æ—Ç —Å—Ç–∞—Ä—ã—Ö Tool...")
    local backpack = character:FindFirstChild("Backpack")
    if backpack then
        for _, tool in pairs(backpack:GetChildren()) do
            if tool:IsA("Tool") then
                print("   üóëÔ∏è –£–¥–∞–ª—è—é: " .. tool.Name)
                tool:Destroy()
            end
        end
    end
    
    -- –£–¥–∞–ª—è–µ–º Tool –∏–∑ —Ä—É–∫ (–∫—Ä–æ–º–µ –ø–∏—Ç–æ–º—Ü–∞)
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and not (string.find(tool.Name, "KG%]") and string.find(tool.Name, "%[")) then
            print("   üóëÔ∏è –£–¥–∞–ª—è—é –∏–∑ —Ä—É–∫: " .. tool.Name)
            tool:Destroy()
        end
    end
    
    wait(0.2)
    
    -- –®–∞–≥ 4: –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π Tool –≤ Backpack
    print("üì¶ –®–∞–≥ 4: –î–æ–±–∞–≤–ª—è—é Dragonfly –≤ Backpack...")
    if not backpack then
        backpack = Instance.new("Backpack")
        backpack.Parent = character
        print("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π Backpack")
    end
    
    newTool.Parent = backpack
    print("‚úÖ Dragonfly –¥–æ–±–∞–≤–ª–µ–Ω –≤ Backpack!")
    
    -- –®–∞–≥ 5: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ª–æ—Ç 1
    print("üîÑ –®–∞–≥ 5: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è—é —Å–ª–æ—Ç 1...")
    
    -- –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Å–ª–æ—Ç–∞ 1 –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    local playerGui = player:FindFirstChild("PlayerGui")
    if playerGui then
        local backpackGui = playerGui:FindFirstChild("BackpackGui")
        if backpackGui then
            local backpackFrame = backpackGui:FindFirstChild("Backpack")
            if backpackFrame then
                local hotbar = backpackFrame:FindFirstChild("Hotbar")
                if hotbar then
                    local slot1 = hotbar:FindFirstChild("1")
                    if slot1 then
                        -- –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–ª–æ—Ç 1
                        print("üéØ –ê–∫—Ç–∏–≤–∏—Ä—É—é —Å–ª–æ—Ç 1...")
                        
                        -- –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –≤ —Å–ª–æ—Ç–µ, —Å–∏–º—É–ª–∏—Ä—É–µ–º –∫–ª–∏–∫
                        for _, child in pairs(slot1:GetDescendants()) do
                            if child:IsA("GuiButton") or child:IsA("TextButton") or child:IsA("ImageButton") then
                                -- –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —Å–ª–æ—Ç—É
                                pcall(function()
                                    child.MouseButton1Click:Fire()
                                    print("‚úÖ –ö–ª–∏–∫ –ø–æ —Å–ª–æ—Ç—É 1 –≤—ã–ø–æ–ª–Ω–µ–Ω!")
                                end)
                                break
                            end
                        end
                        
                        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –ø—ã—Ç–∞–µ–º—Å—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å Tool –Ω–∞–ø—Ä—è–º—É—é
                        wait(0.1)
                        if newTool.Parent == backpack then
                            pcall(function()
                                newTool.Parent = character
                                print("‚úÖ Tool –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ —Ä—É–∫–∏!")
                            end)
                        end
                    end
                end
            end
        end
    end
    
    print("üéØ === –†–ï–ó–£–õ–¨–¢–ê–¢ ===")
    print("üìù –¢–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1: Dragonfly [6.36 KG] [Age 35]")
    print("üîß Tool –≤ Backpack: " .. newTool.Name)
    print("üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞: " .. analyzedToolData.totalChildren .. " –æ–±—ä–µ–∫—Ç–æ–≤")
    print("üîÑ –°–ª–æ—Ç 1 –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
    
    return true
end

-- –°–¢–ê–†–´–ô –ü–û–î–•–û–î (–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤)
local function replaceToolStructureOLD(analyzedToolData)
    local character = player.Character
    if not character then
        print("‚ùå –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    -- –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ
    local sourceTool = findHandPetTool()
    if not sourceTool then
        print("‚ùå –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return false
    end
    
    print("üîÑ –ò—â—É Shovel –¥–ª—è –∑–∞–º–µ–Ω—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...")
    
    -- –ò—â–µ–º Shovel –≤ —Ä—É–∫–µ –∏–ª–∏ –≤ Backpack
    local targetTool = nil
    
    -- –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä—É–∫–∏
    for _, tool in pairs(character:GetChildren()) do
        if tool:IsA("Tool") and (string.find(tool.Name, "Shovel") or string.find(tool.Name, "Destroy")) then
            targetTool = tool
            print("‚úÖ –ù–∞–π–¥–µ–Ω Shovel –≤ —Ä—É–∫–µ: " .. tool.Name)
            break
        end
    end
    
    -- –ï—Å–ª–∏ –Ω–µ –≤ —Ä—É–∫–µ, –∏—â–µ–º –≤ Backpack
    if not targetTool then
        local backpack = character:FindFirstChild("Backpack")
        if backpack then
            for _, tool in pairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and (string.find(tool.Name, "Shovel") or string.find(tool.Name, "Destroy")) then
                    targetTool = tool
                    print("‚úÖ –ù–∞–π–¥–µ–Ω Shovel –≤ Backpack: " .. tool.Name)
                    break
                end
            end
        end
    end
    
    if not targetTool then
        print("‚ùå Shovel –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∑–∞–º–µ–Ω—ã!")
        
        -- –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –µ—Å—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ
        print("üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ò–ù–í–ï–ù–¢–ê–†–Ø ===")
        print("üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ Character:")
        for _, tool in pairs(character:GetChildren()) do
            if tool:IsA("Tool") then
                print("   üîß –í —Ä—É–∫–µ: " .. tool.Name)
            end
        end
        
        local backpack = character:FindFirstChild("Backpack")
        if backpack then
            print("üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ Backpack:")
            for _, tool in pairs(backpack:GetChildren()) do
                if tool:IsA("Tool") then
                    print("   üîß –í Backpack: " .. tool.Name)
                end
            end
            
            if #backpack:GetChildren() == 0 then
                print("   ‚ö†Ô∏è Backpack –ø—É—Å—Ç!")
            end
        else
            print("‚ùå Backpack –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        end
        
        -- –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–π –Ω–µ-–ø–∏—Ç–æ–º–µ—Ü Tool
        print("üîç –ò—â—É –ª—é–±–æ–π –Ω–µ-–ø–∏—Ç–æ–º–µ—Ü Tool...")
        for _, tool in pairs(character:GetChildren()) do
            if tool:IsA("Tool") and not (string.find(tool.Name, "KG%]") and string.find(tool.Name, "%[")) then
                print("   üéØ –ù–∞–π–¥–µ–Ω –∫–∞–Ω–¥–∏–¥–∞—Ç –≤ —Ä—É–∫–µ: " .. tool.Name)
                targetTool = tool
                break
            end
        end
        
        if not targetTool and backpack then
            for _, tool in pairs(backpack:GetChildren()) do
                if tool:IsA("Tool") and not (string.find(tool.Name, "KG%]") and string.find(tool.Name, "%[")) then
                    print("   üéØ –ù–∞–π–¥–µ–Ω –∫–∞–Ω–¥–∏–¥–∞—Ç –≤ Backpack: " .. tool.Name)
                    targetTool = tool
                    break
                end
            end
        end
        
        if not targetTool then
            print("‚ùå –ù–∏–∫–∞–∫–∏—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö Tool –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return false
        else
            print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Tool: " .. targetTool.Name)
        end
    end
    
    print("üîÑ –ó–∞–º–µ–Ω—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É: " .. targetTool.Name .. " ‚Üí " .. sourceTool.Name)
    
    -- –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Shovel
    print("üóëÔ∏è –û—á–∏—â–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Shovel...")
    for _, child in pairs(targetTool:GetChildren()) do
        child:Destroy()
        print("   üóëÔ∏è –£–¥–∞–ª–µ–Ω: " .. child.Name)
    end
    
    wait(0.1)
    
    -- –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ Shovel
    print("üìã –ö–æ–ø–∏—Ä—É—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ Shovel...")
    for _, child in pairs(sourceTool:GetChildren()) do
        local childCopy = child:Clone()
        childCopy.Parent = targetTool
        print("   ‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: " .. child.Name .. " (" .. child.ClassName .. ")")
    end
    
    -- –ú–µ–Ω—è–µ–º –∏–º—è Tool –Ω–∞ Dragonfly
    local oldName = targetTool.Name
    targetTool.Name = "Dragonfly [6.36 KG] [Age 35]"
    
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üìù " .. oldName .. " ‚Üí " .. targetTool.Name)
    print("üìä –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: " .. analyzedToolData.totalChildren)
    
    return true
end

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è GUI
local function createControlGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "AdvancedTextReplacerGUI"
    screenGui.Parent = player:WaitForChild("PlayerGui")
    
    -- –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 500, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    mainFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 40)
    titleLabel.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
    titleLabel.BorderSizePixel = 0
    titleLabel.Text = "üîß –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –∑–∞–º–µ–Ω–∞ Tool"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = mainFrame
    
    -- –°—Ç–∞—Ç—É—Å
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, -20, 0, 60)
    statusLabel.Position = UDim2.new(0, 10, 0, 50)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = "–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ. –í–æ–∑—å–º–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."
    statusLabel.TextColor3 = Color3.new(1, 1, 1)
    statusLabel.TextScaled = true
    statusLabel.Font = Enum.Font.SourceSans
    statusLabel.TextWrapped = true
    statusLabel.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞
    local replaceTextButton = Instance.new("TextButton")
    replaceTextButton.Size = UDim2.new(1, -20, 0, 40)
    replaceTextButton.Position = UDim2.new(0, 10, 0, 120)
    replaceTextButton.BackgroundColor3 = Color3.new(0, 0.6, 0)
    replaceTextButton.BorderSizePixel = 0
    replaceTextButton.Text = "üìù –ó–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–ª–æ—Ç–∞ 1"
    replaceTextButton.TextColor3 = Color3.new(1, 1, 1)
    replaceTextButton.TextScaled = true
    replaceTextButton.Font = Enum.Font.SourceSansBold
    replaceTextButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ Tool
    local analyzeButton = Instance.new("TextButton")
    analyzeButton.Size = UDim2.new(1, -20, 0, 40)
    analyzeButton.Position = UDim2.new(0, 10, 0, 170)
    analyzeButton.BackgroundColor3 = Color3.new(0, 0.4, 0.8)
    analyzeButton.BorderSizePixel = 0
    analyzeButton.Text = "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –≤ —Ä—É–∫–µ"
    analyzeButton.TextColor3 = Color3.new(1, 1, 1)
    analyzeButton.TextScaled = true
    analyzeButton.Font = Enum.Font.SourceSansBold
    analyzeButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–º–µ–Ω—ã Tool
    local replaceToolButton = Instance.new("TextButton")
    replaceToolButton.Size = UDim2.new(1, -20, 0, 40)
    replaceToolButton.Position = UDim2.new(0, 10, 0, 220)
    replaceToolButton.BackgroundColor3 = Color3.new(0.8, 0.4, 0)
    replaceToolButton.BorderSizePixel = 0
    replaceToolButton.Text = "üîß –ó–∞–º–µ–Ω–∏—Ç—å Tool + —Ç–µ–∫—Å—Ç"
    replaceToolButton.TextColor3 = Color3.new(1, 1, 1)
    replaceToolButton.TextScaled = true
    replaceToolButton.Font = Enum.Font.SourceSansBold
    replaceToolButton.Visible = false
    replaceToolButton.Parent = mainFrame
    
    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(1, -20, 0, 40)
    closeButton.Position = UDim2.new(0, 10, 0, 320)
    closeButton.BackgroundColor3 = Color3.new(0.8, 0, 0)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "‚ùå –ó–∞–∫—Ä—ã—Ç—å"
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    replaceToolButton.TextScaled = true
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.Parent = mainFrame
    
    -- –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    replaceTextButton.MouseButton1Click:Connect(function()
        local success = replaceTextInHotbar(1, "Dragonfly [6.36 KG] [Age 35]")
        if success then
            statusLabel.Text = "‚úÖ –¢–µ–∫—Å—Ç –≤ —Å–ª–æ—Ç–µ 1 –∑–∞–º–µ–Ω–µ–Ω –Ω–∞ Dragonfly!"
            statusLabel.TextColor3 = Color3.new(0, 1, 0)
        else
            statusLabel.Text = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"
            statusLabel.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    analyzeButton.MouseButton1Click:Connect(function()
        local tool = findHandPetTool()
        if tool then
            statusLabel.Text = "üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é Tool: " .. tool.Name
            statusLabel.TextColor3 = Color3.new(0, 1, 1)
            
            analyzedToolData = analyzeTool(tool)
            
            -- –ù–ï –∑–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ, —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ!
            
            statusLabel.Text = "‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! Tool –≥–æ—Ç–æ–≤ –∫ –∑–∞–º–µ–Ω–µ."
            statusLabel.TextColor3 = Color3.new(0, 1, 0)
            replaceToolButton.Visible = true
        else
            statusLabel.Text = "‚ùå –ü–∏—Ç–æ–º–µ—Ü –≤ —Ä—É–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            statusLabel.TextColor3 = Color3.new(1, 0, 0)
        end
    end)
    
    replaceToolButton.MouseButton1Click:Connect(function()
        if analyzedToolData then
            statusLabel.Text = "üîÑ –í—ã–ø–æ–ª–Ω—è—é –∑–∞–º–µ–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."
            statusLabel.TextColor3 = Color3.new(1, 1, 0)
            
            -- –ù–û–í–´–ô –ü–û–î–•–û–î: –ó–∞–º–µ–Ω—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ Tool
            local success = replaceToolStructure(analyzedToolData)
            if success then
                -- –¢–∞–∫–∂–µ –∑–∞–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
                replaceTextInHotbar(1, "Dragonfly [6.36 KG] [Age 35]")
                statusLabel.Text = "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ Tool –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –ø–∏—Ç–æ–º—Ü–∞!"
                statusLabel.TextColor3 = Color3.new(0, 1, 0)
            else
                statusLabel.Text = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–º–µ–Ω–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É Tool"
                statusLabel.TextColor3 = Color3.new(1, 0, 0)
            end
        end
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        if diagnosticConnection then
            diagnosticConnection:Disconnect()
        end
        screenGui:Destroy()
    end)
end

-- –°–æ–∑–¥–∞–µ–º GUI
createControlGUI()

print("‚úÖ AdvancedTextReplacer –≥–æ—Ç–æ–≤!")
print("üéÆ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ GUI –¥–ª—è –∑–∞–º–µ–Ω—ã —Ç–µ–∫—Å—Ç–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ Tool")
